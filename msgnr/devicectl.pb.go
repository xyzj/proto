// Code generated by protoc-gen-go. DO NOT EDIT.
// source: devicectl.proto

package devproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Head struct {
	CmdIdx               int64    `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	CmdName              int32    `protobuf:"varint,2,opt,name=cmd_name,json=cmdName,proto3" json:"cmd_name,omitempty"`
	CmdMod               int32    `protobuf:"varint,3,opt,name=cmd_mod,json=cmdMod,proto3" json:"cmd_mod,omitempty"`
	Priority             int32    `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Err                  int32    `protobuf:"varint,6,opt,name=err,proto3" json:"err,omitempty"`
	Msg                  string   `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`
	Ver                  int32    `protobuf:"varint,8,opt,name=ver,proto3" json:"ver,omitempty"`
	ShellMod             int32    `protobuf:"varint,9,opt,name=shell_mod,json=shellMod,proto3" json:"shell_mod,omitempty"`
	DevMainid            []int64  `protobuf:"varint,10,rep,packed,name=dev_mainid,json=devMainid,proto3" json:"dev_mainid,omitempty"`
	DevCmdidx            []int32  `protobuf:"varint,11,rep,packed,name=dev_cmdidx,json=devCmdidx,proto3" json:"dev_cmdidx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Head) Reset()         { *m = Head{} }
func (m *Head) String() string { return proto.CompactTextString(m) }
func (*Head) ProtoMessage()    {}
func (*Head) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdefc457850caa8, []int{0}
}

func (m *Head) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Head.Unmarshal(m, b)
}
func (m *Head) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Head.Marshal(b, m, deterministic)
}
func (m *Head) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Head.Merge(m, src)
}
func (m *Head) XXX_Size() int {
	return xxx_messageInfo_Head.Size(m)
}
func (m *Head) XXX_DiscardUnknown() {
	xxx_messageInfo_Head.DiscardUnknown(m)
}

var xxx_messageInfo_Head proto.InternalMessageInfo

func (m *Head) GetCmdIdx() int64 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *Head) GetCmdName() int32 {
	if m != nil {
		return m.CmdName
	}
	return 0
}

func (m *Head) GetCmdMod() int32 {
	if m != nil {
		return m.CmdMod
	}
	return 0
}

func (m *Head) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Head) GetErr() int32 {
	if m != nil {
		return m.Err
	}
	return 0
}

func (m *Head) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Head) GetVer() int32 {
	if m != nil {
		return m.Ver
	}
	return 0
}

func (m *Head) GetShellMod() int32 {
	if m != nil {
		return m.ShellMod
	}
	return 0
}

func (m *Head) GetDevMainid() []int64 {
	if m != nil {
		return m.DevMainid
	}
	return nil
}

func (m *Head) GetDevCmdidx() []int32 {
	if m != nil {
		return m.DevCmdidx
	}
	return nil
}

type SysCommand struct {
	Onlinedevs           []*SysCommand_OnlineDevs `protobuf:"bytes,1,rep,name=onlinedevs,proto3" json:"onlinedevs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SysCommand) Reset()         { *m = SysCommand{} }
func (m *SysCommand) String() string { return proto.CompactTextString(m) }
func (*SysCommand) ProtoMessage()    {}
func (*SysCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdefc457850caa8, []int{1}
}

func (m *SysCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SysCommand.Unmarshal(m, b)
}
func (m *SysCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SysCommand.Marshal(b, m, deterministic)
}
func (m *SysCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SysCommand.Merge(m, src)
}
func (m *SysCommand) XXX_Size() int {
	return xxx_messageInfo_SysCommand.Size(m)
}
func (m *SysCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_SysCommand.DiscardUnknown(m)
}

var xxx_messageInfo_SysCommand proto.InternalMessageInfo

func (m *SysCommand) GetOnlinedevs() []*SysCommand_OnlineDevs {
	if m != nil {
		return m.Onlinedevs
	}
	return nil
}

type SysCommand_OnlineDevs struct {
	DevMainid            int64    `protobuf:"varint,1,opt,name=dev_mainid,json=devMainid,proto3" json:"dev_mainid,omitempty"`
	AssetMainid          string   `protobuf:"bytes,2,opt,name=asset_mainid,json=assetMainid,proto3" json:"asset_mainid,omitempty"`
	DevIp                uint64   `protobuf:"varint,3,opt,name=dev_ip,json=devIp,proto3" json:"dev_ip,omitempty"`
	DevPort              int32    `protobuf:"varint,4,opt,name=dev_port,json=devPort,proto3" json:"dev_port,omitempty"`
	Imei                 uint64   `protobuf:"varint,5,opt,name=imei,proto3" json:"imei,omitempty"`
	Signal               int32    `protobuf:"varint,6,opt,name=signal,proto3" json:"signal,omitempty"`
	NetType              int32    `protobuf:"varint,7,opt,name=net_type,json=netType,proto3" json:"net_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SysCommand_OnlineDevs) Reset()         { *m = SysCommand_OnlineDevs{} }
func (m *SysCommand_OnlineDevs) String() string { return proto.CompactTextString(m) }
func (*SysCommand_OnlineDevs) ProtoMessage()    {}
func (*SysCommand_OnlineDevs) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdefc457850caa8, []int{1, 0}
}

func (m *SysCommand_OnlineDevs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SysCommand_OnlineDevs.Unmarshal(m, b)
}
func (m *SysCommand_OnlineDevs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SysCommand_OnlineDevs.Marshal(b, m, deterministic)
}
func (m *SysCommand_OnlineDevs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SysCommand_OnlineDevs.Merge(m, src)
}
func (m *SysCommand_OnlineDevs) XXX_Size() int {
	return xxx_messageInfo_SysCommand_OnlineDevs.Size(m)
}
func (m *SysCommand_OnlineDevs) XXX_DiscardUnknown() {
	xxx_messageInfo_SysCommand_OnlineDevs.DiscardUnknown(m)
}

var xxx_messageInfo_SysCommand_OnlineDevs proto.InternalMessageInfo

func (m *SysCommand_OnlineDevs) GetDevMainid() int64 {
	if m != nil {
		return m.DevMainid
	}
	return 0
}

func (m *SysCommand_OnlineDevs) GetAssetMainid() string {
	if m != nil {
		return m.AssetMainid
	}
	return ""
}

func (m *SysCommand_OnlineDevs) GetDevIp() uint64 {
	if m != nil {
		return m.DevIp
	}
	return 0
}

func (m *SysCommand_OnlineDevs) GetDevPort() int32 {
	if m != nil {
		return m.DevPort
	}
	return 0
}

func (m *SysCommand_OnlineDevs) GetImei() uint64 {
	if m != nil {
		return m.Imei
	}
	return 0
}

func (m *SysCommand_OnlineDevs) GetSignal() int32 {
	if m != nil {
		return m.Signal
	}
	return 0
}

func (m *SysCommand_OnlineDevs) GetNetType() int32 {
	if m != nil {
		return m.NetType
	}
	return 0
}

type MsgWithCtrl struct {
	Head                 *Head       `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	SysCommand           *SysCommand `protobuf:"bytes,2,opt,name=sys_command,json=sysCommand,proto3" json:"sys_command,omitempty"`
	NrSlu1004            *NrSlu_1004 `protobuf:"bytes,10,opt,name=nr_slu1004,json=nrSlu1004,proto3" json:"nr_slu1004,omitempty"`
	NrSlu1010            *NrSlu_1010 `protobuf:"bytes,11,opt,name=nr_slu1010,json=nrSlu1010,proto3" json:"nr_slu1010,omitempty"`
	NrSlu1030            *NrSlu_1030 `protobuf:"bytes,12,opt,name=nr_slu1030,json=nrSlu1030,proto3" json:"nr_slu1030,omitempty"`
	NrSlu1031            *NrSlu_1031 `protobuf:"bytes,13,opt,name=nr_slu1031,json=nrSlu1031,proto3" json:"nr_slu1031,omitempty"`
	NrSlu1032            *NrSlu_1032 `protobuf:"bytes,14,opt,name=nr_slu1032,json=nrSlu1032,proto3" json:"nr_slu1032,omitempty"`
	NrSlu1033            *NrSlu_1033 `protobuf:"bytes,15,opt,name=nr_slu1033,json=nrSlu1033,proto3" json:"nr_slu1033,omitempty"`
	NrSlu1034            *NrSlu_1034 `protobuf:"bytes,16,opt,name=nr_slu1034,json=nrSlu1034,proto3" json:"nr_slu1034,omitempty"`
	NrSlu1035            *NrSlu_1035 `protobuf:"bytes,17,opt,name=nr_slu1035,json=nrSlu1035,proto3" json:"nr_slu1035,omitempty"`
	NrSlu1135            *NrSlu_1135 `protobuf:"bytes,18,opt,name=nr_slu1135,json=nrSlu1135,proto3" json:"nr_slu1135,omitempty"`
	NrRtu2032            *NrRtu_2032 `protobuf:"bytes,19,opt,name=nr_rtu2032,json=nrRtu2032,proto3" json:"nr_rtu2032,omitempty"`
	NrRtu2033            *NrRtu_2033 `protobuf:"bytes,20,opt,name=nr_rtu2033,json=nrRtu2033,proto3" json:"nr_rtu2033,omitempty"`
	NrRtu2035            *NrRtu_2035 `protobuf:"bytes,21,opt,name=nr_rtu2035,json=nrRtu2035,proto3" json:"nr_rtu2035,omitempty"`
	NrDev3003            *NrDev_3003 `protobuf:"bytes,22,opt,name=nr_dev3003,json=nrDev3003,proto3" json:"nr_dev3003,omitempty"`
	NrDev4003            *NrDev_4003 `protobuf:"bytes,23,opt,name=nr_dev4003,json=nrDev4003,proto3" json:"nr_dev4003,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MsgWithCtrl) Reset()         { *m = MsgWithCtrl{} }
func (m *MsgWithCtrl) String() string { return proto.CompactTextString(m) }
func (*MsgWithCtrl) ProtoMessage()    {}
func (*MsgWithCtrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fdefc457850caa8, []int{2}
}

func (m *MsgWithCtrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgWithCtrl.Unmarshal(m, b)
}
func (m *MsgWithCtrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgWithCtrl.Marshal(b, m, deterministic)
}
func (m *MsgWithCtrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithCtrl.Merge(m, src)
}
func (m *MsgWithCtrl) XXX_Size() int {
	return xxx_messageInfo_MsgWithCtrl.Size(m)
}
func (m *MsgWithCtrl) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithCtrl.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithCtrl proto.InternalMessageInfo

func (m *MsgWithCtrl) GetHead() *Head {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *MsgWithCtrl) GetSysCommand() *SysCommand {
	if m != nil {
		return m.SysCommand
	}
	return nil
}

func (m *MsgWithCtrl) GetNrSlu1004() *NrSlu_1004 {
	if m != nil {
		return m.NrSlu1004
	}
	return nil
}

func (m *MsgWithCtrl) GetNrSlu1010() *NrSlu_1010 {
	if m != nil {
		return m.NrSlu1010
	}
	return nil
}

func (m *MsgWithCtrl) GetNrSlu1030() *NrSlu_1030 {
	if m != nil {
		return m.NrSlu1030
	}
	return nil
}

func (m *MsgWithCtrl) GetNrSlu1031() *NrSlu_1031 {
	if m != nil {
		return m.NrSlu1031
	}
	return nil
}

func (m *MsgWithCtrl) GetNrSlu1032() *NrSlu_1032 {
	if m != nil {
		return m.NrSlu1032
	}
	return nil
}

func (m *MsgWithCtrl) GetNrSlu1033() *NrSlu_1033 {
	if m != nil {
		return m.NrSlu1033
	}
	return nil
}

func (m *MsgWithCtrl) GetNrSlu1034() *NrSlu_1034 {
	if m != nil {
		return m.NrSlu1034
	}
	return nil
}

func (m *MsgWithCtrl) GetNrSlu1035() *NrSlu_1035 {
	if m != nil {
		return m.NrSlu1035
	}
	return nil
}

func (m *MsgWithCtrl) GetNrSlu1135() *NrSlu_1135 {
	if m != nil {
		return m.NrSlu1135
	}
	return nil
}

func (m *MsgWithCtrl) GetNrRtu2032() *NrRtu_2032 {
	if m != nil {
		return m.NrRtu2032
	}
	return nil
}

func (m *MsgWithCtrl) GetNrRtu2033() *NrRtu_2033 {
	if m != nil {
		return m.NrRtu2033
	}
	return nil
}

func (m *MsgWithCtrl) GetNrRtu2035() *NrRtu_2035 {
	if m != nil {
		return m.NrRtu2035
	}
	return nil
}

func (m *MsgWithCtrl) GetNrDev3003() *NrDev_3003 {
	if m != nil {
		return m.NrDev3003
	}
	return nil
}

func (m *MsgWithCtrl) GetNrDev4003() *NrDev_4003 {
	if m != nil {
		return m.NrDev4003
	}
	return nil
}

func init() {
	proto.RegisterType((*Head)(nil), "devproto.Head")
	proto.RegisterType((*SysCommand)(nil), "devproto.SysCommand")
	proto.RegisterType((*SysCommand_OnlineDevs)(nil), "devproto.SysCommand.Online_devs")
	proto.RegisterType((*MsgWithCtrl)(nil), "devproto.MsgWithCtrl")
}

func init() { proto.RegisterFile("devicectl.proto", fileDescriptor_7fdefc457850caa8) }

var fileDescriptor_7fdefc457850caa8 = []byte{
	// 638 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x49, 0xd3, 0x76, 0xed, 0xc9, 0xd8, 0x86, 0xd9, 0x1f, 0x53, 0x84, 0x14, 0x7a, 0xd5,
	0xab, 0x2a, 0x89, 0x9b, 0x3b, 0x2e, 0x10, 0x1b, 0x12, 0x43, 0xda, 0x40, 0x19, 0x12, 0x97, 0x51,
	0x88, 0xad, 0x35, 0x52, 0xfe, 0xc9, 0xf1, 0xa2, 0xf5, 0x0d, 0x78, 0x05, 0xde, 0x88, 0x87, 0xe0,
	0x61, 0x90, 0x9d, 0xb6, 0x4e, 0xa4, 0xe6, 0xee, 0xf8, 0x3b, 0xdf, 0xcf, 0xb1, 0xbf, 0x53, 0x17,
	0x4e, 0x29, 0xab, 0x93, 0x98, 0xc5, 0x22, 0x5d, 0x96, 0xbc, 0x10, 0x05, 0x9a, 0x50, 0x56, 0xab,
	0x6a, 0x36, 0xc9, 0x79, 0xa3, 0xcd, 0x7f, 0x0f, 0x60, 0xf8, 0x85, 0x45, 0x14, 0x5d, 0xc1, 0x51,
	0x9c, 0xd1, 0x30, 0xa1, 0xcf, 0xd8, 0xb0, 0x8d, 0x85, 0x19, 0x8c, 0xe3, 0x8c, 0xde, 0xd2, 0x67,
	0xf4, 0x06, 0x26, 0xb2, 0x91, 0x47, 0x19, 0xc3, 0x03, 0xdb, 0x58, 0x8c, 0x02, 0x69, 0xbc, 0x8f,
	0x32, 0xb6, 0x63, 0xb2, 0x82, 0x62, 0x53, 0x75, 0x24, 0x73, 0x57, 0x50, 0x34, 0x83, 0x49, 0xc9,
	0x93, 0x82, 0x27, 0x62, 0x83, 0x47, 0xaa, 0xb3, 0x5f, 0xa3, 0x33, 0x30, 0x19, 0xe7, 0x78, 0xac,
	0x64, 0x59, 0x4a, 0x25, 0xab, 0x1e, 0xf1, 0x91, 0x6d, 0x2c, 0xa6, 0x81, 0x2c, 0xa5, 0x52, 0x33,
	0x8e, 0x27, 0x8d, 0xa7, 0x66, 0x1c, 0xbd, 0x85, 0x69, 0xb5, 0x66, 0x69, 0xaa, 0x3e, 0x36, 0x6d,
	0xb6, 0x54, 0x82, 0xfc, 0xdc, 0x7b, 0x00, 0xca, 0xea, 0x30, 0x8b, 0x92, 0x3c, 0xa1, 0x18, 0x6c,
	0x73, 0x61, 0x7e, 0x1a, 0x9c, 0x19, 0xc1, 0x94, 0xb2, 0xfa, 0x4e, 0x89, 0x3b, 0x4b, 0x9c, 0x51,
	0x79, 0x43, 0xcb, 0x36, 0x17, 0xa3, 0xbd, 0xe5, 0x5a, 0x89, 0xf3, 0x3f, 0x03, 0x80, 0x87, 0x4d,
	0x75, 0x5d, 0x64, 0x59, 0x94, 0x53, 0xf4, 0x11, 0xa0, 0xc8, 0xd3, 0x24, 0x67, 0x94, 0xd5, 0x15,
	0x36, 0x6c, 0x73, 0x61, 0x79, 0xf6, 0x72, 0x17, 0xe1, 0x52, 0x3b, 0x97, 0xdf, 0x94, 0x2d, 0x94,
	0xbe, 0xa0, 0xc5, 0xcc, 0xfe, 0x1a, 0x60, 0xb5, 0x7a, 0xe8, 0x5d, 0xe7, 0x98, 0x4d, 0xca, 0x9d,
	0x23, 0x1e, 0x47, 0x55, 0xc5, 0xc4, 0xce, 0x30, 0x50, 0x79, 0x58, 0x4a, 0xdb, 0x5a, 0x2e, 0x60,
	0x2c, 0x77, 0x48, 0x4a, 0x95, 0xf7, 0x30, 0x18, 0x51, 0x56, 0xdf, 0x96, 0x72, 0x44, 0x52, 0x2e,
	0x0b, 0x2e, 0xf0, 0xb0, 0x19, 0x11, 0x65, 0xf5, 0xf7, 0x82, 0x0b, 0x84, 0x60, 0x98, 0x64, 0x2c,
	0x51, 0x53, 0x18, 0x06, 0xaa, 0x46, 0x97, 0x30, 0xae, 0x92, 0xc7, 0x3c, 0x4a, 0xb7, 0x43, 0xd8,
	0xae, 0xe4, 0x36, 0x39, 0x13, 0xa1, 0xd8, 0x94, 0x4c, 0x0d, 0x63, 0x14, 0x1c, 0xe5, 0x4c, 0xfc,
	0xd8, 0x94, 0x6c, 0xfe, 0x6f, 0x0c, 0xd6, 0x5d, 0xf5, 0xf8, 0x33, 0x11, 0xeb, 0x6b, 0xc1, 0x53,
	0x34, 0x87, 0xe1, 0x9a, 0x45, 0xcd, 0x25, 0x2c, 0xef, 0x44, 0xc7, 0x22, 0x7f, 0x4b, 0x81, 0xea,
	0x21, 0x1f, 0xac, 0x6a, 0x53, 0x85, 0x71, 0x93, 0x92, 0xba, 0x8e, 0xe5, 0x9d, 0x1f, 0x4a, 0x30,
	0x80, 0x4a, 0xe7, 0xbe, 0x02, 0xc8, 0x79, 0x58, 0xa5, 0x4f, 0xae, 0xe3, 0xac, 0x30, 0x28, 0xea,
	0x42, 0x53, 0xf7, 0xaa, 0x17, 0xca, 0x66, 0x30, 0xcd, 0xf9, 0x43, 0xe3, 0x6b, 0x53, 0xae, 0x83,
	0xad, 0x5e, 0xca, 0x75, 0xf6, 0x94, 0xeb, 0xb4, 0x29, 0xe2, 0xe0, 0xe3, 0x5e, 0x8a, 0x68, 0x8a,
	0x74, 0x29, 0x17, 0xbf, 0xec, 0xa7, 0x5c, 0x4d, 0xb9, 0x1d, 0xca, 0xc3, 0x27, 0xfd, 0x94, 0xa7,
	0x29, 0xaf, 0x43, 0x11, 0x7c, 0xda, 0x4f, 0x11, 0x4d, 0x91, 0x0e, 0xb5, 0xc2, 0x67, 0xfd, 0x94,
	0xce, 0x90, 0x74, 0x32, 0x24, 0x3e, 0x7e, 0xd5, 0x4f, 0xf9, 0x9a, 0xf2, 0x5b, 0x94, 0x4b, 0x7c,
	0x8c, 0xfa, 0x28, 0x57, 0x53, 0xee, 0x9e, 0xe2, 0xe2, 0xc9, 0x93, 0x69, 0xbc, 0x3e, 0x40, 0x71,
	0xf1, 0x14, 0x7a, 0xdb, 0x34, 0x82, 0xc6, 0xd7, 0xa1, 0x08, 0x3e, 0xef, 0xa7, 0x88, 0xa6, 0x48,
	0x87, 0xf2, 0xf1, 0x45, 0x3f, 0xe5, 0x6b, 0x6a, 0x77, 0x42, 0xca, 0x6a, 0xe2, 0x38, 0x04, 0x5f,
	0x1e, 0xa0, 0xe4, 0x9b, 0x93, 0x4d, 0x49, 0xdd, 0x34, 0x3e, 0x4d, 0xad, 0x24, 0x75, 0xd5, 0x43,
	0xad, 0x34, 0x25, 0x4b, 0xef, 0x2b, 0xc0, 0x8d, 0xfa, 0xb3, 0x56, 0x8f, 0xeb, 0xc3, 0x6e, 0xf5,
	0x39, 0x5e, 0x17, 0xa8, 0x45, 0xb7, 0x5e, 0xe0, 0xec, 0xb0, 0x3c, 0x7f, 0xf1, 0x6b, 0xac, 0x44,
	0xf2, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x58, 0xca, 0x3b, 0x80, 0xff, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeviceCtrlClient is the client API for DeviceCtrl service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceCtrlClient interface {
	DeviceEcho(ctx context.Context, in *MsgWithCtrl, opts ...grpc.CallOption) (*MsgWithCtrl, error)
}

type deviceCtrlClient struct {
	cc *grpc.ClientConn
}

func NewDeviceCtrlClient(cc *grpc.ClientConn) DeviceCtrlClient {
	return &deviceCtrlClient{cc}
}

func (c *deviceCtrlClient) DeviceEcho(ctx context.Context, in *MsgWithCtrl, opts ...grpc.CallOption) (*MsgWithCtrl, error) {
	out := new(MsgWithCtrl)
	err := c.cc.Invoke(ctx, "/devproto.DeviceCtrl/DeviceEcho", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceCtrlServer is the server API for DeviceCtrl service.
type DeviceCtrlServer interface {
	DeviceEcho(context.Context, *MsgWithCtrl) (*MsgWithCtrl, error)
}

func RegisterDeviceCtrlServer(s *grpc.Server, srv DeviceCtrlServer) {
	s.RegisterService(&_DeviceCtrl_serviceDesc, srv)
}

func _DeviceCtrl_DeviceEcho_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWithCtrl)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceCtrlServer).DeviceEcho(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/devproto.DeviceCtrl/DeviceEcho",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceCtrlServer).DeviceEcho(ctx, req.(*MsgWithCtrl))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeviceCtrl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "devproto.DeviceCtrl",
	HandlerType: (*DeviceCtrlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeviceEcho",
			Handler:    _DeviceCtrl_DeviceEcho_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "devicectl.proto",
}
