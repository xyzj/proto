// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol_slu.proto

package wlst_pb2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Wlst_slu_fd00_a800_a400_b000_9c00_b000_f600_fc00_eb00
type WlstSluF400 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 操作结果
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	// 等待队列 status == 0x62时有效
	Remark int32 `protobuf:"varint,3,opt,name=remark,proto3" json:"remark,omitempty"`
	// 操作地址
	SluitemAddr          int32    `protobuf:"varint,4,opt,name=sluitem_addr,json=sluitemAddr,proto3" json:"sluitem_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSluF400) Reset()         { *m = WlstSluF400{} }
func (m *WlstSluF400) String() string { return proto.CompactTextString(m) }
func (*WlstSluF400) ProtoMessage()    {}
func (*WlstSluF400) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{0}
}

func (m *WlstSluF400) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF400.Unmarshal(m, b)
}
func (m *WlstSluF400) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF400.Marshal(b, m, deterministic)
}
func (m *WlstSluF400) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF400.Merge(m, src)
}
func (m *WlstSluF400) XXX_Size() int {
	return xxx_messageInfo_WlstSluF400.Size(m)
}
func (m *WlstSluF400) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF400.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF400 proto.InternalMessageInfo

func (m *WlstSluF400) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSluF400) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *WlstSluF400) GetRemark() int32 {
	if m != nil {
		return m.Remark
	}
	return 0
}

func (m *WlstSluF400) GetSluitemAddr() int32 {
	if m != nil {
		return m.SluitemAddr
	}
	return 0
}

// Wlst_slu_b900 nb控制器数据主报
type WlstSlu_3900 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 型号
	ModelInfo *WlstSlu_3900_ModelInfo `protobuf:"bytes,2,opt,name=model_info,json=modelInfo,proto3" json:"model_info,omitempty"`
	// 回路数据
	LightData []*WlstSlu_3900_LightData `protobuf:"bytes,3,rep,name=light_data,json=lightData,proto3" json:"light_data,omitempty"`
	// 漏电流
	LeakageCurrent float64 `protobuf:"fixed64,4,opt,name=leakage_current,json=leakageCurrent,proto3" json:"leakage_current,omitempty"`
	// 控制器状态
	SluitemStatus *WlstSlu_3900_SluitemStatus `protobuf:"bytes,5,opt,name=sluitem_status,json=sluitemStatus,proto3" json:"sluitem_status,omitempty"`
	// 时钟故障
	TimeFault *WlstSlu_3900_TimeFault `protobuf:"bytes,6,opt,name=time_fault,json=timeFault,proto3" json:"time_fault,omitempty"`
	// 自复位次数
	ResetCount int32 `protobuf:"varint,7,opt,name=reset_count,json=resetCount,proto3" json:"reset_count,omitempty"`
	// 时间
	DateTime int64 `protobuf:"varint,8,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	// 控制器运行参数
	SluitemPara *WlstSlu_3900_SluitemPara `protobuf:"bytes,9,opt,name=sluitem_para,json=sluitemPara,proto3" json:"sluitem_para,omitempty"`
	// 参考信号接收功率
	Rsrp int64 `protobuf:"varint,10,opt,name=rsrp,proto3" json:"rsrp,omitempty"`
	// 接收信号强度等级
	Rssi int64 `protobuf:"varint,11,opt,name=rssi,proto3" json:"rssi,omitempty"`
	// 信噪比
	Snr int64 `protobuf:"varint,12,opt,name=snr,proto3" json:"snr,omitempty"`
	// 物理小区标识
	Pci int64 `protobuf:"varint,13,opt,name=pci,proto3" json:"pci,omitempty"`
	// 参考信号接收质量
	Rsrq int64 `protobuf:"varint,14,opt,name=rsrq,proto3" json:"rsrq,omitempty"`
	// 终端发射功率
	Txpower int64 `protobuf:"varint,15,opt,name=txpower,proto3" json:"txpower,omitempty"`
	// 频点号
	Earfcn int64 `protobuf:"varint,16,opt,name=earfcn,proto3" json:"earfcn,omitempty"`
	// 信号覆盖等级
	Ecl int32 `protobuf:"varint,17,opt,name=ecl,proto3" json:"ecl,omitempty"`
	// 信号强度值
	Csq int32 `protobuf:"varint,18,opt,name=csq,proto3" json:"csq,omitempty"`
	// 主动上报原因，0-非主动上报，1-上电，2-开关灯状态变化，3-故障发生/消除，4-定时主动上报
	Reson int32 `protobuf:"varint,19,opt,name=reson,proto3" json:"reson,omitempty"`
	// 重连次数
	Retry int32 `protobuf:"varint,20,opt,name=retry,proto3" json:"retry,omitempty"`
	// 日出时间
	Sunrise int32 `protobuf:"varint,21,opt,name=sunrise,proto3" json:"sunrise,omitempty"`
	// 日落时间
	Sunset               int32    `protobuf:"varint,22,opt,name=sunset,proto3" json:"sunset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_3900) Reset()         { *m = WlstSlu_3900{} }
func (m *WlstSlu_3900) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_3900) ProtoMessage()    {}
func (*WlstSlu_3900) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{1}
}

func (m *WlstSlu_3900) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_3900.Unmarshal(m, b)
}
func (m *WlstSlu_3900) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_3900.Marshal(b, m, deterministic)
}
func (m *WlstSlu_3900) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_3900.Merge(m, src)
}
func (m *WlstSlu_3900) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_3900.Size(m)
}
func (m *WlstSlu_3900) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_3900.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_3900 proto.InternalMessageInfo

func (m *WlstSlu_3900) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSlu_3900) GetModelInfo() *WlstSlu_3900_ModelInfo {
	if m != nil {
		return m.ModelInfo
	}
	return nil
}

func (m *WlstSlu_3900) GetLightData() []*WlstSlu_3900_LightData {
	if m != nil {
		return m.LightData
	}
	return nil
}

func (m *WlstSlu_3900) GetLeakageCurrent() float64 {
	if m != nil {
		return m.LeakageCurrent
	}
	return 0
}

func (m *WlstSlu_3900) GetSluitemStatus() *WlstSlu_3900_SluitemStatus {
	if m != nil {
		return m.SluitemStatus
	}
	return nil
}

func (m *WlstSlu_3900) GetTimeFault() *WlstSlu_3900_TimeFault {
	if m != nil {
		return m.TimeFault
	}
	return nil
}

func (m *WlstSlu_3900) GetResetCount() int32 {
	if m != nil {
		return m.ResetCount
	}
	return 0
}

func (m *WlstSlu_3900) GetDateTime() int64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *WlstSlu_3900) GetSluitemPara() *WlstSlu_3900_SluitemPara {
	if m != nil {
		return m.SluitemPara
	}
	return nil
}

func (m *WlstSlu_3900) GetRsrp() int64 {
	if m != nil {
		return m.Rsrp
	}
	return 0
}

func (m *WlstSlu_3900) GetRssi() int64 {
	if m != nil {
		return m.Rssi
	}
	return 0
}

func (m *WlstSlu_3900) GetSnr() int64 {
	if m != nil {
		return m.Snr
	}
	return 0
}

func (m *WlstSlu_3900) GetPci() int64 {
	if m != nil {
		return m.Pci
	}
	return 0
}

func (m *WlstSlu_3900) GetRsrq() int64 {
	if m != nil {
		return m.Rsrq
	}
	return 0
}

func (m *WlstSlu_3900) GetTxpower() int64 {
	if m != nil {
		return m.Txpower
	}
	return 0
}

func (m *WlstSlu_3900) GetEarfcn() int64 {
	if m != nil {
		return m.Earfcn
	}
	return 0
}

func (m *WlstSlu_3900) GetEcl() int32 {
	if m != nil {
		return m.Ecl
	}
	return 0
}

func (m *WlstSlu_3900) GetCsq() int32 {
	if m != nil {
		return m.Csq
	}
	return 0
}

func (m *WlstSlu_3900) GetReson() int32 {
	if m != nil {
		return m.Reson
	}
	return 0
}

func (m *WlstSlu_3900) GetRetry() int32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

func (m *WlstSlu_3900) GetSunrise() int32 {
	if m != nil {
		return m.Sunrise
	}
	return 0
}

func (m *WlstSlu_3900) GetSunset() int32 {
	if m != nil {
		return m.Sunset
	}
	return 0
}

type WlstSlu_3900_ModelInfo struct {
	// 控制器回路数量
	SluitemLoop int32 `protobuf:"varint,1,opt,name=sluitem_loop,json=sluitemLoop,proto3" json:"sluitem_loop,omitempty"`
	// 节能方式 0-无控制，1-只有开关灯，2-一档节能，3-二档节能，4-RS485，5-PWM，6-0~10V
	PowerSaving int32 `protobuf:"varint,2,opt,name=power_saving,json=powerSaving,proto3" json:"power_saving,omitempty"`
	// 漏电流测量 0-无，1-有
	HasLeakage int32 `protobuf:"varint,3,opt,name=has_leakage,json=hasLeakage,proto3" json:"has_leakage,omitempty"`
	// 温度采集 0-无，1-有
	HasTemperature int32 `protobuf:"varint,4,opt,name=has_temperature,json=hasTemperature,proto3" json:"has_temperature,omitempty"`
	// 时钟 0-无，1-有
	HasTimer int32 `protobuf:"varint,5,opt,name=has_timer,json=hasTimer,proto3" json:"has_timer,omitempty"`
	// 型号 0-unknow
	Model int32 `protobuf:"varint,6,opt,name=model,proto3" json:"model,omitempty"`
	// 字符串型号
	SluitemType          string   `protobuf:"bytes,7,opt,name=sluitem_type,json=sluitemType,proto3" json:"sluitem_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_3900_ModelInfo) Reset()         { *m = WlstSlu_3900_ModelInfo{} }
func (m *WlstSlu_3900_ModelInfo) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_3900_ModelInfo) ProtoMessage()    {}
func (*WlstSlu_3900_ModelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{1, 0}
}

func (m *WlstSlu_3900_ModelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_3900_ModelInfo.Unmarshal(m, b)
}
func (m *WlstSlu_3900_ModelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_3900_ModelInfo.Marshal(b, m, deterministic)
}
func (m *WlstSlu_3900_ModelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_3900_ModelInfo.Merge(m, src)
}
func (m *WlstSlu_3900_ModelInfo) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_3900_ModelInfo.Size(m)
}
func (m *WlstSlu_3900_ModelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_3900_ModelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_3900_ModelInfo proto.InternalMessageInfo

func (m *WlstSlu_3900_ModelInfo) GetSluitemLoop() int32 {
	if m != nil {
		return m.SluitemLoop
	}
	return 0
}

func (m *WlstSlu_3900_ModelInfo) GetPowerSaving() int32 {
	if m != nil {
		return m.PowerSaving
	}
	return 0
}

func (m *WlstSlu_3900_ModelInfo) GetHasLeakage() int32 {
	if m != nil {
		return m.HasLeakage
	}
	return 0
}

func (m *WlstSlu_3900_ModelInfo) GetHasTemperature() int32 {
	if m != nil {
		return m.HasTemperature
	}
	return 0
}

func (m *WlstSlu_3900_ModelInfo) GetHasTimer() int32 {
	if m != nil {
		return m.HasTimer
	}
	return 0
}

func (m *WlstSlu_3900_ModelInfo) GetModel() int32 {
	if m != nil {
		return m.Model
	}
	return 0
}

func (m *WlstSlu_3900_ModelInfo) GetSluitemType() string {
	if m != nil {
		return m.SluitemType
	}
	return ""
}

type WlstSlu_3900_LightData struct {
	// 电压
	Voltage float64 `protobuf:"fixed64,1,opt,name=voltage,proto3" json:"voltage,omitempty"`
	// 电流
	Current float64 `protobuf:"fixed64,2,opt,name=current,proto3" json:"current,omitempty"`
	// 有功功率
	ActivePower float64 `protobuf:"fixed64,3,opt,name=active_power,json=activePower,proto3" json:"active_power,omitempty"`
	// 无功功率
	ReactivePower float64 `protobuf:"fixed64,4,opt,name=reactive_power,json=reactivePower,proto3" json:"reactive_power,omitempty"`
	// 视在功率
	ApparentPower float64 `protobuf:"fixed64,5,opt,name=apparent_power,json=apparentPower,proto3" json:"apparent_power,omitempty"`
	// 电量
	Electricity float64 `protobuf:"fixed64,6,opt,name=electricity,proto3" json:"electricity,omitempty"`
	// 运行时间
	ActiveTime float64 `protobuf:"fixed64,7,opt,name=active_time,json=activeTime,proto3" json:"active_time,omitempty"`
	// 灯状态
	LightStatus *WlstSlu_3900_LightStatus `protobuf:"bytes,8,opt,name=light_status,json=lightStatus,proto3" json:"light_status,omitempty"`
	// 节能档位
	PowerLevel int32 `protobuf:"varint,9,opt,name=power_level,json=powerLevel,proto3" json:"power_level,omitempty"`
	// 控制器上电开灯 true-开灯，false-关灯
	SluitemPowerTurnon int32 `protobuf:"varint,10,opt,name=sluitem_power_turnon,json=sluitemPowerTurnon,proto3" json:"sluitem_power_turnon,omitempty"`
	// 1-4回路额定功率
	RatedPower           int32    `protobuf:"varint,11,opt,name=rated_power,json=ratedPower,proto3" json:"rated_power,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_3900_LightData) Reset()         { *m = WlstSlu_3900_LightData{} }
func (m *WlstSlu_3900_LightData) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_3900_LightData) ProtoMessage()    {}
func (*WlstSlu_3900_LightData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{1, 1}
}

func (m *WlstSlu_3900_LightData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_3900_LightData.Unmarshal(m, b)
}
func (m *WlstSlu_3900_LightData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_3900_LightData.Marshal(b, m, deterministic)
}
func (m *WlstSlu_3900_LightData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_3900_LightData.Merge(m, src)
}
func (m *WlstSlu_3900_LightData) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_3900_LightData.Size(m)
}
func (m *WlstSlu_3900_LightData) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_3900_LightData.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_3900_LightData proto.InternalMessageInfo

func (m *WlstSlu_3900_LightData) GetVoltage() float64 {
	if m != nil {
		return m.Voltage
	}
	return 0
}

func (m *WlstSlu_3900_LightData) GetCurrent() float64 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *WlstSlu_3900_LightData) GetActivePower() float64 {
	if m != nil {
		return m.ActivePower
	}
	return 0
}

func (m *WlstSlu_3900_LightData) GetReactivePower() float64 {
	if m != nil {
		return m.ReactivePower
	}
	return 0
}

func (m *WlstSlu_3900_LightData) GetApparentPower() float64 {
	if m != nil {
		return m.ApparentPower
	}
	return 0
}

func (m *WlstSlu_3900_LightData) GetElectricity() float64 {
	if m != nil {
		return m.Electricity
	}
	return 0
}

func (m *WlstSlu_3900_LightData) GetActiveTime() float64 {
	if m != nil {
		return m.ActiveTime
	}
	return 0
}

func (m *WlstSlu_3900_LightData) GetLightStatus() *WlstSlu_3900_LightStatus {
	if m != nil {
		return m.LightStatus
	}
	return nil
}

func (m *WlstSlu_3900_LightData) GetPowerLevel() int32 {
	if m != nil {
		return m.PowerLevel
	}
	return 0
}

func (m *WlstSlu_3900_LightData) GetSluitemPowerTurnon() int32 {
	if m != nil {
		return m.SluitemPowerTurnon
	}
	return 0
}

func (m *WlstSlu_3900_LightData) GetRatedPower() int32 {
	if m != nil {
		return m.RatedPower
	}
	return 0
}

type WlstSlu_3900_LightStatus struct {
	// 灯具漏电 0-正常，1-漏电
	Leakage int32 `protobuf:"varint,1,opt,name=leakage,proto3" json:"leakage,omitempty"`
	// 故障 0-正常，1-光源故障，2-补偿电容故障，3-意外灭灯，4-意外亮灯，5-自熄灯
	Fault int32 `protobuf:"varint,2,opt,name=fault,proto3" json:"fault,omitempty"`
	// 工作状态 0-正常亮灯，1-保留，2-调光节能，3-关灯
	WorkingOn            int32    `protobuf:"varint,3,opt,name=working_on,json=workingOn,proto3" json:"working_on,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_3900_LightStatus) Reset()         { *m = WlstSlu_3900_LightStatus{} }
func (m *WlstSlu_3900_LightStatus) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_3900_LightStatus) ProtoMessage()    {}
func (*WlstSlu_3900_LightStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{1, 2}
}

func (m *WlstSlu_3900_LightStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_3900_LightStatus.Unmarshal(m, b)
}
func (m *WlstSlu_3900_LightStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_3900_LightStatus.Marshal(b, m, deterministic)
}
func (m *WlstSlu_3900_LightStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_3900_LightStatus.Merge(m, src)
}
func (m *WlstSlu_3900_LightStatus) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_3900_LightStatus.Size(m)
}
func (m *WlstSlu_3900_LightStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_3900_LightStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_3900_LightStatus proto.InternalMessageInfo

func (m *WlstSlu_3900_LightStatus) GetLeakage() int32 {
	if m != nil {
		return m.Leakage
	}
	return 0
}

func (m *WlstSlu_3900_LightStatus) GetFault() int32 {
	if m != nil {
		return m.Fault
	}
	return 0
}

func (m *WlstSlu_3900_LightStatus) GetWorkingOn() int32 {
	if m != nil {
		return m.WorkingOn
	}
	return 0
}

type WlstSlu_3900_SluitemStatus struct {
	// flash故障 0-正常 1-故障
	FlashFault int32 `protobuf:"varint,1,opt,name=flash_fault,json=flashFault,proto3" json:"flash_fault,omitempty"`
	// 主动报警禁止 0-正常 1-禁止
	EnableAlarm          int32    `protobuf:"varint,2,opt,name=enable_alarm,json=enableAlarm,proto3" json:"enable_alarm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_3900_SluitemStatus) Reset()         { *m = WlstSlu_3900_SluitemStatus{} }
func (m *WlstSlu_3900_SluitemStatus) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_3900_SluitemStatus) ProtoMessage()    {}
func (*WlstSlu_3900_SluitemStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{1, 3}
}

func (m *WlstSlu_3900_SluitemStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_3900_SluitemStatus.Unmarshal(m, b)
}
func (m *WlstSlu_3900_SluitemStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_3900_SluitemStatus.Marshal(b, m, deterministic)
}
func (m *WlstSlu_3900_SluitemStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_3900_SluitemStatus.Merge(m, src)
}
func (m *WlstSlu_3900_SluitemStatus) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_3900_SluitemStatus.Size(m)
}
func (m *WlstSlu_3900_SluitemStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_3900_SluitemStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_3900_SluitemStatus proto.InternalMessageInfo

func (m *WlstSlu_3900_SluitemStatus) GetFlashFault() int32 {
	if m != nil {
		return m.FlashFault
	}
	return 0
}

func (m *WlstSlu_3900_SluitemStatus) GetEnableAlarm() int32 {
	if m != nil {
		return m.EnableAlarm
	}
	return 0
}

type WlstSlu_3900_TimeFault struct {
	// 本地时钟故障 0-正常 1-故障
	ClockFault int32 `protobuf:"varint,1,opt,name=clock_fault,json=clockFault,proto3" json:"clock_fault,omitempty"`
	// 本地时钟超差故障 0-正常 1-故障
	ClockOutFault int32 `protobuf:"varint,2,opt,name=clock_out_fault,json=clockOutFault,proto3" json:"clock_out_fault,omitempty"`
	// 校时超差故障 0-正常 1-故障
	ClockOutAlarm        int32    `protobuf:"varint,3,opt,name=clock_out_alarm,json=clockOutAlarm,proto3" json:"clock_out_alarm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_3900_TimeFault) Reset()         { *m = WlstSlu_3900_TimeFault{} }
func (m *WlstSlu_3900_TimeFault) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_3900_TimeFault) ProtoMessage()    {}
func (*WlstSlu_3900_TimeFault) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{1, 4}
}

func (m *WlstSlu_3900_TimeFault) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_3900_TimeFault.Unmarshal(m, b)
}
func (m *WlstSlu_3900_TimeFault) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_3900_TimeFault.Marshal(b, m, deterministic)
}
func (m *WlstSlu_3900_TimeFault) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_3900_TimeFault.Merge(m, src)
}
func (m *WlstSlu_3900_TimeFault) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_3900_TimeFault.Size(m)
}
func (m *WlstSlu_3900_TimeFault) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_3900_TimeFault.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_3900_TimeFault proto.InternalMessageInfo

func (m *WlstSlu_3900_TimeFault) GetClockFault() int32 {
	if m != nil {
		return m.ClockFault
	}
	return 0
}

func (m *WlstSlu_3900_TimeFault) GetClockOutFault() int32 {
	if m != nil {
		return m.ClockOutFault
	}
	return 0
}

func (m *WlstSlu_3900_TimeFault) GetClockOutAlarm() int32 {
	if m != nil {
		return m.ClockOutAlarm
	}
	return 0
}

type WlstSlu_3900_SluitemPara struct {
	// 经度
	Longitude float64 `protobuf:"fixed64,1,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// 纬度
	Latitude float64 `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// 是否允许主报 1-允许 0-不允许
	HasEnableAlarm int32 `protobuf:"varint,3,opt,name=has_enable_alarm,json=hasEnableAlarm,proto3" json:"has_enable_alarm,omitempty"`
	// 是否投运 1-投运 0-停运
	IsRunning int32 `protobuf:"varint,4,opt,name=is_running,json=isRunning,proto3" json:"is_running,omitempty"`
	// 主动报警间隔 单位分钟 0表示30分钟
	AlarmInterval int32 `protobuf:"varint,5,opt,name=alarm_interval,json=alarmInterval,proto3" json:"alarm_interval,omitempty"`
	// nb主报需要主站应答，0-不需要，1-需要
	UplinkReply          int32    `protobuf:"varint,6,opt,name=uplink_reply,json=uplinkReply,proto3" json:"uplink_reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_3900_SluitemPara) Reset()         { *m = WlstSlu_3900_SluitemPara{} }
func (m *WlstSlu_3900_SluitemPara) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_3900_SluitemPara) ProtoMessage()    {}
func (*WlstSlu_3900_SluitemPara) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{1, 5}
}

func (m *WlstSlu_3900_SluitemPara) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_3900_SluitemPara.Unmarshal(m, b)
}
func (m *WlstSlu_3900_SluitemPara) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_3900_SluitemPara.Marshal(b, m, deterministic)
}
func (m *WlstSlu_3900_SluitemPara) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_3900_SluitemPara.Merge(m, src)
}
func (m *WlstSlu_3900_SluitemPara) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_3900_SluitemPara.Size(m)
}
func (m *WlstSlu_3900_SluitemPara) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_3900_SluitemPara.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_3900_SluitemPara proto.InternalMessageInfo

func (m *WlstSlu_3900_SluitemPara) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *WlstSlu_3900_SluitemPara) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *WlstSlu_3900_SluitemPara) GetHasEnableAlarm() int32 {
	if m != nil {
		return m.HasEnableAlarm
	}
	return 0
}

func (m *WlstSlu_3900_SluitemPara) GetIsRunning() int32 {
	if m != nil {
		return m.IsRunning
	}
	return 0
}

func (m *WlstSlu_3900_SluitemPara) GetAlarmInterval() int32 {
	if m != nil {
		return m.AlarmInterval
	}
	return 0
}

func (m *WlstSlu_3900_SluitemPara) GetUplinkReply() int32 {
	if m != nil {
		return m.UplinkReply
	}
	return 0
}

// 单灯事件查询
type WlstSlu_7800 struct {
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 事件类型, 0-上电复位记录，1-开关灯操作记录，2-液晶操作记录，3-控制器告警记录，4-集中器告警记录，5-主站操作记录
	EventType int32 `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	// 分类标记，默认0xff
	ClassType int32 `protobuf:"varint,3,opt,name=class_type,json=classType,proto3" json:"class_type,omitempty"`
	// 记录条数
	RecordCount int32 `protobuf:"varint,4,opt,name=record_count,json=recordCount,proto3" json:"record_count,omitempty"`
	// 开始时间
	DtStart int64 `protobuf:"varint,5,opt,name=dt_start,json=dtStart,proto3" json:"dt_start,omitempty"`
	// 结束时间
	DtEnd                int64    `protobuf:"varint,6,opt,name=dt_end,json=dtEnd,proto3" json:"dt_end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7800) Reset()         { *m = WlstSlu_7800{} }
func (m *WlstSlu_7800) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7800) ProtoMessage()    {}
func (*WlstSlu_7800) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{2}
}

func (m *WlstSlu_7800) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7800.Unmarshal(m, b)
}
func (m *WlstSlu_7800) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7800.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7800) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7800.Merge(m, src)
}
func (m *WlstSlu_7800) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7800.Size(m)
}
func (m *WlstSlu_7800) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7800.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7800 proto.InternalMessageInfo

func (m *WlstSlu_7800) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSlu_7800) GetEventType() int32 {
	if m != nil {
		return m.EventType
	}
	return 0
}

func (m *WlstSlu_7800) GetClassType() int32 {
	if m != nil {
		return m.ClassType
	}
	return 0
}

func (m *WlstSlu_7800) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *WlstSlu_7800) GetDtStart() int64 {
	if m != nil {
		return m.DtStart
	}
	return 0
}

func (m *WlstSlu_7800) GetDtEnd() int64 {
	if m != nil {
		return m.DtEnd
	}
	return 0
}

// 单灯事件查询应答
type WlstSluF800 struct {
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 事件类型, 0-上电复位记录，1-开关灯操作记录，2-液晶操作记录，3-控制器告警记录，4-集中器告警记录，5-主站操作记录
	EventType int32 `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	// 分类标记，默认0xff
	ClassType int32 `protobuf:"varint,3,opt,name=class_type,json=classType,proto3" json:"class_type,omitempty"`
	// 总包数
	DataTotal int32 `protobuf:"varint,4,opt,name=data_total,json=dataTotal,proto3" json:"data_total,omitempty"`
	// 当前包号
	DataIdx int32 `protobuf:"varint,5,opt,name=data_idx,json=dataIdx,proto3" json:"data_idx,omitempty"`
	// 该包记录数
	RecordCount          int32                   `protobuf:"varint,6,opt,name=record_count,json=recordCount,proto3" json:"record_count,omitempty"`
	View_0X20            []*WlstSluF800_View0X20 `protobuf:"bytes,7,rep,name=view_0x20,json=view0x20,proto3" json:"view_0x20,omitempty"`
	View_0X21            []*WlstSluF800_View0X21 `protobuf:"bytes,8,rep,name=view_0x21,json=view0x21,proto3" json:"view_0x21,omitempty"`
	View_0X22            []*WlstSluF800_View0X20 `protobuf:"bytes,9,rep,name=view_0x22,json=view0x22,proto3" json:"view_0x22,omitempty"`
	View_0X23            []*WlstSluF800_View0X23 `protobuf:"bytes,10,rep,name=view_0x23,json=view0x23,proto3" json:"view_0x23,omitempty"`
	View_0X24            []*WlstSluF800_View0X20 `protobuf:"bytes,11,rep,name=view_0x24,json=view0x24,proto3" json:"view_0x24,omitempty"`
	View_0X25            []*WlstSluF800_View0X20 `protobuf:"bytes,12,rep,name=view_0x25,json=view0x25,proto3" json:"view_0x25,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *WlstSluF800) Reset()         { *m = WlstSluF800{} }
func (m *WlstSluF800) String() string { return proto.CompactTextString(m) }
func (*WlstSluF800) ProtoMessage()    {}
func (*WlstSluF800) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{3}
}

func (m *WlstSluF800) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF800.Unmarshal(m, b)
}
func (m *WlstSluF800) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF800.Marshal(b, m, deterministic)
}
func (m *WlstSluF800) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF800.Merge(m, src)
}
func (m *WlstSluF800) XXX_Size() int {
	return xxx_messageInfo_WlstSluF800.Size(m)
}
func (m *WlstSluF800) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF800.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF800 proto.InternalMessageInfo

func (m *WlstSluF800) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSluF800) GetEventType() int32 {
	if m != nil {
		return m.EventType
	}
	return 0
}

func (m *WlstSluF800) GetClassType() int32 {
	if m != nil {
		return m.ClassType
	}
	return 0
}

func (m *WlstSluF800) GetDataTotal() int32 {
	if m != nil {
		return m.DataTotal
	}
	return 0
}

func (m *WlstSluF800) GetDataIdx() int32 {
	if m != nil {
		return m.DataIdx
	}
	return 0
}

func (m *WlstSluF800) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *WlstSluF800) GetView_0X20() []*WlstSluF800_View0X20 {
	if m != nil {
		return m.View_0X20
	}
	return nil
}

func (m *WlstSluF800) GetView_0X21() []*WlstSluF800_View0X21 {
	if m != nil {
		return m.View_0X21
	}
	return nil
}

func (m *WlstSluF800) GetView_0X22() []*WlstSluF800_View0X20 {
	if m != nil {
		return m.View_0X22
	}
	return nil
}

func (m *WlstSluF800) GetView_0X23() []*WlstSluF800_View0X23 {
	if m != nil {
		return m.View_0X23
	}
	return nil
}

func (m *WlstSluF800) GetView_0X24() []*WlstSluF800_View0X20 {
	if m != nil {
		return m.View_0X24
	}
	return nil
}

func (m *WlstSluF800) GetView_0X25() []*WlstSluF800_View0X20 {
	if m != nil {
		return m.View_0X25
	}
	return nil
}

type WlstSluF800_View0X20 struct {
	// 发生时间
	DtHappen int64 `protobuf:"varint,1,opt,name=dt_happen,json=dtHappen,proto3" json:"dt_happen,omitempty"`
	// 0x20->[复位类型]，0-上电复位，1-外部复位，2-看门狗复位，3-欠压复位
	// 0x22,0x25->[命令字节]
	// 0x24->[集中器地址出错，
	// 控制器参数出错，
	// 集中器其他参数出错，
	// 集中器运行参数出错，
	// 集中器告警参数出错，
	// 时钟出错，
	// 时钟硬件出错，
	// fram出错，
	// 电力载波模块出错，
	// zigbee模块出错，
	// 蓝牙模块出错]
	Status               []int32  `protobuf:"varint,2,rep,packed,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSluF800_View0X20) Reset()         { *m = WlstSluF800_View0X20{} }
func (m *WlstSluF800_View0X20) String() string { return proto.CompactTextString(m) }
func (*WlstSluF800_View0X20) ProtoMessage()    {}
func (*WlstSluF800_View0X20) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{3, 0}
}

func (m *WlstSluF800_View0X20) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF800_View0X20.Unmarshal(m, b)
}
func (m *WlstSluF800_View0X20) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF800_View0X20.Marshal(b, m, deterministic)
}
func (m *WlstSluF800_View0X20) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF800_View0X20.Merge(m, src)
}
func (m *WlstSluF800_View0X20) XXX_Size() int {
	return xxx_messageInfo_WlstSluF800_View0X20.Size(m)
}
func (m *WlstSluF800_View0X20) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF800_View0X20.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF800_View0X20 proto.InternalMessageInfo

func (m *WlstSluF800_View0X20) GetDtHappen() int64 {
	if m != nil {
		return m.DtHappen
	}
	return 0
}

func (m *WlstSluF800_View0X20) GetStatus() []int32 {
	if m != nil {
		return m.Status
	}
	return nil
}

type WlstSluF800_View0X21 struct {
	// 发生时间
	DtHappen int64 `protobuf:"varint,1,opt,name=dt_happen,json=dtHappen,proto3" json:"dt_happen,omitempty"`
	// 指令类型 0-清除，1-定时，2-经纬度，3-即时
	OperationType int32 `protobuf:"varint,2,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`
	// 操作顺序 0-广播，1-依次
	OperationOrder int32 `protobuf:"varint,3,opt,name=operation_order,json=operationOrder,proto3" json:"operation_order,omitempty"`
	// 地址类型 0-全部，1-组，2-规则，3-单一，4-gprs
	AddrType int32 `protobuf:"varint,4,opt,name=addr_type,json=addrType,proto3" json:"addr_type,omitempty"`
	// 地址
	Addr int32 `protobuf:"varint,5,opt,name=addr,proto3" json:"addr,omitempty"`
	// 操作源,0~7-远程控制，8～15-短程控制，16～23-本地键盘操作，24～31-节假日控制
	OperationSource      int32    `protobuf:"varint,6,opt,name=operation_source,json=operationSource,proto3" json:"operation_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSluF800_View0X21) Reset()         { *m = WlstSluF800_View0X21{} }
func (m *WlstSluF800_View0X21) String() string { return proto.CompactTextString(m) }
func (*WlstSluF800_View0X21) ProtoMessage()    {}
func (*WlstSluF800_View0X21) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{3, 1}
}

func (m *WlstSluF800_View0X21) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF800_View0X21.Unmarshal(m, b)
}
func (m *WlstSluF800_View0X21) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF800_View0X21.Marshal(b, m, deterministic)
}
func (m *WlstSluF800_View0X21) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF800_View0X21.Merge(m, src)
}
func (m *WlstSluF800_View0X21) XXX_Size() int {
	return xxx_messageInfo_WlstSluF800_View0X21.Size(m)
}
func (m *WlstSluF800_View0X21) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF800_View0X21.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF800_View0X21 proto.InternalMessageInfo

func (m *WlstSluF800_View0X21) GetDtHappen() int64 {
	if m != nil {
		return m.DtHappen
	}
	return 0
}

func (m *WlstSluF800_View0X21) GetOperationType() int32 {
	if m != nil {
		return m.OperationType
	}
	return 0
}

func (m *WlstSluF800_View0X21) GetOperationOrder() int32 {
	if m != nil {
		return m.OperationOrder
	}
	return 0
}

func (m *WlstSluF800_View0X21) GetAddrType() int32 {
	if m != nil {
		return m.AddrType
	}
	return 0
}

func (m *WlstSluF800_View0X21) GetAddr() int32 {
	if m != nil {
		return m.Addr
	}
	return 0
}

func (m *WlstSluF800_View0X21) GetOperationSource() int32 {
	if m != nil {
		return m.OperationSource
	}
	return 0
}

type WlstSluF800_View0X23 struct {
	// 发生时间
	DtHappen int64 `protobuf:"varint,1,opt,name=dt_happen,json=dtHappen,proto3" json:"dt_happen,omitempty"`
	Addr     int32 `protobuf:"varint,2,opt,name=addr,proto3" json:"addr,omitempty"`
	// 告警类型，1-告警，0-消警，[意外灭灯，漏电告警，意外亮灯，光源故障，自熄灯故障，系统告警，通信故障，补偿电容故障，电压越限，电流越限，通信成功率过低，欠载，过载]
	AlarmType []int32 `protobuf:"varint,3,rep,packed,name=alarm_type,json=alarmType,proto3" json:"alarm_type,omitempty"`
	// 控制器状态0-false，1-true[继电器校准参数错误，eeprom故障，停运，禁止主动报警，工作参数设置，已校准，电压越上限，电压越下限，通信故障]
	SluitemStatus []int32 `protobuf:"varint,4,rep,packed,name=sluitem_status,json=sluitemStatus,proto3" json:"sluitem_status,omitempty"`
	// 控制器电压
	SluitemVoltage float64 `protobuf:"fixed64,5,opt,name=sluitem_voltage,json=sluitemVoltage,proto3" json:"sluitem_voltage,omitempty"`
	// 控制器电流,1-4路
	SluitemCurrent []float64 `protobuf:"fixed64,6,rep,packed,name=sluitem_current,json=sluitemCurrent,proto3" json:"sluitem_current,omitempty"`
	// 控制器有功，1-4路
	SluitemActivePower []float64 `protobuf:"fixed64,7,rep,packed,name=sluitem_active_power,json=sluitemActivePower,proto3" json:"sluitem_active_power,omitempty"`
	// 控制器无功，1-4路
	SluitemReactivePower []float64 `protobuf:"fixed64,8,rep,packed,name=sluitem_reactive_power,json=sluitemReactivePower,proto3" json:"sluitem_reactive_power,omitempty"`
	// 控制器最大电压
	SluitemMaxVoltage float64 `protobuf:"fixed64,9,opt,name=sluitem_max_voltage,json=sluitemMaxVoltage,proto3" json:"sluitem_max_voltage,omitempty"`
	// 控制器最大电流1-4路
	SluitemMaxCurrent []float64 `protobuf:"fixed64,10,rep,packed,name=sluitem_max_current,json=sluitemMaxCurrent,proto3" json:"sluitem_max_current,omitempty"`
	// 控制器累计电量，1-4路
	SluitemElectricity []float64 `protobuf:"fixed64,11,rep,packed,name=sluitem_electricity,json=sluitemElectricity,proto3" json:"sluitem_electricity,omitempty"`
	// 控制器物理信息
	// [信号强度(0-15)，
	// 路由级数(电力载波0-6，zigbee0-10)，
	// 所在相位(0-无法确定，1-a，2-b，3-c)，
	// 控制器回路数(0～3->1～4路)，
	// 节能方式(0-无控制，1-只有开关灯，2-一档节能，3-二档节能，4-rs485节能，5-pwm节能)，
	// 漏电流(0-无，1-有),
	// 温度采集(0-无，1-有),
	// 时钟(0-无，1-有),
	// 型号(0-无法确定，1-wj2090j，2-wj2090k，3-wj2080c,4-wj2080d,5-wj2090l,6-wj2090m, 7-wj4090),
	// 通信成功次数范围(0-16)，
	// 通信总次数范围(0-16)]
	SluitemPhyinfo       []int32  `protobuf:"varint,12,rep,packed,name=sluitem_phyinfo,json=sluitemPhyinfo,proto3" json:"sluitem_phyinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSluF800_View0X23) Reset()         { *m = WlstSluF800_View0X23{} }
func (m *WlstSluF800_View0X23) String() string { return proto.CompactTextString(m) }
func (*WlstSluF800_View0X23) ProtoMessage()    {}
func (*WlstSluF800_View0X23) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{3, 2}
}

func (m *WlstSluF800_View0X23) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF800_View0X23.Unmarshal(m, b)
}
func (m *WlstSluF800_View0X23) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF800_View0X23.Marshal(b, m, deterministic)
}
func (m *WlstSluF800_View0X23) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF800_View0X23.Merge(m, src)
}
func (m *WlstSluF800_View0X23) XXX_Size() int {
	return xxx_messageInfo_WlstSluF800_View0X23.Size(m)
}
func (m *WlstSluF800_View0X23) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF800_View0X23.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF800_View0X23 proto.InternalMessageInfo

func (m *WlstSluF800_View0X23) GetDtHappen() int64 {
	if m != nil {
		return m.DtHappen
	}
	return 0
}

func (m *WlstSluF800_View0X23) GetAddr() int32 {
	if m != nil {
		return m.Addr
	}
	return 0
}

func (m *WlstSluF800_View0X23) GetAlarmType() []int32 {
	if m != nil {
		return m.AlarmType
	}
	return nil
}

func (m *WlstSluF800_View0X23) GetSluitemStatus() []int32 {
	if m != nil {
		return m.SluitemStatus
	}
	return nil
}

func (m *WlstSluF800_View0X23) GetSluitemVoltage() float64 {
	if m != nil {
		return m.SluitemVoltage
	}
	return 0
}

func (m *WlstSluF800_View0X23) GetSluitemCurrent() []float64 {
	if m != nil {
		return m.SluitemCurrent
	}
	return nil
}

func (m *WlstSluF800_View0X23) GetSluitemActivePower() []float64 {
	if m != nil {
		return m.SluitemActivePower
	}
	return nil
}

func (m *WlstSluF800_View0X23) GetSluitemReactivePower() []float64 {
	if m != nil {
		return m.SluitemReactivePower
	}
	return nil
}

func (m *WlstSluF800_View0X23) GetSluitemMaxVoltage() float64 {
	if m != nil {
		return m.SluitemMaxVoltage
	}
	return 0
}

func (m *WlstSluF800_View0X23) GetSluitemMaxCurrent() []float64 {
	if m != nil {
		return m.SluitemMaxCurrent
	}
	return nil
}

func (m *WlstSluF800_View0X23) GetSluitemElectricity() []float64 {
	if m != nil {
		return m.SluitemElectricity
	}
	return nil
}

func (m *WlstSluF800_View0X23) GetSluitemPhyinfo() []int32 {
	if m != nil {
		return m.SluitemPhyinfo
	}
	return nil
}

type WlstSluEc00 struct {
	// 命令序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 读取参数开始序号
	StartIdx int32 `protobuf:"varint,2,opt,name=start_idx,json=startIdx,proto3" json:"start_idx,omitempty"`
	// 读取条数
	ReadCount            int32           `protobuf:"varint,3,opt,name=read_count,json=readCount,proto3" json:"read_count,omitempty"`
	WlstSlu_6B00         []*WlstSlu_6B00 `protobuf:"bytes,4,rep,name=wlst_slu_6b00,json=wlstSlu6b00,proto3" json:"wlst_slu_6b00,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WlstSluEc00) Reset()         { *m = WlstSluEc00{} }
func (m *WlstSluEc00) String() string { return proto.CompactTextString(m) }
func (*WlstSluEc00) ProtoMessage()    {}
func (*WlstSluEc00) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{4}
}

func (m *WlstSluEc00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluEc00.Unmarshal(m, b)
}
func (m *WlstSluEc00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluEc00.Marshal(b, m, deterministic)
}
func (m *WlstSluEc00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluEc00.Merge(m, src)
}
func (m *WlstSluEc00) XXX_Size() int {
	return xxx_messageInfo_WlstSluEc00.Size(m)
}
func (m *WlstSluEc00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluEc00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluEc00 proto.InternalMessageInfo

func (m *WlstSluEc00) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSluEc00) GetStartIdx() int32 {
	if m != nil {
		return m.StartIdx
	}
	return 0
}

func (m *WlstSluEc00) GetReadCount() int32 {
	if m != nil {
		return m.ReadCount
	}
	return 0
}

func (m *WlstSluEc00) GetWlstSlu_6B00() []*WlstSlu_6B00 {
	if m != nil {
		return m.WlstSlu_6B00
	}
	return nil
}

type WlstSlu_6B00 struct {
	// 命令序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 设置参数序号,0-20,0-删除设备保存的所有节假日设置
	SetIdx int32 `protobuf:"varint,2,opt,name=set_idx,json=setIdx,proto3" json:"set_idx,omitempty"`
	// 开始时间, linux时间戳格式，精确到秒，服务取月，日，时
	DtStart int64 `protobuf:"varint,3,opt,name=dt_start,json=dtStart,proto3" json:"dt_start,omitempty"`
	// 结束时间, linux时间戳格式，精确到秒，服务取月，日，时
	DtEnd int64 `protobuf:"varint,4,opt,name=dt_end,json=dtEnd,proto3" json:"dt_end,omitempty"`
	// 指令类型 1-定时，2-经纬度
	OperationType int32 `protobuf:"varint,5,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`
	// 操作顺序 0-广播，1-依次
	OperationOrder int32 `protobuf:"varint,6,opt,name=operation_order,json=operationOrder,proto3" json:"operation_order,omitempty"`
	// 定时 hh:mm->int32 或偏移量 依据 operation_type定
	TimerOrOffset int32 `protobuf:"varint,7,opt,name=timer_or_offset,json=timerOrOffset,proto3" json:"timer_or_offset,omitempty"`
	// 地址类型 0-全部，1-组，2-规则，4-gprs
	AddrType int32 `protobuf:"varint,8,opt,name=addr_type,json=addrType,proto3" json:"addr_type,omitempty"`
	// gprs/组/规则操作地址,addr_type=2时，仅第一个值有效
	Addrs []int32 `protobuf:"varint,9,rep,packed,name=addrs,proto3" json:"addrs,omitempty"`
	// 操作类型 3-经纬度关灯，4-混合控制，5-pwm调节
	CmdType int32 `protobuf:"varint,10,opt,name=cmd_type,json=cmdType,proto3" json:"cmd_type,omitempty"`
	// 混合回路操作 0-不操作，1-开灯，2-1档节能，3-2档节能，4-关灯（经纬度关灯时，cmd_type<4视为不操作）
	CmdMix []int32 `protobuf:"varint,11,rep,packed,name=cmd_mix,json=cmdMix,proto3" json:"cmd_mix,omitempty"`
	// pwm功率调节
	CmdPwm               *WlstSlu_6B00_CmdPwm `protobuf:"bytes,12,opt,name=cmd_pwm,json=cmdPwm,proto3" json:"cmd_pwm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WlstSlu_6B00) Reset()         { *m = WlstSlu_6B00{} }
func (m *WlstSlu_6B00) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_6B00) ProtoMessage()    {}
func (*WlstSlu_6B00) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{5}
}

func (m *WlstSlu_6B00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_6B00.Unmarshal(m, b)
}
func (m *WlstSlu_6B00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_6B00.Marshal(b, m, deterministic)
}
func (m *WlstSlu_6B00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_6B00.Merge(m, src)
}
func (m *WlstSlu_6B00) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_6B00.Size(m)
}
func (m *WlstSlu_6B00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_6B00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_6B00 proto.InternalMessageInfo

func (m *WlstSlu_6B00) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSlu_6B00) GetSetIdx() int32 {
	if m != nil {
		return m.SetIdx
	}
	return 0
}

func (m *WlstSlu_6B00) GetDtStart() int64 {
	if m != nil {
		return m.DtStart
	}
	return 0
}

func (m *WlstSlu_6B00) GetDtEnd() int64 {
	if m != nil {
		return m.DtEnd
	}
	return 0
}

func (m *WlstSlu_6B00) GetOperationType() int32 {
	if m != nil {
		return m.OperationType
	}
	return 0
}

func (m *WlstSlu_6B00) GetOperationOrder() int32 {
	if m != nil {
		return m.OperationOrder
	}
	return 0
}

func (m *WlstSlu_6B00) GetTimerOrOffset() int32 {
	if m != nil {
		return m.TimerOrOffset
	}
	return 0
}

func (m *WlstSlu_6B00) GetAddrType() int32 {
	if m != nil {
		return m.AddrType
	}
	return 0
}

func (m *WlstSlu_6B00) GetAddrs() []int32 {
	if m != nil {
		return m.Addrs
	}
	return nil
}

func (m *WlstSlu_6B00) GetCmdType() int32 {
	if m != nil {
		return m.CmdType
	}
	return 0
}

func (m *WlstSlu_6B00) GetCmdMix() []int32 {
	if m != nil {
		return m.CmdMix
	}
	return nil
}

func (m *WlstSlu_6B00) GetCmdPwm() *WlstSlu_6B00_CmdPwm {
	if m != nil {
		return m.CmdPwm
	}
	return nil
}

type WlstSlu_6B00_CmdPwm struct {
	// 回路(仅需要操作的回路序号)
	LoopCanDo []int32 `protobuf:"varint,1,rep,packed,name=loop_can_do,json=loopCanDo,proto3" json:"loop_can_do,omitempty"`
	// 比例 0-100 -> 0%-100%
	Scale int32 `protobuf:"varint,2,opt,name=scale,proto3" json:"scale,omitempty"`
	// 频率 /100为发送值
	Rate                 int32    `protobuf:"varint,3,opt,name=rate,proto3" json:"rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_6B00_CmdPwm) Reset()         { *m = WlstSlu_6B00_CmdPwm{} }
func (m *WlstSlu_6B00_CmdPwm) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_6B00_CmdPwm) ProtoMessage()    {}
func (*WlstSlu_6B00_CmdPwm) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{5, 0}
}

func (m *WlstSlu_6B00_CmdPwm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_6B00_CmdPwm.Unmarshal(m, b)
}
func (m *WlstSlu_6B00_CmdPwm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_6B00_CmdPwm.Marshal(b, m, deterministic)
}
func (m *WlstSlu_6B00_CmdPwm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_6B00_CmdPwm.Merge(m, src)
}
func (m *WlstSlu_6B00_CmdPwm) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_6B00_CmdPwm.Size(m)
}
func (m *WlstSlu_6B00_CmdPwm) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_6B00_CmdPwm.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_6B00_CmdPwm proto.InternalMessageInfo

func (m *WlstSlu_6B00_CmdPwm) GetLoopCanDo() []int32 {
	if m != nil {
		return m.LoopCanDo
	}
	return nil
}

func (m *WlstSlu_6B00_CmdPwm) GetScale() int32 {
	if m != nil {
		return m.Scale
	}
	return 0
}

func (m *WlstSlu_6B00_CmdPwm) GetRate() int32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

type WlstSlu_6C00 struct {
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 读取参数开始序号
	StartIdx int32 `protobuf:"varint,2,opt,name=start_idx,json=startIdx,proto3" json:"start_idx,omitempty"`
	// 读取条数
	ReadCount            int32    `protobuf:"varint,3,opt,name=read_count,json=readCount,proto3" json:"read_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_6C00) Reset()         { *m = WlstSlu_6C00{} }
func (m *WlstSlu_6C00) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_6C00) ProtoMessage()    {}
func (*WlstSlu_6C00) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{6}
}

func (m *WlstSlu_6C00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_6C00.Unmarshal(m, b)
}
func (m *WlstSlu_6C00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_6C00.Marshal(b, m, deterministic)
}
func (m *WlstSlu_6C00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_6C00.Merge(m, src)
}
func (m *WlstSlu_6C00) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_6C00.Size(m)
}
func (m *WlstSlu_6C00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_6C00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_6C00 proto.InternalMessageInfo

func (m *WlstSlu_6C00) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSlu_6C00) GetStartIdx() int32 {
	if m != nil {
		return m.StartIdx
	}
	return 0
}

func (m *WlstSlu_6C00) GetReadCount() int32 {
	if m != nil {
		return m.ReadCount
	}
	return 0
}

type WlstSluD000 struct {
	// 集中器版本
	Ver                  string   `protobuf:"bytes,1,opt,name=ver,proto3" json:"ver,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSluD000) Reset()         { *m = WlstSluD000{} }
func (m *WlstSluD000) String() string { return proto.CompactTextString(m) }
func (*WlstSluD000) ProtoMessage()    {}
func (*WlstSluD000) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{7}
}

func (m *WlstSluD000) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluD000.Unmarshal(m, b)
}
func (m *WlstSluD000) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluD000.Marshal(b, m, deterministic)
}
func (m *WlstSluD000) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluD000.Merge(m, src)
}
func (m *WlstSluD000) XXX_Size() int {
	return xxx_messageInfo_WlstSluD000.Size(m)
}
func (m *WlstSluD000) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluD000.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluD000 proto.InternalMessageInfo

func (m *WlstSluD000) GetVer() string {
	if m != nil {
		return m.Ver
	}
	return ""
}

type WlstSlu_2800 struct {
	// 2-投运，1-停运
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// 2-告警，1-不告警
	Alarm                int32    `protobuf:"varint,2,opt,name=alarm,proto3" json:"alarm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_2800) Reset()         { *m = WlstSlu_2800{} }
func (m *WlstSlu_2800) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_2800) ProtoMessage()    {}
func (*WlstSlu_2800) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{8}
}

func (m *WlstSlu_2800) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_2800.Unmarshal(m, b)
}
func (m *WlstSlu_2800) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_2800.Marshal(b, m, deterministic)
}
func (m *WlstSlu_2800) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_2800.Merge(m, src)
}
func (m *WlstSlu_2800) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_2800.Size(m)
}
func (m *WlstSlu_2800) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_2800.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_2800 proto.InternalMessageInfo

func (m *WlstSlu_2800) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *WlstSlu_2800) GetAlarm() int32 {
	if m != nil {
		return m.Alarm
	}
	return 0
}

// Wlst_slu_9900_1900
type WlstSlu_2400 struct {
	// 操作标识（19-99：1-复位整个网络，2-以路由形式加入当前网络，3-创建网络，4-以路由形式加入新网络）（24-a4：0-停止，1-启动，2-延时启动）
	DoFlag int32 `protobuf:"varint,1,opt,name=do_flag,json=doFlag,proto3" json:"do_flag,omitempty"`
	// 操作结果 0x3a-失败，0x5a-成功
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_2400) Reset()         { *m = WlstSlu_2400{} }
func (m *WlstSlu_2400) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_2400) ProtoMessage()    {}
func (*WlstSlu_2400) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{9}
}

func (m *WlstSlu_2400) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_2400.Unmarshal(m, b)
}
func (m *WlstSlu_2400) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_2400.Marshal(b, m, deterministic)
}
func (m *WlstSlu_2400) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_2400.Merge(m, src)
}
func (m *WlstSlu_2400) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_2400.Size(m)
}
func (m *WlstSlu_2400) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_2400.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_2400 proto.InternalMessageInfo

func (m *WlstSlu_2400) GetDoFlag() int32 {
	if m != nil {
		return m.DoFlag
	}
	return 0
}

func (m *WlstSlu_2400) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// Wlst_slu_ee00
type WlstSlu_6E00 struct {
	// 操作标识（0-清除设置，1-设置，2-读取设置）
	DoFlag int32 `protobuf:"varint,1,opt,name=do_flag,json=doFlag,proto3" json:"do_flag,omitempty"`
	// 巡测开始时间 hhmm->int32(hh*60+mm)
	PatrolStart int32 `protobuf:"varint,2,opt,name=patrol_start,json=patrolStart,proto3" json:"patrol_start,omitempty"`
	// 巡测间隔时间 mm(0<=mm<=255)
	PatrolInterval int32 `protobuf:"varint,3,opt,name=patrol_interval,json=patrolInterval,proto3" json:"patrol_interval,omitempty"`
	// 巡测序号
	PatrolOrder int32 `protobuf:"varint,4,opt,name=patrol_order,json=patrolOrder,proto3" json:"patrol_order,omitempty"`
	// 巡测数量
	PatrolCount int32 `protobuf:"varint,5,opt,name=patrol_count,json=patrolCount,proto3" json:"patrol_count,omitempty"`
	// 序号
	CmdIdx               int32    `protobuf:"varint,6,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_6E00) Reset()         { *m = WlstSlu_6E00{} }
func (m *WlstSlu_6E00) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_6E00) ProtoMessage()    {}
func (*WlstSlu_6E00) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{10}
}

func (m *WlstSlu_6E00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_6E00.Unmarshal(m, b)
}
func (m *WlstSlu_6E00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_6E00.Marshal(b, m, deterministic)
}
func (m *WlstSlu_6E00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_6E00.Merge(m, src)
}
func (m *WlstSlu_6E00) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_6E00.Size(m)
}
func (m *WlstSlu_6E00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_6E00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_6E00 proto.InternalMessageInfo

func (m *WlstSlu_6E00) GetDoFlag() int32 {
	if m != nil {
		return m.DoFlag
	}
	return 0
}

func (m *WlstSlu_6E00) GetPatrolStart() int32 {
	if m != nil {
		return m.PatrolStart
	}
	return 0
}

func (m *WlstSlu_6E00) GetPatrolInterval() int32 {
	if m != nil {
		return m.PatrolInterval
	}
	return 0
}

func (m *WlstSlu_6E00) GetPatrolOrder() int32 {
	if m != nil {
		return m.PatrolOrder
	}
	return 0
}

func (m *WlstSlu_6E00) GetPatrolCount() int32 {
	if m != nil {
		return m.PatrolCount
	}
	return 0
}

func (m *WlstSlu_6E00) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

// Wlst_slu_b200
type WlstSlu_3000 struct {
	// 控制器数量
	Ctrls int32 `protobuf:"varint,1,opt,name=ctrls,proto3" json:"ctrls,omitempty"`
	// 域名
	DomainName int32 `protobuf:"varint,2,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	// 电压上限
	UpperVoltageLimit int32 `protobuf:"varint,3,opt,name=upper_voltage_limit,json=upperVoltageLimit,proto3" json:"upper_voltage_limit,omitempty"`
	// 电压下限
	LowerVoltageLimit int32 `protobuf:"varint,4,opt,name=lower_voltage_limit,json=lowerVoltageLimit,proto3" json:"lower_voltage_limit,omitempty"`
	// 64位地址
	MacAddr              int64    `protobuf:"varint,5,opt,name=mac_addr,json=macAddr,proto3" json:"mac_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_3000) Reset()         { *m = WlstSlu_3000{} }
func (m *WlstSlu_3000) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_3000) ProtoMessage()    {}
func (*WlstSlu_3000) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{11}
}

func (m *WlstSlu_3000) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_3000.Unmarshal(m, b)
}
func (m *WlstSlu_3000) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_3000.Marshal(b, m, deterministic)
}
func (m *WlstSlu_3000) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_3000.Merge(m, src)
}
func (m *WlstSlu_3000) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_3000.Size(m)
}
func (m *WlstSlu_3000) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_3000.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_3000 proto.InternalMessageInfo

func (m *WlstSlu_3000) GetCtrls() int32 {
	if m != nil {
		return m.Ctrls
	}
	return 0
}

func (m *WlstSlu_3000) GetDomainName() int32 {
	if m != nil {
		return m.DomainName
	}
	return 0
}

func (m *WlstSlu_3000) GetUpperVoltageLimit() int32 {
	if m != nil {
		return m.UpperVoltageLimit
	}
	return 0
}

func (m *WlstSlu_3000) GetLowerVoltageLimit() int32 {
	if m != nil {
		return m.LowerVoltageLimit
	}
	return 0
}

func (m *WlstSlu_3000) GetMacAddr() int64 {
	if m != nil {
		return m.MacAddr
	}
	return 0
}

type WlstSlu_9A00 struct {
	// 域名已设置标志
	DomainNameStatus     []int32  `protobuf:"varint,1,rep,packed,name=domain_name_status,json=domainNameStatus,proto3" json:"domain_name_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_9A00) Reset()         { *m = WlstSlu_9A00{} }
func (m *WlstSlu_9A00) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_9A00) ProtoMessage()    {}
func (*WlstSlu_9A00) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{12}
}

func (m *WlstSlu_9A00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_9A00.Unmarshal(m, b)
}
func (m *WlstSlu_9A00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_9A00.Marshal(b, m, deterministic)
}
func (m *WlstSlu_9A00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_9A00.Merge(m, src)
}
func (m *WlstSlu_9A00) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_9A00.Size(m)
}
func (m *WlstSlu_9A00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_9A00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_9A00 proto.InternalMessageInfo

func (m *WlstSlu_9A00) GetDomainNameStatus() []int32 {
	if m != nil {
		return m.DomainNameStatus
	}
	return nil
}

// Wlst_slu_7600
type WlstSluCd00 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,13,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 通讯失败次数
	CommunicationFailures int32 `protobuf:"varint,1,opt,name=communication_failures,json=communicationFailures,proto3" json:"communication_failures,omitempty"`
	// 功率因数
	PowerFactor int32 `protobuf:"varint,2,opt,name=power_factor,json=powerFactor,proto3" json:"power_factor,omitempty"`
	// 通信信道(仅包含启用的通道)
	CommunicationChannel int32 `protobuf:"varint,3,opt,name=communication_channel,json=communicationChannel,proto3" json:"communication_channel,omitempty"`
	// 电流最大量程
	CurrentRange float64 `protobuf:"fixed64,4,opt,name=current_range,json=currentRange,proto3" json:"current_range,omitempty"`
	// 有功最大量程
	PowerRange int32 `protobuf:"varint,5,opt,name=power_range,json=powerRange,proto3" json:"power_range,omitempty"`
	// 集中器自动控制功能 1-自动补发，0-不补发
	AutoMode int32 `protobuf:"varint,6,opt,name=auto_mode,json=autoMode,proto3" json:"auto_mode,omitempty"`
	// 经度
	Longitude float64 `protobuf:"fixed64,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// 纬度
	Latitude float64 `protobuf:"fixed64,8,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// 载波路由模式 1-标准，2-扩展，3-III代，4-IV代，5-自适应
	CarrierRoutingMode int32 `protobuf:"varint,9,opt,name=carrier_routing_mode,json=carrierRoutingMode,proto3" json:"carrier_routing_mode,omitempty"`
	// 蓝牙模块pin码，默认62547600
	BluetoothPin int32 `protobuf:"varint,10,opt,name=bluetooth_pin,json=bluetoothPin,proto3" json:"bluetooth_pin,omitempty"`
	// 蓝牙安全模式 0-无，1-安全模式1,2-安全模式2
	BluetoothMode int32 `protobuf:"varint,11,opt,name=bluetooth_mode,json=bluetoothMode,proto3" json:"bluetooth_mode,omitempty"`
	// 集中器通讯类型,concentrator communication type 0-gprs，1-485
	Cct int32 `protobuf:"varint,12,opt,name=cct,proto3" json:"cct,omitempty"`
	// 控制器24小时带电，0-不带电（集中器不转发时间），1-带电（集中器转发时间）
	AlwaysOnline         int32    `protobuf:"varint,14,opt,name=always_online,json=alwaysOnline,proto3" json:"always_online,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSluCd00) Reset()         { *m = WlstSluCd00{} }
func (m *WlstSluCd00) String() string { return proto.CompactTextString(m) }
func (*WlstSluCd00) ProtoMessage()    {}
func (*WlstSluCd00) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{13}
}

func (m *WlstSluCd00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluCd00.Unmarshal(m, b)
}
func (m *WlstSluCd00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluCd00.Marshal(b, m, deterministic)
}
func (m *WlstSluCd00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluCd00.Merge(m, src)
}
func (m *WlstSluCd00) XXX_Size() int {
	return xxx_messageInfo_WlstSluCd00.Size(m)
}
func (m *WlstSluCd00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluCd00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluCd00 proto.InternalMessageInfo

func (m *WlstSluCd00) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSluCd00) GetCommunicationFailures() int32 {
	if m != nil {
		return m.CommunicationFailures
	}
	return 0
}

func (m *WlstSluCd00) GetPowerFactor() int32 {
	if m != nil {
		return m.PowerFactor
	}
	return 0
}

func (m *WlstSluCd00) GetCommunicationChannel() int32 {
	if m != nil {
		return m.CommunicationChannel
	}
	return 0
}

func (m *WlstSluCd00) GetCurrentRange() float64 {
	if m != nil {
		return m.CurrentRange
	}
	return 0
}

func (m *WlstSluCd00) GetPowerRange() int32 {
	if m != nil {
		return m.PowerRange
	}
	return 0
}

func (m *WlstSluCd00) GetAutoMode() int32 {
	if m != nil {
		return m.AutoMode
	}
	return 0
}

func (m *WlstSluCd00) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *WlstSluCd00) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *WlstSluCd00) GetCarrierRoutingMode() int32 {
	if m != nil {
		return m.CarrierRoutingMode
	}
	return 0
}

func (m *WlstSluCd00) GetBluetoothPin() int32 {
	if m != nil {
		return m.BluetoothPin
	}
	return 0
}

func (m *WlstSluCd00) GetBluetoothMode() int32 {
	if m != nil {
		return m.BluetoothMode
	}
	return 0
}

func (m *WlstSluCd00) GetCct() int32 {
	if m != nil {
		return m.Cct
	}
	return 0
}

func (m *WlstSluCd00) GetAlwaysOnline() int32 {
	if m != nil {
		return m.AlwaysOnline
	}
	return 0
}

type WlstSlu_1C00 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 控制器条码
	SluitemIdx int64 `protobuf:"varint,2,opt,name=sluitem_idx,json=sluitemIdx,proto3" json:"sluitem_idx,omitempty"`
	// 域名
	DomainName           int32    `protobuf:"varint,3,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_1C00) Reset()         { *m = WlstSlu_1C00{} }
func (m *WlstSlu_1C00) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_1C00) ProtoMessage()    {}
func (*WlstSlu_1C00) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{14}
}

func (m *WlstSlu_1C00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_1C00.Unmarshal(m, b)
}
func (m *WlstSlu_1C00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_1C00.Marshal(b, m, deterministic)
}
func (m *WlstSlu_1C00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_1C00.Merge(m, src)
}
func (m *WlstSlu_1C00) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_1C00.Size(m)
}
func (m *WlstSlu_1C00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_1C00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_1C00 proto.InternalMessageInfo

func (m *WlstSlu_1C00) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSlu_1C00) GetSluitemIdx() int64 {
	if m != nil {
		return m.SluitemIdx
	}
	return 0
}

func (m *WlstSlu_1C00) GetDomainName() int32 {
	if m != nil {
		return m.DomainName
	}
	return 0
}

// Wlst_slu_7a00
type WlstSlu_1D00 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 控制器条码（4字节）
	SluitemIdx int64 `protobuf:"varint,2,opt,name=sluitem_idx,json=sluitemIdx,proto3" json:"sluitem_idx,omitempty"`
	// 控制器地址（2字节）
	// int64 sluitem_idx = 3;
	// 选测数据标识
	DataMark             *WlstSlu_1D00_DataMark `protobuf:"bytes,4,opt,name=data_mark,json=dataMark,proto3" json:"data_mark,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WlstSlu_1D00) Reset()         { *m = WlstSlu_1D00{} }
func (m *WlstSlu_1D00) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_1D00) ProtoMessage()    {}
func (*WlstSlu_1D00) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{15}
}

func (m *WlstSlu_1D00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_1D00.Unmarshal(m, b)
}
func (m *WlstSlu_1D00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_1D00.Marshal(b, m, deterministic)
}
func (m *WlstSlu_1D00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_1D00.Merge(m, src)
}
func (m *WlstSlu_1D00) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_1D00.Size(m)
}
func (m *WlstSlu_1D00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_1D00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_1D00 proto.InternalMessageInfo

func (m *WlstSlu_1D00) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSlu_1D00) GetSluitemIdx() int64 {
	if m != nil {
		return m.SluitemIdx
	}
	return 0
}

func (m *WlstSlu_1D00) GetDataMark() *WlstSlu_1D00_DataMark {
	if m != nil {
		return m.DataMark
	}
	return nil
}

type WlstSlu_1D00_DataMark struct {
	// 选测
	ReadData int32 `protobuf:"varint,1,opt,name=read_data,json=readData,proto3" json:"read_data,omitempty"`
	// 读取时钟
	ReadTimer int32 `protobuf:"varint,2,opt,name=read_timer,json=readTimer,proto3" json:"read_timer,omitempty"`
	// 读取运行参数
	ReadArgs int32 `protobuf:"varint,3,opt,name=read_args,json=readArgs,proto3" json:"read_args,omitempty"`
	// 读取组地址
	ReadGroup int32 `protobuf:"varint,4,opt,name=read_group,json=readGroup,proto3" json:"read_group,omitempty"`
	// 读取版本
	ReadVer int32 `protobuf:"varint,5,opt,name=read_ver,json=readVer,proto3" json:"read_ver,omitempty"`
	// 读取当天日出日落
	ReadSunriseset int32 `protobuf:"varint,6,opt,name=read_sunriseset,json=readSunriseset,proto3" json:"read_sunriseset,omitempty"`
	// 读取本地参数（新）
	ReadTimetable int32 `protobuf:"varint,7,opt,name=read_timetable,json=readTimetable,proto3" json:"read_timetable,omitempty"`
	// 读取控制器数据（新）
	ReadCtrldata         int32    `protobuf:"varint,8,opt,name=read_ctrldata,json=readCtrldata,proto3" json:"read_ctrldata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_1D00_DataMark) Reset()         { *m = WlstSlu_1D00_DataMark{} }
func (m *WlstSlu_1D00_DataMark) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_1D00_DataMark) ProtoMessage()    {}
func (*WlstSlu_1D00_DataMark) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{15, 0}
}

func (m *WlstSlu_1D00_DataMark) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_1D00_DataMark.Unmarshal(m, b)
}
func (m *WlstSlu_1D00_DataMark) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_1D00_DataMark.Marshal(b, m, deterministic)
}
func (m *WlstSlu_1D00_DataMark) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_1D00_DataMark.Merge(m, src)
}
func (m *WlstSlu_1D00_DataMark) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_1D00_DataMark.Size(m)
}
func (m *WlstSlu_1D00_DataMark) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_1D00_DataMark.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_1D00_DataMark proto.InternalMessageInfo

func (m *WlstSlu_1D00_DataMark) GetReadData() int32 {
	if m != nil {
		return m.ReadData
	}
	return 0
}

func (m *WlstSlu_1D00_DataMark) GetReadTimer() int32 {
	if m != nil {
		return m.ReadTimer
	}
	return 0
}

func (m *WlstSlu_1D00_DataMark) GetReadArgs() int32 {
	if m != nil {
		return m.ReadArgs
	}
	return 0
}

func (m *WlstSlu_1D00_DataMark) GetReadGroup() int32 {
	if m != nil {
		return m.ReadGroup
	}
	return 0
}

func (m *WlstSlu_1D00_DataMark) GetReadVer() int32 {
	if m != nil {
		return m.ReadVer
	}
	return 0
}

func (m *WlstSlu_1D00_DataMark) GetReadSunriseset() int32 {
	if m != nil {
		return m.ReadSunriseset
	}
	return 0
}

func (m *WlstSlu_1D00_DataMark) GetReadTimetable() int32 {
	if m != nil {
		return m.ReadTimetable
	}
	return 0
}

func (m *WlstSlu_1D00_DataMark) GetReadCtrldata() int32 {
	if m != nil {
		return m.ReadCtrldata
	}
	return 0
}

// Wlst_slu_fa00
type WlstSlu_9D00 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 控制器条码（4字节）
	SluitemIdx int64 `protobuf:"varint,2,opt,name=sluitem_idx,json=sluitemIdx,proto3" json:"sluitem_idx,omitempty"`
	// 控制器地址（2字节）
	// int32 sluitem_idx = 3;
	// 选测数据标识
	DataMark *WlstSlu_1D00_DataMark `protobuf:"bytes,4,opt,name=data_mark,json=dataMark,proto3" json:"data_mark,omitempty"`
	// 控制器回路数量
	LoopCount int32 `protobuf:"varint,5,opt,name=loop_count,json=loopCount,proto3" json:"loop_count,omitempty"`
	// 控制器选测数据(read_data)
	SluitemData *WlstSlu_9D00_SluitemData `protobuf:"bytes,6,opt,name=sluitem_data,json=sluitemData,proto3" json:"sluitem_data,omitempty"`
	// 控制器时钟(read_timer)
	SluitemTime int64 `protobuf:"varint,7,opt,name=sluitem_time,json=sluitemTime,proto3" json:"sluitem_time,omitempty"`
	// 控制器运行参数(read_args)
	SluitemPara *WlstSlu_9D00_SluitemPara `protobuf:"bytes,8,opt,name=sluitem_para,json=sluitemPara,proto3" json:"sluitem_para,omitempty"`
	// 控制器组地址(read_group)
	SluitemGroup []int32 `protobuf:"varint,9,rep,packed,name=sluitem_group,json=sluitemGroup,proto3" json:"sluitem_group,omitempty"`
	// 控制器版本(read_ver)
	SluitemVer *WlstSlu_9D00_SluitemVer `protobuf:"bytes,10,opt,name=sluitem_ver,json=sluitemVer,proto3" json:"sluitem_ver,omitempty"`
	// 控制器当日日出日落(read_sunriseset)
	SluitemSunriseset *WlstSlu_9D00_SluitemSunriseset `protobuf:"bytes,11,opt,name=sluitem_sunriseset,json=sluitemSunriseset,proto3" json:"sluitem_sunriseset,omitempty"`
	// 控制器本地参数(read_timetable)
	SluitemRuntime []*WlstSlu_9D00_SluitemRuntime `protobuf:"bytes,12,rep,name=sluitem_runtime,json=sluitemRuntime,proto3" json:"sluitem_runtime,omitempty"`
	// 控制器数据（新）(read_ctrldata)
	SluitemDataNew *WlstSlu_9D00_SluitemDataNew `protobuf:"bytes,13,opt,name=sluitem_data_new,json=sluitemDataNew,proto3" json:"sluitem_data_new,omitempty"`
	// 读取状态0-失败，1-成功
	Status  int32                 `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
	SetMark *WlstSlu_9D00_SetMark `protobuf:"bytes,15,opt,name=set_mark,json=setMark,proto3" json:"set_mark,omitempty"`
	// 是否有后续数据,0-没有，1-有
	DataContinue         int32    `protobuf:"varint,16,opt,name=data_continue,json=dataContinue,proto3" json:"data_continue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_9D00) Reset()         { *m = WlstSlu_9D00{} }
func (m *WlstSlu_9D00) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_9D00) ProtoMessage()    {}
func (*WlstSlu_9D00) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{16}
}

func (m *WlstSlu_9D00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_9D00.Unmarshal(m, b)
}
func (m *WlstSlu_9D00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_9D00.Marshal(b, m, deterministic)
}
func (m *WlstSlu_9D00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_9D00.Merge(m, src)
}
func (m *WlstSlu_9D00) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_9D00.Size(m)
}
func (m *WlstSlu_9D00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_9D00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_9D00 proto.InternalMessageInfo

func (m *WlstSlu_9D00) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSlu_9D00) GetSluitemIdx() int64 {
	if m != nil {
		return m.SluitemIdx
	}
	return 0
}

func (m *WlstSlu_9D00) GetDataMark() *WlstSlu_1D00_DataMark {
	if m != nil {
		return m.DataMark
	}
	return nil
}

func (m *WlstSlu_9D00) GetLoopCount() int32 {
	if m != nil {
		return m.LoopCount
	}
	return 0
}

func (m *WlstSlu_9D00) GetSluitemData() *WlstSlu_9D00_SluitemData {
	if m != nil {
		return m.SluitemData
	}
	return nil
}

func (m *WlstSlu_9D00) GetSluitemTime() int64 {
	if m != nil {
		return m.SluitemTime
	}
	return 0
}

func (m *WlstSlu_9D00) GetSluitemPara() *WlstSlu_9D00_SluitemPara {
	if m != nil {
		return m.SluitemPara
	}
	return nil
}

func (m *WlstSlu_9D00) GetSluitemGroup() []int32 {
	if m != nil {
		return m.SluitemGroup
	}
	return nil
}

func (m *WlstSlu_9D00) GetSluitemVer() *WlstSlu_9D00_SluitemVer {
	if m != nil {
		return m.SluitemVer
	}
	return nil
}

func (m *WlstSlu_9D00) GetSluitemSunriseset() *WlstSlu_9D00_SluitemSunriseset {
	if m != nil {
		return m.SluitemSunriseset
	}
	return nil
}

func (m *WlstSlu_9D00) GetSluitemRuntime() []*WlstSlu_9D00_SluitemRuntime {
	if m != nil {
		return m.SluitemRuntime
	}
	return nil
}

func (m *WlstSlu_9D00) GetSluitemDataNew() *WlstSlu_9D00_SluitemDataNew {
	if m != nil {
		return m.SluitemDataNew
	}
	return nil
}

func (m *WlstSlu_9D00) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *WlstSlu_9D00) GetSetMark() *WlstSlu_9D00_SetMark {
	if m != nil {
		return m.SetMark
	}
	return nil
}

func (m *WlstSlu_9D00) GetDataContinue() int32 {
	if m != nil {
		return m.DataContinue
	}
	return 0
}

type WlstSlu_9D00_SetMark struct {
	SetTimer             int32    `protobuf:"varint,1,opt,name=set_timer,json=setTimer,proto3" json:"set_timer,omitempty"`
	SetArgs              int32    `protobuf:"varint,2,opt,name=set_args,json=setArgs,proto3" json:"set_args,omitempty"`
	SetGroup             int32    `protobuf:"varint,3,opt,name=set_group,json=setGroup,proto3" json:"set_group,omitempty"`
	SetReset             int32    `protobuf:"varint,4,opt,name=set_reset,json=setReset,proto3" json:"set_reset,omitempty"`
	SetControl           int32    `protobuf:"varint,5,opt,name=set_control,json=setControl,proto3" json:"set_control,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_9D00_SetMark) Reset()         { *m = WlstSlu_9D00_SetMark{} }
func (m *WlstSlu_9D00_SetMark) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_9D00_SetMark) ProtoMessage()    {}
func (*WlstSlu_9D00_SetMark) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{16, 0}
}

func (m *WlstSlu_9D00_SetMark) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_9D00_SetMark.Unmarshal(m, b)
}
func (m *WlstSlu_9D00_SetMark) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_9D00_SetMark.Marshal(b, m, deterministic)
}
func (m *WlstSlu_9D00_SetMark) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_9D00_SetMark.Merge(m, src)
}
func (m *WlstSlu_9D00_SetMark) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_9D00_SetMark.Size(m)
}
func (m *WlstSlu_9D00_SetMark) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_9D00_SetMark.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_9D00_SetMark proto.InternalMessageInfo

func (m *WlstSlu_9D00_SetMark) GetSetTimer() int32 {
	if m != nil {
		return m.SetTimer
	}
	return 0
}

func (m *WlstSlu_9D00_SetMark) GetSetArgs() int32 {
	if m != nil {
		return m.SetArgs
	}
	return 0
}

func (m *WlstSlu_9D00_SetMark) GetSetGroup() int32 {
	if m != nil {
		return m.SetGroup
	}
	return 0
}

func (m *WlstSlu_9D00_SetMark) GetSetReset() int32 {
	if m != nil {
		return m.SetReset
	}
	return 0
}

func (m *WlstSlu_9D00_SetMark) GetSetControl() int32 {
	if m != nil {
		return m.SetControl
	}
	return 0
}

type WlstSlu_9D00_SluitemData struct {
	// 电压 /100
	Voltage float64 `protobuf:"fixed64,1,opt,name=voltage,proto3" json:"voltage,omitempty"`
	// 电流 /100
	Current []float64 `protobuf:"fixed64,2,rep,packed,name=current,proto3" json:"current,omitempty"`
	// 有功功率 /10
	ActivePower []float64 `protobuf:"fixed64,3,rep,packed,name=active_power,json=activePower,proto3" json:"active_power,omitempty"`
	// 无功功率 /10
	ReactivePower []float64 `protobuf:"fixed64,4,rep,packed,name=reactive_power,json=reactivePower,proto3" json:"reactive_power,omitempty"`
	// 最大电压 /100
	MaxVoltage float64 `protobuf:"fixed64,5,opt,name=max_voltage,json=maxVoltage,proto3" json:"max_voltage,omitempty"`
	// 最大电流 /100
	MaxCurrent []float64 `protobuf:"fixed64,6,rep,packed,name=max_current,json=maxCurrent,proto3" json:"max_current,omitempty"`
	// 累计电量
	TotalElectricity []float64 `protobuf:"fixed64,7,rep,packed,name=total_electricity,json=totalElectricity,proto3" json:"total_electricity,omitempty"`
	// 温度 0xff无效
	Temperature int32 `protobuf:"varint,8,opt,name=temperature,proto3" json:"temperature,omitempty"`
	// 漏电流 /100
	LeakageCurrent float64 `protobuf:"fixed64,9,opt,name=leakage_current,json=leakageCurrent,proto3" json:"leakage_current,omitempty"`
	// 时钟故障
	TimerError int32 `protobuf:"varint,10,opt,name=timer_error,json=timerError,proto3" json:"timer_error,omitempty"`
	// 控制器状态
	SluitemStatus *WlstSlu_7300_BaseSluitemData_SluitemStatus `protobuf:"bytes,11,opt,name=sluitem_status,json=sluitemStatus,proto3" json:"sluitem_status,omitempty"`
	// 灯状态
	LightStatus []*WlstSlu_7300_BaseSluitemData_LightStatus `protobuf:"bytes,12,rep,name=light_status,json=lightStatus,proto3" json:"light_status,omitempty"`
	// 自复位次数
	ResetCount           int32    `protobuf:"varint,13,opt,name=reset_count,json=resetCount,proto3" json:"reset_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_9D00_SluitemData) Reset()         { *m = WlstSlu_9D00_SluitemData{} }
func (m *WlstSlu_9D00_SluitemData) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_9D00_SluitemData) ProtoMessage()    {}
func (*WlstSlu_9D00_SluitemData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{16, 1}
}

func (m *WlstSlu_9D00_SluitemData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_9D00_SluitemData.Unmarshal(m, b)
}
func (m *WlstSlu_9D00_SluitemData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_9D00_SluitemData.Marshal(b, m, deterministic)
}
func (m *WlstSlu_9D00_SluitemData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_9D00_SluitemData.Merge(m, src)
}
func (m *WlstSlu_9D00_SluitemData) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_9D00_SluitemData.Size(m)
}
func (m *WlstSlu_9D00_SluitemData) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_9D00_SluitemData.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_9D00_SluitemData proto.InternalMessageInfo

func (m *WlstSlu_9D00_SluitemData) GetVoltage() float64 {
	if m != nil {
		return m.Voltage
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemData) GetCurrent() []float64 {
	if m != nil {
		return m.Current
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemData) GetActivePower() []float64 {
	if m != nil {
		return m.ActivePower
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemData) GetReactivePower() []float64 {
	if m != nil {
		return m.ReactivePower
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemData) GetMaxVoltage() float64 {
	if m != nil {
		return m.MaxVoltage
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemData) GetMaxCurrent() []float64 {
	if m != nil {
		return m.MaxCurrent
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemData) GetTotalElectricity() []float64 {
	if m != nil {
		return m.TotalElectricity
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemData) GetTemperature() int32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemData) GetLeakageCurrent() float64 {
	if m != nil {
		return m.LeakageCurrent
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemData) GetTimerError() int32 {
	if m != nil {
		return m.TimerError
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemData) GetSluitemStatus() *WlstSlu_7300_BaseSluitemData_SluitemStatus {
	if m != nil {
		return m.SluitemStatus
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemData) GetLightStatus() []*WlstSlu_7300_BaseSluitemData_LightStatus {
	if m != nil {
		return m.LightStatus
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemData) GetResetCount() int32 {
	if m != nil {
		return m.ResetCount
	}
	return 0
}

type WlstSlu_9D00_SluitemDataNew struct {
	// 电压 /100
	Voltage []float64 `protobuf:"fixed64,1,rep,packed,name=voltage,proto3" json:"voltage,omitempty"`
	// 电流 /100
	Current []float64 `protobuf:"fixed64,2,rep,packed,name=current,proto3" json:"current,omitempty"`
	// 有功功率 /10
	ActivePower []float64 `protobuf:"fixed64,3,rep,packed,name=active_power,json=activePower,proto3" json:"active_power,omitempty"`
	// 运行时间
	RunTime []int32 `protobuf:"varint,4,rep,packed,name=run_time,json=runTime,proto3" json:"run_time,omitempty"`
	// 相位，0-无法确认,1-a,2-b,3-c
	Phase int32 `protobuf:"varint,5,opt,name=phase,proto3" json:"phase,omitempty"`
	// 累计电量
	TotalElectricity []float64 `protobuf:"fixed64,7,rep,packed,name=total_electricity,json=totalElectricity,proto3" json:"total_electricity,omitempty"`
	// 漏电流 /100
	LeakageCurrent float64 `protobuf:"fixed64,9,opt,name=leakage_current,json=leakageCurrent,proto3" json:"leakage_current,omitempty"`
	// 时钟故障
	TimerError int32 `protobuf:"varint,10,opt,name=timer_error,json=timerError,proto3" json:"timer_error,omitempty"`
	// 控制器状态
	SluitemStatus *WlstSlu_7300_BaseSluitemData_SluitemStatus `protobuf:"bytes,11,opt,name=sluitem_status,json=sluitemStatus,proto3" json:"sluitem_status,omitempty"`
	// 灯状态
	LightStatus []*WlstSlu_7300_BaseSluitemData_LightStatus `protobuf:"bytes,12,rep,name=light_status,json=lightStatus,proto3" json:"light_status,omitempty"`
	// 自复位次数
	ResetCount int32 `protobuf:"varint,13,opt,name=reset_count,json=resetCount,proto3" json:"reset_count,omitempty"`
	// 节能档位
	EnergySaving         []int32  `protobuf:"varint,14,rep,packed,name=energy_saving,json=energySaving,proto3" json:"energy_saving,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_9D00_SluitemDataNew) Reset()         { *m = WlstSlu_9D00_SluitemDataNew{} }
func (m *WlstSlu_9D00_SluitemDataNew) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_9D00_SluitemDataNew) ProtoMessage()    {}
func (*WlstSlu_9D00_SluitemDataNew) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{16, 2}
}

func (m *WlstSlu_9D00_SluitemDataNew) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_9D00_SluitemDataNew.Unmarshal(m, b)
}
func (m *WlstSlu_9D00_SluitemDataNew) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_9D00_SluitemDataNew.Marshal(b, m, deterministic)
}
func (m *WlstSlu_9D00_SluitemDataNew) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_9D00_SluitemDataNew.Merge(m, src)
}
func (m *WlstSlu_9D00_SluitemDataNew) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_9D00_SluitemDataNew.Size(m)
}
func (m *WlstSlu_9D00_SluitemDataNew) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_9D00_SluitemDataNew.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_9D00_SluitemDataNew proto.InternalMessageInfo

func (m *WlstSlu_9D00_SluitemDataNew) GetVoltage() []float64 {
	if m != nil {
		return m.Voltage
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemDataNew) GetCurrent() []float64 {
	if m != nil {
		return m.Current
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemDataNew) GetActivePower() []float64 {
	if m != nil {
		return m.ActivePower
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemDataNew) GetRunTime() []int32 {
	if m != nil {
		return m.RunTime
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemDataNew) GetPhase() int32 {
	if m != nil {
		return m.Phase
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemDataNew) GetTotalElectricity() []float64 {
	if m != nil {
		return m.TotalElectricity
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemDataNew) GetLeakageCurrent() float64 {
	if m != nil {
		return m.LeakageCurrent
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemDataNew) GetTimerError() int32 {
	if m != nil {
		return m.TimerError
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemDataNew) GetSluitemStatus() *WlstSlu_7300_BaseSluitemData_SluitemStatus {
	if m != nil {
		return m.SluitemStatus
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemDataNew) GetLightStatus() []*WlstSlu_7300_BaseSluitemData_LightStatus {
	if m != nil {
		return m.LightStatus
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemDataNew) GetResetCount() int32 {
	if m != nil {
		return m.ResetCount
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemDataNew) GetEnergySaving() []int32 {
	if m != nil {
		return m.EnergySaving
	}
	return nil
}

type WlstSlu_9D00_SluitemPara struct {
	// 域名
	DomainName int32 `protobuf:"varint,1,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	// 控制器状态 0-停运，1-投运
	SluitemStatus int32 `protobuf:"varint,2,opt,name=sluitem_status,json=sluitemStatus,proto3" json:"sluitem_status,omitempty"`
	// 控制器主报 0-禁止主报，1-允许主报
	SluitemEnableAlarm int32 `protobuf:"varint,3,opt,name=sluitem_enable_alarm,json=sluitemEnableAlarm,proto3" json:"sluitem_enable_alarm,omitempty"`
	// 控制器上电开灯 1-开灯，0-关灯
	SluitemPowerTurnon []int32 `protobuf:"varint,4,rep,packed,name=sluitem_power_turnon,json=sluitemPowerTurnon,proto3" json:"sluitem_power_turnon,omitempty"`
	// 控制器1-4回路矢量
	SluitemVector []int32 `protobuf:"varint,5,rep,packed,name=sluitem_vector,json=sluitemVector,proto3" json:"sluitem_vector,omitempty"`
	// 经度
	Longitude float64 `protobuf:"fixed64,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// 纬度
	Latitude float64 `protobuf:"fixed64,7,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// 1-4回路额定功率
	RatedPower []int32 `protobuf:"varint,8,rep,packed,name=rated_power,json=ratedPower,proto3" json:"rated_power,omitempty"`
	// nb主报间隔，(0～127)*5
	UplinkTimer int32 `protobuf:"varint,9,opt,name=uplink_timer,json=uplinkTimer,proto3" json:"uplink_timer,omitempty"`
	// nb主报需要主站应答，0-不需要，1-需要
	UplinkReply          int32    `protobuf:"varint,10,opt,name=uplink_reply,json=uplinkReply,proto3" json:"uplink_reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_9D00_SluitemPara) Reset()         { *m = WlstSlu_9D00_SluitemPara{} }
func (m *WlstSlu_9D00_SluitemPara) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_9D00_SluitemPara) ProtoMessage()    {}
func (*WlstSlu_9D00_SluitemPara) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{16, 3}
}

func (m *WlstSlu_9D00_SluitemPara) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_9D00_SluitemPara.Unmarshal(m, b)
}
func (m *WlstSlu_9D00_SluitemPara) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_9D00_SluitemPara.Marshal(b, m, deterministic)
}
func (m *WlstSlu_9D00_SluitemPara) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_9D00_SluitemPara.Merge(m, src)
}
func (m *WlstSlu_9D00_SluitemPara) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_9D00_SluitemPara.Size(m)
}
func (m *WlstSlu_9D00_SluitemPara) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_9D00_SluitemPara.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_9D00_SluitemPara proto.InternalMessageInfo

func (m *WlstSlu_9D00_SluitemPara) GetDomainName() int32 {
	if m != nil {
		return m.DomainName
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemPara) GetSluitemStatus() int32 {
	if m != nil {
		return m.SluitemStatus
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemPara) GetSluitemEnableAlarm() int32 {
	if m != nil {
		return m.SluitemEnableAlarm
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemPara) GetSluitemPowerTurnon() []int32 {
	if m != nil {
		return m.SluitemPowerTurnon
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemPara) GetSluitemVector() []int32 {
	if m != nil {
		return m.SluitemVector
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemPara) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemPara) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemPara) GetRatedPower() []int32 {
	if m != nil {
		return m.RatedPower
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemPara) GetUplinkTimer() int32 {
	if m != nil {
		return m.UplinkTimer
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemPara) GetUplinkReply() int32 {
	if m != nil {
		return m.UplinkReply
	}
	return 0
}

type WlstSlu_9D00_SluitemVer struct {
	// 控制器回路
	SluitemLoop int32 `protobuf:"varint,1,opt,name=sluitem_loop,json=sluitemLoop,proto3" json:"sluitem_loop,omitempty"`
	// 节能方式
	EnergySaving int32 `protobuf:"varint,2,opt,name=energy_saving,json=energySaving,proto3" json:"energy_saving,omitempty"`
	// 有漏电模块
	ElectricLeakageModule int32 `protobuf:"varint,3,opt,name=electric_leakage_module,json=electricLeakageModule,proto3" json:"electric_leakage_module,omitempty"`
	// 有温度检测模块
	TemperatureModule int32 `protobuf:"varint,4,opt,name=temperature_module,json=temperatureModule,proto3" json:"temperature_module,omitempty"`
	// 有时钟
	TimerModule int32 `protobuf:"varint,5,opt,name=timer_module,json=timerModule,proto3" json:"timer_module,omitempty"`
	// 型号 0-unknow,1-wj2090j
	SluitemType string `protobuf:"bytes,6,opt,name=sluitem_type,json=sluitemType,proto3" json:"sluitem_type,omitempty"`
	// 软件版本
	Ver                  string   `protobuf:"bytes,7,opt,name=ver,proto3" json:"ver,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_9D00_SluitemVer) Reset()         { *m = WlstSlu_9D00_SluitemVer{} }
func (m *WlstSlu_9D00_SluitemVer) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_9D00_SluitemVer) ProtoMessage()    {}
func (*WlstSlu_9D00_SluitemVer) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{16, 4}
}

func (m *WlstSlu_9D00_SluitemVer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_9D00_SluitemVer.Unmarshal(m, b)
}
func (m *WlstSlu_9D00_SluitemVer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_9D00_SluitemVer.Marshal(b, m, deterministic)
}
func (m *WlstSlu_9D00_SluitemVer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_9D00_SluitemVer.Merge(m, src)
}
func (m *WlstSlu_9D00_SluitemVer) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_9D00_SluitemVer.Size(m)
}
func (m *WlstSlu_9D00_SluitemVer) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_9D00_SluitemVer.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_9D00_SluitemVer proto.InternalMessageInfo

func (m *WlstSlu_9D00_SluitemVer) GetSluitemLoop() int32 {
	if m != nil {
		return m.SluitemLoop
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemVer) GetEnergySaving() int32 {
	if m != nil {
		return m.EnergySaving
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemVer) GetElectricLeakageModule() int32 {
	if m != nil {
		return m.ElectricLeakageModule
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemVer) GetTemperatureModule() int32 {
	if m != nil {
		return m.TemperatureModule
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemVer) GetTimerModule() int32 {
	if m != nil {
		return m.TimerModule
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemVer) GetSluitemType() string {
	if m != nil {
		return m.SluitemType
	}
	return ""
}

func (m *WlstSlu_9D00_SluitemVer) GetVer() string {
	if m != nil {
		return m.Ver
	}
	return ""
}

type WlstSlu_9D00_SluitemSunriseset struct {
	// 当日日出日落时间 hhmm->int32
	Sunrise              int32    `protobuf:"varint,1,opt,name=sunrise,proto3" json:"sunrise,omitempty"`
	Sunset               int32    `protobuf:"varint,2,opt,name=sunset,proto3" json:"sunset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_9D00_SluitemSunriseset) Reset()         { *m = WlstSlu_9D00_SluitemSunriseset{} }
func (m *WlstSlu_9D00_SluitemSunriseset) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_9D00_SluitemSunriseset) ProtoMessage()    {}
func (*WlstSlu_9D00_SluitemSunriseset) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{16, 5}
}

func (m *WlstSlu_9D00_SluitemSunriseset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_9D00_SluitemSunriseset.Unmarshal(m, b)
}
func (m *WlstSlu_9D00_SluitemSunriseset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_9D00_SluitemSunriseset.Marshal(b, m, deterministic)
}
func (m *WlstSlu_9D00_SluitemSunriseset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_9D00_SluitemSunriseset.Merge(m, src)
}
func (m *WlstSlu_9D00_SluitemSunriseset) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_9D00_SluitemSunriseset.Size(m)
}
func (m *WlstSlu_9D00_SluitemSunriseset) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_9D00_SluitemSunriseset.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_9D00_SluitemSunriseset proto.InternalMessageInfo

func (m *WlstSlu_9D00_SluitemSunriseset) GetSunrise() int32 {
	if m != nil {
		return m.Sunrise
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemSunriseset) GetSunset() int32 {
	if m != nil {
		return m.Sunset
	}
	return 0
}

type WlstSlu_9D00_SluitemRuntime struct {
	// 本地控制数据类型0-基本类型（6字节），1-扩展类型（6+20字节）
	DataType int32 `protobuf:"varint,1,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	// 输出类型0-继电器，1-pwm输出，2-485
	OutputType int32 `protobuf:"varint,2,opt,name=output_type,json=outputType,proto3" json:"output_type,omitempty"`
	// 操作类型1-定时操作，2-经纬度操作，3-即时操作
	OperateType int32 `protobuf:"varint,3,opt,name=operate_type,json=operateType,proto3" json:"operate_type,omitempty"`
	// 有效日期，0-6～周日-周6
	DateEnable []int32 `protobuf:"varint,4,rep,packed,name=date_enable,json=dateEnable,proto3" json:"date_enable,omitempty"`
	// 开关灯操作时间 hhmm->int32
	OperateTime int32 `protobuf:"varint,5,opt,name=operate_time,json=operateTime,proto3" json:"operate_time,omitempty"`
	// 操作偏移 -720~+720
	OperateOffset int32 `protobuf:"varint,6,opt,name=operate_offset,json=operateOffset,proto3" json:"operate_offset,omitempty"`
	// 继电器操作回路1-4 0-不操作，3-开灯，5-一档节能，a-二档节能，c-关灯
	RelayOperate []int32 `protobuf:"varint,7,rep,packed,name=relay_operate,json=relayOperate,proto3" json:"relay_operate,omitempty"`
	// PWM操作回路
	PwmLoop []int32 `protobuf:"varint,8,rep,packed,name=pwm_loop,json=pwmLoop,proto3" json:"pwm_loop,omitempty"`
	// PWM操作占空比
	PwmPower int32 `protobuf:"varint,9,opt,name=pwm_power,json=pwmPower,proto3" json:"pwm_power,omitempty"`
	// PWM频率 (1~255) * 100
	PwmBaudrate int32 `protobuf:"varint,10,opt,name=pwm_baudrate,json=pwmBaudrate,proto3" json:"pwm_baudrate,omitempty"`
	// 485波特率 0-300,1-600,2-1200,3-2400,4-4800,5-9600,6-19200
	Rs485Baudrate int32 `protobuf:"varint,11,opt,name=rs485_baudrate,json=rs485Baudrate,proto3" json:"rs485_baudrate,omitempty"`
	// 485校验位 0-无校验，1-奇校验，2-偶校验
	Rs485Check           int32    `protobuf:"varint,12,opt,name=rs485_check,json=rs485Check,proto3" json:"rs485_check,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_9D00_SluitemRuntime) Reset()         { *m = WlstSlu_9D00_SluitemRuntime{} }
func (m *WlstSlu_9D00_SluitemRuntime) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_9D00_SluitemRuntime) ProtoMessage()    {}
func (*WlstSlu_9D00_SluitemRuntime) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{16, 6}
}

func (m *WlstSlu_9D00_SluitemRuntime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_9D00_SluitemRuntime.Unmarshal(m, b)
}
func (m *WlstSlu_9D00_SluitemRuntime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_9D00_SluitemRuntime.Marshal(b, m, deterministic)
}
func (m *WlstSlu_9D00_SluitemRuntime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_9D00_SluitemRuntime.Merge(m, src)
}
func (m *WlstSlu_9D00_SluitemRuntime) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_9D00_SluitemRuntime.Size(m)
}
func (m *WlstSlu_9D00_SluitemRuntime) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_9D00_SluitemRuntime.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_9D00_SluitemRuntime proto.InternalMessageInfo

func (m *WlstSlu_9D00_SluitemRuntime) GetDataType() int32 {
	if m != nil {
		return m.DataType
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemRuntime) GetOutputType() int32 {
	if m != nil {
		return m.OutputType
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemRuntime) GetOperateType() int32 {
	if m != nil {
		return m.OperateType
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemRuntime) GetDateEnable() []int32 {
	if m != nil {
		return m.DateEnable
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemRuntime) GetOperateTime() int32 {
	if m != nil {
		return m.OperateTime
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemRuntime) GetOperateOffset() int32 {
	if m != nil {
		return m.OperateOffset
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemRuntime) GetRelayOperate() []int32 {
	if m != nil {
		return m.RelayOperate
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemRuntime) GetPwmLoop() []int32 {
	if m != nil {
		return m.PwmLoop
	}
	return nil
}

func (m *WlstSlu_9D00_SluitemRuntime) GetPwmPower() int32 {
	if m != nil {
		return m.PwmPower
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemRuntime) GetPwmBaudrate() int32 {
	if m != nil {
		return m.PwmBaudrate
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemRuntime) GetRs485Baudrate() int32 {
	if m != nil {
		return m.Rs485Baudrate
	}
	return 0
}

func (m *WlstSlu_9D00_SluitemRuntime) GetRs485Check() int32 {
	if m != nil {
		return m.Rs485Check
	}
	return 0
}

// Wlst_slu_7000
type WlstSluF000 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 复位标识
	ResetMark            *WlstSluF000_ResetMark `protobuf:"bytes,2,opt,name=reset_mark,json=resetMark,proto3" json:"reset_mark,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WlstSluF000) Reset()         { *m = WlstSluF000{} }
func (m *WlstSluF000) String() string { return proto.CompactTextString(m) }
func (*WlstSluF000) ProtoMessage()    {}
func (*WlstSluF000) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{17}
}

func (m *WlstSluF000) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF000.Unmarshal(m, b)
}
func (m *WlstSluF000) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF000.Marshal(b, m, deterministic)
}
func (m *WlstSluF000) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF000.Merge(m, src)
}
func (m *WlstSluF000) XXX_Size() int {
	return xxx_messageInfo_WlstSluF000.Size(m)
}
func (m *WlstSluF000) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF000.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF000 proto.InternalMessageInfo

func (m *WlstSluF000) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSluF000) GetResetMark() *WlstSluF000_ResetMark {
	if m != nil {
		return m.ResetMark
	}
	return nil
}

type WlstSluF000_ResetMark struct {
	// 清除任务
	ClearTask int32 `protobuf:"varint,1,opt,name=clear_task,json=clearTask,proto3" json:"clear_task,omitempty"`
	// 复位集中器
	ResetConcentrator int32 `protobuf:"varint,2,opt,name=reset_concentrator,json=resetConcentrator,proto3" json:"reset_concentrator,omitempty"`
	// 硬件复位zigbee
	HardResetZigbee int32 `protobuf:"varint,3,opt,name=hard_reset_zigbee,json=hardResetZigbee,proto3" json:"hard_reset_zigbee,omitempty"`
	// 软件复位zigbee
	SoftResetZigbee int32 `protobuf:"varint,4,opt,name=soft_reset_zigbee,json=softResetZigbee,proto3" json:"soft_reset_zigbee,omitempty"`
	// 复位电力载波
	ResetCarrier int32 `protobuf:"varint,5,opt,name=reset_carrier,json=resetCarrier,proto3" json:"reset_carrier,omitempty"`
	// 初始化所有
	InitAll int32 `protobuf:"varint,6,opt,name=init_all,json=initAll,proto3" json:"init_all,omitempty"`
	// 清除数据
	ClearData int32 `protobuf:"varint,7,opt,name=clear_data,json=clearData,proto3" json:"clear_data,omitempty"`
	// 清除参数
	ClearArgs            int32    `protobuf:"varint,8,opt,name=clear_args,json=clearArgs,proto3" json:"clear_args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSluF000_ResetMark) Reset()         { *m = WlstSluF000_ResetMark{} }
func (m *WlstSluF000_ResetMark) String() string { return proto.CompactTextString(m) }
func (*WlstSluF000_ResetMark) ProtoMessage()    {}
func (*WlstSluF000_ResetMark) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{17, 0}
}

func (m *WlstSluF000_ResetMark) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF000_ResetMark.Unmarshal(m, b)
}
func (m *WlstSluF000_ResetMark) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF000_ResetMark.Marshal(b, m, deterministic)
}
func (m *WlstSluF000_ResetMark) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF000_ResetMark.Merge(m, src)
}
func (m *WlstSluF000_ResetMark) XXX_Size() int {
	return xxx_messageInfo_WlstSluF000_ResetMark.Size(m)
}
func (m *WlstSluF000_ResetMark) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF000_ResetMark.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF000_ResetMark proto.InternalMessageInfo

func (m *WlstSluF000_ResetMark) GetClearTask() int32 {
	if m != nil {
		return m.ClearTask
	}
	return 0
}

func (m *WlstSluF000_ResetMark) GetResetConcentrator() int32 {
	if m != nil {
		return m.ResetConcentrator
	}
	return 0
}

func (m *WlstSluF000_ResetMark) GetHardResetZigbee() int32 {
	if m != nil {
		return m.HardResetZigbee
	}
	return 0
}

func (m *WlstSluF000_ResetMark) GetSoftResetZigbee() int32 {
	if m != nil {
		return m.SoftResetZigbee
	}
	return 0
}

func (m *WlstSluF000_ResetMark) GetResetCarrier() int32 {
	if m != nil {
		return m.ResetCarrier
	}
	return 0
}

func (m *WlstSluF000_ResetMark) GetInitAll() int32 {
	if m != nil {
		return m.InitAll
	}
	return 0
}

func (m *WlstSluF000_ResetMark) GetClearData() int32 {
	if m != nil {
		return m.ClearData
	}
	return 0
}

func (m *WlstSluF000_ResetMark) GetClearArgs() int32 {
	if m != nil {
		return m.ClearArgs
	}
	return 0
}

// Wlst_slu_7100
type WlstSluF100 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 操作标识0-设置时钟，1-读取时钟
	OptMark int32 `protobuf:"varint,2,opt,name=opt_mark,json=optMark,proto3" json:"opt_mark,omitempty"`
	// 时间（c#需加1970-1-1）
	DateTime int64 `protobuf:"varint,3,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	// 强制对时
	ForceTimer int32 `protobuf:"varint,4,opt,name=force_timer,json=forceTimer,proto3" json:"force_timer,omitempty"`
	// 错误标识
	TimerStatus          *WlstSluF100_TimerStatus `protobuf:"bytes,5,opt,name=timer_status,json=timerStatus,proto3" json:"timer_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *WlstSluF100) Reset()         { *m = WlstSluF100{} }
func (m *WlstSluF100) String() string { return proto.CompactTextString(m) }
func (*WlstSluF100) ProtoMessage()    {}
func (*WlstSluF100) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{18}
}

func (m *WlstSluF100) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF100.Unmarshal(m, b)
}
func (m *WlstSluF100) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF100.Marshal(b, m, deterministic)
}
func (m *WlstSluF100) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF100.Merge(m, src)
}
func (m *WlstSluF100) XXX_Size() int {
	return xxx_messageInfo_WlstSluF100.Size(m)
}
func (m *WlstSluF100) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF100.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF100 proto.InternalMessageInfo

func (m *WlstSluF100) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSluF100) GetOptMark() int32 {
	if m != nil {
		return m.OptMark
	}
	return 0
}

func (m *WlstSluF100) GetDateTime() int64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *WlstSluF100) GetForceTimer() int32 {
	if m != nil {
		return m.ForceTimer
	}
	return 0
}

func (m *WlstSluF100) GetTimerStatus() *WlstSluF100_TimerStatus {
	if m != nil {
		return m.TimerStatus
	}
	return nil
}

type WlstSluF100_TimerStatus struct {
	// 时间数据错误
	DtformatError int32 `protobuf:"varint,1,opt,name=dtformat_error,json=dtformatError,proto3" json:"dtformat_error,omitempty"`
	// 时钟超差
	TimerError int32 `protobuf:"varint,2,opt,name=timer_error,json=timerError,proto3" json:"timer_error,omitempty"`
	// 对时失败
	TimeFault            int32    `protobuf:"varint,3,opt,name=time_fault,json=timeFault,proto3" json:"time_fault,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSluF100_TimerStatus) Reset()         { *m = WlstSluF100_TimerStatus{} }
func (m *WlstSluF100_TimerStatus) String() string { return proto.CompactTextString(m) }
func (*WlstSluF100_TimerStatus) ProtoMessage()    {}
func (*WlstSluF100_TimerStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{18, 0}
}

func (m *WlstSluF100_TimerStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF100_TimerStatus.Unmarshal(m, b)
}
func (m *WlstSluF100_TimerStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF100_TimerStatus.Marshal(b, m, deterministic)
}
func (m *WlstSluF100_TimerStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF100_TimerStatus.Merge(m, src)
}
func (m *WlstSluF100_TimerStatus) XXX_Size() int {
	return xxx_messageInfo_WlstSluF100_TimerStatus.Size(m)
}
func (m *WlstSluF100_TimerStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF100_TimerStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF100_TimerStatus proto.InternalMessageInfo

func (m *WlstSluF100_TimerStatus) GetDtformatError() int32 {
	if m != nil {
		return m.DtformatError
	}
	return 0
}

func (m *WlstSluF100_TimerStatus) GetTimerError() int32 {
	if m != nil {
		return m.TimerError
	}
	return 0
}

func (m *WlstSluF100_TimerStatus) GetTimeFault() int32 {
	if m != nil {
		return m.TimeFault
	}
	return 0
}

// Wlst_slu_7200
type WlstSluF200 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 起始控制器地址
	SluitemIdx int32 `protobuf:"varint,2,opt,name=sluitem_idx,json=sluitemIdx,proto3" json:"sluitem_idx,omitempty"`
	// 控制器数量
	SluitemCount int32 `protobuf:"varint,3,opt,name=sluitem_count,json=sluitemCount,proto3" json:"sluitem_count,omitempty"`
	// 数据类型
	DataMark *WlstSluF200_DataMark `protobuf:"bytes,4,opt,name=data_mark,json=dataMark,proto3" json:"data_mark,omitempty"`
	// 控制器数据
	SluitemData []*WlstSluF200_ControllerData `protobuf:"bytes,5,rep,name=sluitem_data,json=sluitemData,proto3" json:"sluitem_data,omitempty"`
	// 操作结果0-失败，1-成功
	Status               int32    `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSluF200) Reset()         { *m = WlstSluF200{} }
func (m *WlstSluF200) String() string { return proto.CompactTextString(m) }
func (*WlstSluF200) ProtoMessage()    {}
func (*WlstSluF200) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{19}
}

func (m *WlstSluF200) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF200.Unmarshal(m, b)
}
func (m *WlstSluF200) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF200.Marshal(b, m, deterministic)
}
func (m *WlstSluF200) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF200.Merge(m, src)
}
func (m *WlstSluF200) XXX_Size() int {
	return xxx_messageInfo_WlstSluF200.Size(m)
}
func (m *WlstSluF200) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF200.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF200 proto.InternalMessageInfo

func (m *WlstSluF200) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSluF200) GetSluitemIdx() int32 {
	if m != nil {
		return m.SluitemIdx
	}
	return 0
}

func (m *WlstSluF200) GetSluitemCount() int32 {
	if m != nil {
		return m.SluitemCount
	}
	return 0
}

func (m *WlstSluF200) GetDataMark() *WlstSluF200_DataMark {
	if m != nil {
		return m.DataMark
	}
	return nil
}

func (m *WlstSluF200) GetSluitemData() []*WlstSluF200_ControllerData {
	if m != nil {
		return m.SluitemData
	}
	return nil
}

func (m *WlstSluF200) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type WlstSluF200_DataMark struct {
	// 指令类型 0-读取数据，1-设置数据
	SetData int32 `protobuf:"varint,20,opt,name=set_data,json=setData,proto3" json:"set_data,omitempty"`
	// 控制器所属组（5个）
	Group int32 `protobuf:"varint,1,opt,name=group,proto3" json:"group,omitempty"`
	// 控制器条码
	Barcode int32 `protobuf:"varint,2,opt,name=barcode,proto3" json:"barcode,omitempty"`
	// 控制器路由（前4级通信控制器编号1,2,3...)
	Route int32 `protobuf:"varint,3,opt,name=route,proto3" json:"route,omitempty"`
	// 开灯序号
	Order int32 `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	// 功率上限/下限
	Limit int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// 上电控制状态
	PowerOnStatus int32 `protobuf:"varint,6,opt,name=power_on_status,json=powerOnStatus,proto3" json:"power_on_status,omitempty"`
	// 2-投运，1-停运
	RunStatus int32 `protobuf:"varint,7,opt,name=run_status,json=runStatus,proto3" json:"run_status,omitempty"`
	// 控制器物理矢量
	Vector int32 `protobuf:"varint,8,opt,name=vector,proto3" json:"vector,omitempty"`
	// 额定功率
	RatedPower int32 `protobuf:"varint,9,opt,name=rated_power,json=ratedPower,proto3" json:"rated_power,omitempty"`
	// 回路数量
	LoopCount            int32    `protobuf:"varint,10,opt,name=loop_count,json=loopCount,proto3" json:"loop_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSluF200_DataMark) Reset()         { *m = WlstSluF200_DataMark{} }
func (m *WlstSluF200_DataMark) String() string { return proto.CompactTextString(m) }
func (*WlstSluF200_DataMark) ProtoMessage()    {}
func (*WlstSluF200_DataMark) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{19, 0}
}

func (m *WlstSluF200_DataMark) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF200_DataMark.Unmarshal(m, b)
}
func (m *WlstSluF200_DataMark) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF200_DataMark.Marshal(b, m, deterministic)
}
func (m *WlstSluF200_DataMark) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF200_DataMark.Merge(m, src)
}
func (m *WlstSluF200_DataMark) XXX_Size() int {
	return xxx_messageInfo_WlstSluF200_DataMark.Size(m)
}
func (m *WlstSluF200_DataMark) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF200_DataMark.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF200_DataMark proto.InternalMessageInfo

func (m *WlstSluF200_DataMark) GetSetData() int32 {
	if m != nil {
		return m.SetData
	}
	return 0
}

func (m *WlstSluF200_DataMark) GetGroup() int32 {
	if m != nil {
		return m.Group
	}
	return 0
}

func (m *WlstSluF200_DataMark) GetBarcode() int32 {
	if m != nil {
		return m.Barcode
	}
	return 0
}

func (m *WlstSluF200_DataMark) GetRoute() int32 {
	if m != nil {
		return m.Route
	}
	return 0
}

func (m *WlstSluF200_DataMark) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *WlstSluF200_DataMark) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *WlstSluF200_DataMark) GetPowerOnStatus() int32 {
	if m != nil {
		return m.PowerOnStatus
	}
	return 0
}

func (m *WlstSluF200_DataMark) GetRunStatus() int32 {
	if m != nil {
		return m.RunStatus
	}
	return 0
}

func (m *WlstSluF200_DataMark) GetVector() int32 {
	if m != nil {
		return m.Vector
	}
	return 0
}

func (m *WlstSluF200_DataMark) GetRatedPower() int32 {
	if m != nil {
		return m.RatedPower
	}
	return 0
}

func (m *WlstSluF200_DataMark) GetLoopCount() int32 {
	if m != nil {
		return m.LoopCount
	}
	return 0
}

type WlstSluF200_ControllerData struct {
	// 控制器所属组（5个）
	SluitemGroup []int32 `protobuf:"varint,1,rep,packed,name=sluitem_group,json=sluitemGroup,proto3" json:"sluitem_group,omitempty"`
	// 控制器条码
	SluitemIdx int64 `protobuf:"varint,2,opt,name=sluitem_idx,json=sluitemIdx,proto3" json:"sluitem_idx,omitempty"`
	// 控制器路由（前4级通信控制器编号1,2,3...)
	SluitemRoute []int32 `protobuf:"varint,3,rep,packed,name=sluitem_route,json=sluitemRoute,proto3" json:"sluitem_route,omitempty"`
	// 开灯序号
	SluitemOrder int32 `protobuf:"varint,4,opt,name=sluitem_order,json=sluitemOrder,proto3" json:"sluitem_order,omitempty"`
	// 功率上限
	UpperPowerLimit int32 `protobuf:"varint,5,opt,name=upper_power_limit,json=upperPowerLimit,proto3" json:"upper_power_limit,omitempty"`
	// 功率下限
	LowerPowerLimit int32 `protobuf:"varint,6,opt,name=lower_power_limit,json=lowerPowerLimit,proto3" json:"lower_power_limit,omitempty"`
	// 控制器上电开灯 true-开灯，false-关灯
	SluitemPowerTurnon []int32 `protobuf:"varint,7,rep,packed,name=sluitem_power_turnon,json=sluitemPowerTurnon,proto3" json:"sluitem_power_turnon,omitempty"`
	// 控制器状态 false-停运，true-投运
	SluitemStatus int32 `protobuf:"varint,8,opt,name=sluitem_status,json=sluitemStatus,proto3" json:"sluitem_status,omitempty"`
	// 控制器主报 false-禁止主报，true-允许主报
	SluitemEnableAlarm int32 `protobuf:"varint,9,opt,name=sluitem_enable_alarm,json=sluitemEnableAlarm,proto3" json:"sluitem_enable_alarm,omitempty"`
	// 控制器物理矢量
	SluitemVector []int32 `protobuf:"varint,10,rep,packed,name=sluitem_vector,json=sluitemVector,proto3" json:"sluitem_vector,omitempty"`
	// 额定功率
	RatedPower []int32 `protobuf:"varint,11,rep,packed,name=rated_power,json=ratedPower,proto3" json:"rated_power,omitempty"`
	// 回路数量
	LoopCount int32 `protobuf:"varint,12,opt,name=loop_count,json=loopCount,proto3" json:"loop_count,omitempty"`
	// 经度
	Longitude float64 `protobuf:"fixed64,13,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// 纬度
	Latitude float64 `protobuf:"fixed64,14,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// nb主报间隔，(0～127)*5
	UplinkTimer int32 `protobuf:"varint,15,opt,name=uplink_timer,json=uplinkTimer,proto3" json:"uplink_timer,omitempty"`
	// nb主报需要主站应答，0-不需要，1-需要
	UplinkReply          int32    `protobuf:"varint,16,opt,name=uplink_reply,json=uplinkReply,proto3" json:"uplink_reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSluF200_ControllerData) Reset()         { *m = WlstSluF200_ControllerData{} }
func (m *WlstSluF200_ControllerData) String() string { return proto.CompactTextString(m) }
func (*WlstSluF200_ControllerData) ProtoMessage()    {}
func (*WlstSluF200_ControllerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{19, 1}
}

func (m *WlstSluF200_ControllerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF200_ControllerData.Unmarshal(m, b)
}
func (m *WlstSluF200_ControllerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF200_ControllerData.Marshal(b, m, deterministic)
}
func (m *WlstSluF200_ControllerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF200_ControllerData.Merge(m, src)
}
func (m *WlstSluF200_ControllerData) XXX_Size() int {
	return xxx_messageInfo_WlstSluF200_ControllerData.Size(m)
}
func (m *WlstSluF200_ControllerData) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF200_ControllerData.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF200_ControllerData proto.InternalMessageInfo

func (m *WlstSluF200_ControllerData) GetSluitemGroup() []int32 {
	if m != nil {
		return m.SluitemGroup
	}
	return nil
}

func (m *WlstSluF200_ControllerData) GetSluitemIdx() int64 {
	if m != nil {
		return m.SluitemIdx
	}
	return 0
}

func (m *WlstSluF200_ControllerData) GetSluitemRoute() []int32 {
	if m != nil {
		return m.SluitemRoute
	}
	return nil
}

func (m *WlstSluF200_ControllerData) GetSluitemOrder() int32 {
	if m != nil {
		return m.SluitemOrder
	}
	return 0
}

func (m *WlstSluF200_ControllerData) GetUpperPowerLimit() int32 {
	if m != nil {
		return m.UpperPowerLimit
	}
	return 0
}

func (m *WlstSluF200_ControllerData) GetLowerPowerLimit() int32 {
	if m != nil {
		return m.LowerPowerLimit
	}
	return 0
}

func (m *WlstSluF200_ControllerData) GetSluitemPowerTurnon() []int32 {
	if m != nil {
		return m.SluitemPowerTurnon
	}
	return nil
}

func (m *WlstSluF200_ControllerData) GetSluitemStatus() int32 {
	if m != nil {
		return m.SluitemStatus
	}
	return 0
}

func (m *WlstSluF200_ControllerData) GetSluitemEnableAlarm() int32 {
	if m != nil {
		return m.SluitemEnableAlarm
	}
	return 0
}

func (m *WlstSluF200_ControllerData) GetSluitemVector() []int32 {
	if m != nil {
		return m.SluitemVector
	}
	return nil
}

func (m *WlstSluF200_ControllerData) GetRatedPower() []int32 {
	if m != nil {
		return m.RatedPower
	}
	return nil
}

func (m *WlstSluF200_ControllerData) GetLoopCount() int32 {
	if m != nil {
		return m.LoopCount
	}
	return 0
}

func (m *WlstSluF200_ControllerData) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *WlstSluF200_ControllerData) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *WlstSluF200_ControllerData) GetUplinkTimer() int32 {
	if m != nil {
		return m.UplinkTimer
	}
	return 0
}

func (m *WlstSluF200_ControllerData) GetUplinkReply() int32 {
	if m != nil {
		return m.UplinkReply
	}
	return 0
}

// Wlst_slu_f300
type WlstSlu_7300 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 起始控制器地址(带标识)
	SluitemStart int32 `protobuf:"varint,2,opt,name=sluitem_start,json=sluitemStart,proto3" json:"sluitem_start,omitempty"`
	// 控制器数量
	SluitemCount int32 `protobuf:"varint,3,opt,name=sluitem_count,json=sluitemCount,proto3" json:"sluitem_count,omitempty"`
	// 选测数据类型 0-选测集中器，1-选测控制器基本数据（不用），2-选测未知控制器，3-选测控制器辅助参数（不用），4-选测控制器物理信息，5-选测控制器带时标数据，6-选测控制器带时标辅助数据, 7-控制器双字节电压电流数据，带电量
	DataMark int32 `protobuf:"varint,4,opt,name=data_mark,json=dataMark,proto3" json:"data_mark,omitempty"`
	// 选测集中器
	ConcentratorData *WlstSlu_7300_ConcentratorData `protobuf:"bytes,5,opt,name=concentrator_data,json=concentratorData,proto3" json:"concentrator_data,omitempty"`
	// 选测控制器基本参数
	BaseSluitemData []*WlstSlu_7300_BaseSluitemData `protobuf:"bytes,6,rep,name=base_sluitem_data,json=baseSluitemData,proto3" json:"base_sluitem_data,omitempty"`
	// 选测未知控制器
	UnknowSluitem []*WlstSlu_7300_UnknowSluitem `protobuf:"bytes,7,rep,name=unknow_sluitem,json=unknowSluitem,proto3" json:"unknow_sluitem,omitempty"`
	// 选测控制器辅助参数
	AssistSluitemData []*WlstSlu_7300_AssistSluitemData `protobuf:"bytes,8,rep,name=assist_sluitem_data,json=assistSluitemData,proto3" json:"assist_sluitem_data,omitempty"`
	// 选测控制器物理信息
	SluitemPhyinfo []*WlstSlu_7300_SluitemPhyinfo `protobuf:"bytes,9,rep,name=sluitem_phyinfo,json=sluitemPhyinfo,proto3" json:"sluitem_phyinfo,omitempty"`
	// 控制器序号(地址)
	SluitemAddrs         []int32  `protobuf:"varint,10,rep,packed,name=sluitem_addrs,json=sluitemAddrs,proto3" json:"sluitem_addrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7300) Reset()         { *m = WlstSlu_7300{} }
func (m *WlstSlu_7300) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7300) ProtoMessage()    {}
func (*WlstSlu_7300) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{20}
}

func (m *WlstSlu_7300) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7300.Unmarshal(m, b)
}
func (m *WlstSlu_7300) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7300.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7300) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7300.Merge(m, src)
}
func (m *WlstSlu_7300) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7300.Size(m)
}
func (m *WlstSlu_7300) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7300.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7300 proto.InternalMessageInfo

func (m *WlstSlu_7300) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSlu_7300) GetSluitemStart() int32 {
	if m != nil {
		return m.SluitemStart
	}
	return 0
}

func (m *WlstSlu_7300) GetSluitemCount() int32 {
	if m != nil {
		return m.SluitemCount
	}
	return 0
}

func (m *WlstSlu_7300) GetDataMark() int32 {
	if m != nil {
		return m.DataMark
	}
	return 0
}

func (m *WlstSlu_7300) GetConcentratorData() *WlstSlu_7300_ConcentratorData {
	if m != nil {
		return m.ConcentratorData
	}
	return nil
}

func (m *WlstSlu_7300) GetBaseSluitemData() []*WlstSlu_7300_BaseSluitemData {
	if m != nil {
		return m.BaseSluitemData
	}
	return nil
}

func (m *WlstSlu_7300) GetUnknowSluitem() []*WlstSlu_7300_UnknowSluitem {
	if m != nil {
		return m.UnknowSluitem
	}
	return nil
}

func (m *WlstSlu_7300) GetAssistSluitemData() []*WlstSlu_7300_AssistSluitemData {
	if m != nil {
		return m.AssistSluitemData
	}
	return nil
}

func (m *WlstSlu_7300) GetSluitemPhyinfo() []*WlstSlu_7300_SluitemPhyinfo {
	if m != nil {
		return m.SluitemPhyinfo
	}
	return nil
}

func (m *WlstSlu_7300) GetSluitemAddrs() []int32 {
	if m != nil {
		return m.SluitemAddrs
	}
	return nil
}

type WlstSlu_7300_ConcentratorData struct {
	// 复位次数
	ResetCount []int32 `protobuf:"varint,1,rep,packed,name=reset_count,json=resetCount,proto3" json:"reset_count,omitempty"`
	// 集中器状态
	RunStatus *WlstSlu_7300_ConcentratorData_RunStatus `protobuf:"bytes,2,opt,name=run_status,json=runStatus,proto3" json:"run_status,omitempty"`
	// 参数状态
	ArgsStatus *WlstSlu_7300_ConcentratorData_ArgsStatus `protobuf:"bytes,3,opt,name=args_status,json=argsStatus,proto3" json:"args_status,omitempty"`
	// 硬件状态
	HardwareStatus *WlstSlu_7300_ConcentratorData_HardwareStatus `protobuf:"bytes,4,opt,name=hardware_status,json=hardwareStatus,proto3" json:"hardware_status,omitempty"`
	// 未知控制器
	UnknowSluitemCount int32 `protobuf:"varint,5,opt,name=unknow_sluitem_count,json=unknowSluitemCount,proto3" json:"unknow_sluitem_count,omitempty"`
	// 通信信道 -10为当前值
	CommunicationChannel int32    `protobuf:"varint,6,opt,name=communication_channel,json=communicationChannel,proto3" json:"communication_channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7300_ConcentratorData) Reset()         { *m = WlstSlu_7300_ConcentratorData{} }
func (m *WlstSlu_7300_ConcentratorData) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7300_ConcentratorData) ProtoMessage()    {}
func (*WlstSlu_7300_ConcentratorData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{20, 0}
}

func (m *WlstSlu_7300_ConcentratorData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7300_ConcentratorData.Unmarshal(m, b)
}
func (m *WlstSlu_7300_ConcentratorData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7300_ConcentratorData.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7300_ConcentratorData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7300_ConcentratorData.Merge(m, src)
}
func (m *WlstSlu_7300_ConcentratorData) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7300_ConcentratorData.Size(m)
}
func (m *WlstSlu_7300_ConcentratorData) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7300_ConcentratorData.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7300_ConcentratorData proto.InternalMessageInfo

func (m *WlstSlu_7300_ConcentratorData) GetResetCount() []int32 {
	if m != nil {
		return m.ResetCount
	}
	return nil
}

func (m *WlstSlu_7300_ConcentratorData) GetRunStatus() *WlstSlu_7300_ConcentratorData_RunStatus {
	if m != nil {
		return m.RunStatus
	}
	return nil
}

func (m *WlstSlu_7300_ConcentratorData) GetArgsStatus() *WlstSlu_7300_ConcentratorData_ArgsStatus {
	if m != nil {
		return m.ArgsStatus
	}
	return nil
}

func (m *WlstSlu_7300_ConcentratorData) GetHardwareStatus() *WlstSlu_7300_ConcentratorData_HardwareStatus {
	if m != nil {
		return m.HardwareStatus
	}
	return nil
}

func (m *WlstSlu_7300_ConcentratorData) GetUnknowSluitemCount() int32 {
	if m != nil {
		return m.UnknowSluitemCount
	}
	return 0
}

func (m *WlstSlu_7300_ConcentratorData) GetCommunicationChannel() int32 {
	if m != nil {
		return m.CommunicationChannel
	}
	return 0
}

type WlstSlu_7300_ConcentratorData_RunStatus struct {
	// 停运 0-正常，1-停运
	Offline int32 `protobuf:"varint,1,opt,name=offline,proto3" json:"offline,omitempty"`
	// 允许主报 0-禁止主报，1-允许主报
	EnableAlarm int32 `protobuf:"varint,2,opt,name=enable_alarm,json=enableAlarm,proto3" json:"enable_alarm,omitempty"`
	// 开机申请 0-非开机，1-开机
	PoweronMark int32 `protobuf:"varint,3,opt,name=poweron_mark,json=poweronMark,proto3" json:"poweron_mark,omitempty"`
	// gprs通讯 0-485,1-gprs
	EnableGprs int32 `protobuf:"varint,4,opt,name=enable_gprs,json=enableGprs,proto3" json:"enable_gprs,omitempty"`
	// 允许巡测 0-不允许,1-允许
	EnableAutochk        int32    `protobuf:"varint,5,opt,name=enable_autochk,json=enableAutochk,proto3" json:"enable_autochk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7300_ConcentratorData_RunStatus) Reset() {
	*m = WlstSlu_7300_ConcentratorData_RunStatus{}
}
func (m *WlstSlu_7300_ConcentratorData_RunStatus) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7300_ConcentratorData_RunStatus) ProtoMessage()    {}
func (*WlstSlu_7300_ConcentratorData_RunStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{20, 0, 0}
}

func (m *WlstSlu_7300_ConcentratorData_RunStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7300_ConcentratorData_RunStatus.Unmarshal(m, b)
}
func (m *WlstSlu_7300_ConcentratorData_RunStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7300_ConcentratorData_RunStatus.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7300_ConcentratorData_RunStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7300_ConcentratorData_RunStatus.Merge(m, src)
}
func (m *WlstSlu_7300_ConcentratorData_RunStatus) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7300_ConcentratorData_RunStatus.Size(m)
}
func (m *WlstSlu_7300_ConcentratorData_RunStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7300_ConcentratorData_RunStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7300_ConcentratorData_RunStatus proto.InternalMessageInfo

func (m *WlstSlu_7300_ConcentratorData_RunStatus) GetOffline() int32 {
	if m != nil {
		return m.Offline
	}
	return 0
}

func (m *WlstSlu_7300_ConcentratorData_RunStatus) GetEnableAlarm() int32 {
	if m != nil {
		return m.EnableAlarm
	}
	return 0
}

func (m *WlstSlu_7300_ConcentratorData_RunStatus) GetPoweronMark() int32 {
	if m != nil {
		return m.PoweronMark
	}
	return 0
}

func (m *WlstSlu_7300_ConcentratorData_RunStatus) GetEnableGprs() int32 {
	if m != nil {
		return m.EnableGprs
	}
	return 0
}

func (m *WlstSlu_7300_ConcentratorData_RunStatus) GetEnableAutochk() int32 {
	if m != nil {
		return m.EnableAutochk
	}
	return 0
}

type WlstSlu_7300_ConcentratorData_ArgsStatus struct {
	// 集中器参数错误
	ConcentratorArgsError int32 `protobuf:"varint,1,opt,name=concentrator_args_error,json=concentratorArgsError,proto3" json:"concentrator_args_error,omitempty"`
	// 控制器参数错误
	SluitemArgsError int32 `protobuf:"varint,2,opt,name=sluitem_args_error,json=sluitemArgsError,proto3" json:"sluitem_args_error,omitempty"`
	// 开关灯控制参数错误
	TurnOnoffError       int32    `protobuf:"varint,3,opt,name=turn_onoff_error,json=turnOnoffError,proto3" json:"turn_onoff_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7300_ConcentratorData_ArgsStatus) Reset() {
	*m = WlstSlu_7300_ConcentratorData_ArgsStatus{}
}
func (m *WlstSlu_7300_ConcentratorData_ArgsStatus) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7300_ConcentratorData_ArgsStatus) ProtoMessage()    {}
func (*WlstSlu_7300_ConcentratorData_ArgsStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{20, 0, 1}
}

func (m *WlstSlu_7300_ConcentratorData_ArgsStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7300_ConcentratorData_ArgsStatus.Unmarshal(m, b)
}
func (m *WlstSlu_7300_ConcentratorData_ArgsStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7300_ConcentratorData_ArgsStatus.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7300_ConcentratorData_ArgsStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7300_ConcentratorData_ArgsStatus.Merge(m, src)
}
func (m *WlstSlu_7300_ConcentratorData_ArgsStatus) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7300_ConcentratorData_ArgsStatus.Size(m)
}
func (m *WlstSlu_7300_ConcentratorData_ArgsStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7300_ConcentratorData_ArgsStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7300_ConcentratorData_ArgsStatus proto.InternalMessageInfo

func (m *WlstSlu_7300_ConcentratorData_ArgsStatus) GetConcentratorArgsError() int32 {
	if m != nil {
		return m.ConcentratorArgsError
	}
	return 0
}

func (m *WlstSlu_7300_ConcentratorData_ArgsStatus) GetSluitemArgsError() int32 {
	if m != nil {
		return m.SluitemArgsError
	}
	return 0
}

func (m *WlstSlu_7300_ConcentratorData_ArgsStatus) GetTurnOnoffError() int32 {
	if m != nil {
		return m.TurnOnoffError
	}
	return 0
}

type WlstSlu_7300_ConcentratorData_HardwareStatus struct {
	// zigbee模块出错
	ZigbeeError int32 `protobuf:"varint,1,opt,name=zigbee_error,json=zigbeeError,proto3" json:"zigbee_error,omitempty"`
	// 电力载波模块出错
	CarrierError int32 `protobuf:"varint,2,opt,name=carrier_error,json=carrierError,proto3" json:"carrier_error,omitempty"`
	// fram出错
	FramError int32 `protobuf:"varint,3,opt,name=fram_error,json=framError,proto3" json:"fram_error,omitempty"`
	// 蓝牙模块出错
	BluetoothError int32 `protobuf:"varint,4,opt,name=bluetooth_error,json=bluetoothError,proto3" json:"bluetooth_error,omitempty"`
	// 硬件时钟出错
	TimerError           int32    `protobuf:"varint,5,opt,name=timer_error,json=timerError,proto3" json:"timer_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7300_ConcentratorData_HardwareStatus) Reset() {
	*m = WlstSlu_7300_ConcentratorData_HardwareStatus{}
}
func (m *WlstSlu_7300_ConcentratorData_HardwareStatus) String() string {
	return proto.CompactTextString(m)
}
func (*WlstSlu_7300_ConcentratorData_HardwareStatus) ProtoMessage() {}
func (*WlstSlu_7300_ConcentratorData_HardwareStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{20, 0, 2}
}

func (m *WlstSlu_7300_ConcentratorData_HardwareStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7300_ConcentratorData_HardwareStatus.Unmarshal(m, b)
}
func (m *WlstSlu_7300_ConcentratorData_HardwareStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7300_ConcentratorData_HardwareStatus.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7300_ConcentratorData_HardwareStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7300_ConcentratorData_HardwareStatus.Merge(m, src)
}
func (m *WlstSlu_7300_ConcentratorData_HardwareStatus) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7300_ConcentratorData_HardwareStatus.Size(m)
}
func (m *WlstSlu_7300_ConcentratorData_HardwareStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7300_ConcentratorData_HardwareStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7300_ConcentratorData_HardwareStatus proto.InternalMessageInfo

func (m *WlstSlu_7300_ConcentratorData_HardwareStatus) GetZigbeeError() int32 {
	if m != nil {
		return m.ZigbeeError
	}
	return 0
}

func (m *WlstSlu_7300_ConcentratorData_HardwareStatus) GetCarrierError() int32 {
	if m != nil {
		return m.CarrierError
	}
	return 0
}

func (m *WlstSlu_7300_ConcentratorData_HardwareStatus) GetFramError() int32 {
	if m != nil {
		return m.FramError
	}
	return 0
}

func (m *WlstSlu_7300_ConcentratorData_HardwareStatus) GetBluetoothError() int32 {
	if m != nil {
		return m.BluetoothError
	}
	return 0
}

func (m *WlstSlu_7300_ConcentratorData_HardwareStatus) GetTimerError() int32 {
	if m != nil {
		return m.TimerError
	}
	return 0
}

type WlstSlu_7300_BaseSluitemData struct {
	// 控制器数据
	// 日 时:分 c#需加1970-1-1
	DateTime int64 `protobuf:"varint,1,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	// 控制器状态
	SluitemStatus *WlstSlu_7300_BaseSluitemData_SluitemStatus `protobuf:"bytes,2,opt,name=sluitem_status,json=sluitemStatus,proto3" json:"sluitem_status,omitempty"`
	// 温度
	Temperature int32 `protobuf:"varint,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	// 灯状态
	LightStatus []*WlstSlu_7300_BaseSluitemData_LightStatus `protobuf:"bytes,4,rep,name=light_status,json=lightStatus,proto3" json:"light_status,omitempty"`
	// 灯数据
	LightData []*WlstSlu_7300_BaseSluitemData_LightData `protobuf:"bytes,5,rep,name=light_data,json=lightData,proto3" json:"light_data,omitempty"`
	// 字节数 =控制器数量 / 4 每2位一个控制器 0-3（1路，2路，3路，4路）
	SluitemLoop          int32    `protobuf:"varint,6,opt,name=sluitem_loop,json=sluitemLoop,proto3" json:"sluitem_loop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7300_BaseSluitemData) Reset()         { *m = WlstSlu_7300_BaseSluitemData{} }
func (m *WlstSlu_7300_BaseSluitemData) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7300_BaseSluitemData) ProtoMessage()    {}
func (*WlstSlu_7300_BaseSluitemData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{20, 1}
}

func (m *WlstSlu_7300_BaseSluitemData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7300_BaseSluitemData.Unmarshal(m, b)
}
func (m *WlstSlu_7300_BaseSluitemData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7300_BaseSluitemData.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7300_BaseSluitemData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7300_BaseSluitemData.Merge(m, src)
}
func (m *WlstSlu_7300_BaseSluitemData) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7300_BaseSluitemData.Size(m)
}
func (m *WlstSlu_7300_BaseSluitemData) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7300_BaseSluitemData.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7300_BaseSluitemData proto.InternalMessageInfo

func (m *WlstSlu_7300_BaseSluitemData) GetDateTime() int64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData) GetSluitemStatus() *WlstSlu_7300_BaseSluitemData_SluitemStatus {
	if m != nil {
		return m.SluitemStatus
	}
	return nil
}

func (m *WlstSlu_7300_BaseSluitemData) GetTemperature() int32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData) GetLightStatus() []*WlstSlu_7300_BaseSluitemData_LightStatus {
	if m != nil {
		return m.LightStatus
	}
	return nil
}

func (m *WlstSlu_7300_BaseSluitemData) GetLightData() []*WlstSlu_7300_BaseSluitemData_LightData {
	if m != nil {
		return m.LightData
	}
	return nil
}

func (m *WlstSlu_7300_BaseSluitemData) GetSluitemLoop() int32 {
	if m != nil {
		return m.SluitemLoop
	}
	return 0
}

type WlstSlu_7300_BaseSluitemData_SluitemStatus struct {
	// 状态 0-正常，1-电压越上限，2-电压越下限，3-通讯故障
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// 已校准 0-未校准，1-已校准
	Adjust int32 `protobuf:"varint,2,opt,name=adjust,proto3" json:"adjust,omitempty"`
	// 工作参数设置 0-未设置，1-已设置
	WorkingArgs int32 `protobuf:"varint,3,opt,name=working_args,json=workingArgs,proto3" json:"working_args,omitempty"`
	// 禁止主动报警 0-允许，1-禁止
	NoAlarm int32 `protobuf:"varint,4,opt,name=no_alarm,json=noAlarm,proto3" json:"no_alarm,omitempty"`
	// 停运 0-正常，1-停运
	OffLine int32 `protobuf:"varint,5,opt,name=off_line,json=offLine,proto3" json:"off_line,omitempty"`
	// EEPROM故障 0-正常，1-故障
	EepromError int32 `protobuf:"varint,6,opt,name=eeprom_error,json=eepromError,proto3" json:"eeprom_error,omitempty"`
	// 温度传感器故障 0-正常，1-故障
	TemperatureSensor    int32    `protobuf:"varint,7,opt,name=temperature_sensor,json=temperatureSensor,proto3" json:"temperature_sensor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7300_BaseSluitemData_SluitemStatus) Reset() {
	*m = WlstSlu_7300_BaseSluitemData_SluitemStatus{}
}
func (m *WlstSlu_7300_BaseSluitemData_SluitemStatus) String() string {
	return proto.CompactTextString(m)
}
func (*WlstSlu_7300_BaseSluitemData_SluitemStatus) ProtoMessage() {}
func (*WlstSlu_7300_BaseSluitemData_SluitemStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{20, 1, 0}
}

func (m *WlstSlu_7300_BaseSluitemData_SluitemStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7300_BaseSluitemData_SluitemStatus.Unmarshal(m, b)
}
func (m *WlstSlu_7300_BaseSluitemData_SluitemStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7300_BaseSluitemData_SluitemStatus.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7300_BaseSluitemData_SluitemStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7300_BaseSluitemData_SluitemStatus.Merge(m, src)
}
func (m *WlstSlu_7300_BaseSluitemData_SluitemStatus) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7300_BaseSluitemData_SluitemStatus.Size(m)
}
func (m *WlstSlu_7300_BaseSluitemData_SluitemStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7300_BaseSluitemData_SluitemStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7300_BaseSluitemData_SluitemStatus proto.InternalMessageInfo

func (m *WlstSlu_7300_BaseSluitemData_SluitemStatus) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData_SluitemStatus) GetAdjust() int32 {
	if m != nil {
		return m.Adjust
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData_SluitemStatus) GetWorkingArgs() int32 {
	if m != nil {
		return m.WorkingArgs
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData_SluitemStatus) GetNoAlarm() int32 {
	if m != nil {
		return m.NoAlarm
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData_SluitemStatus) GetOffLine() int32 {
	if m != nil {
		return m.OffLine
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData_SluitemStatus) GetEepromError() int32 {
	if m != nil {
		return m.EepromError
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData_SluitemStatus) GetTemperatureSensor() int32 {
	if m != nil {
		return m.TemperatureSensor
	}
	return 0
}

type WlstSlu_7300_BaseSluitemData_LightStatus struct {
	// 功率状态 0-正常，1-功率越上限，2-功率越下限
	PowerStatus int32 `protobuf:"varint,1,opt,name=power_status,json=powerStatus,proto3" json:"power_status,omitempty"`
	// 灯具漏电 0-正常，1-漏电
	Leakage int32 `protobuf:"varint,2,opt,name=leakage,proto3" json:"leakage,omitempty"`
	// 故障 0-正常，1-光源故障，2-补偿电容故障，3-意外灭灯，4-意外亮灯，5-自熄灯，6-控制器断电告警（苏州）,7-继电器故障
	Fault int32 `protobuf:"varint,3,opt,name=fault,proto3" json:"fault,omitempty"`
	// 工作状态 0-正常亮灯，1-一档节能，2-二档节能，3-关灯
	WorkingOn            int32    `protobuf:"varint,4,opt,name=working_on,json=workingOn,proto3" json:"working_on,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7300_BaseSluitemData_LightStatus) Reset() {
	*m = WlstSlu_7300_BaseSluitemData_LightStatus{}
}
func (m *WlstSlu_7300_BaseSluitemData_LightStatus) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7300_BaseSluitemData_LightStatus) ProtoMessage()    {}
func (*WlstSlu_7300_BaseSluitemData_LightStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{20, 1, 1}
}

func (m *WlstSlu_7300_BaseSluitemData_LightStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7300_BaseSluitemData_LightStatus.Unmarshal(m, b)
}
func (m *WlstSlu_7300_BaseSluitemData_LightStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7300_BaseSluitemData_LightStatus.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7300_BaseSluitemData_LightStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7300_BaseSluitemData_LightStatus.Merge(m, src)
}
func (m *WlstSlu_7300_BaseSluitemData_LightStatus) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7300_BaseSluitemData_LightStatus.Size(m)
}
func (m *WlstSlu_7300_BaseSluitemData_LightStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7300_BaseSluitemData_LightStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7300_BaseSluitemData_LightStatus proto.InternalMessageInfo

func (m *WlstSlu_7300_BaseSluitemData_LightStatus) GetPowerStatus() int32 {
	if m != nil {
		return m.PowerStatus
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData_LightStatus) GetLeakage() int32 {
	if m != nil {
		return m.Leakage
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData_LightStatus) GetFault() int32 {
	if m != nil {
		return m.Fault
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData_LightStatus) GetWorkingOn() int32 {
	if m != nil {
		return m.WorkingOn
	}
	return 0
}

type WlstSlu_7300_BaseSluitemData_LightData struct {
	// 电压
	Voltage float64 `protobuf:"fixed64,1,opt,name=voltage,proto3" json:"voltage,omitempty"`
	// 电流
	Current float64 `protobuf:"fixed64,2,opt,name=current,proto3" json:"current,omitempty"`
	// 有功功率
	ActivePower float64 `protobuf:"fixed64,3,opt,name=active_power,json=activePower,proto3" json:"active_power,omitempty"`
	// 电量
	Electricity float64 `protobuf:"fixed64,4,opt,name=electricity,proto3" json:"electricity,omitempty"`
	// 运行时间
	ActiveTime float64 `protobuf:"fixed64,5,opt,name=active_time,json=activeTime,proto3" json:"active_time,omitempty"`
	// 节能档位
	PowerLevel           int32    `protobuf:"varint,6,opt,name=power_level,json=powerLevel,proto3" json:"power_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7300_BaseSluitemData_LightData) Reset() {
	*m = WlstSlu_7300_BaseSluitemData_LightData{}
}
func (m *WlstSlu_7300_BaseSluitemData_LightData) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7300_BaseSluitemData_LightData) ProtoMessage()    {}
func (*WlstSlu_7300_BaseSluitemData_LightData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{20, 1, 2}
}

func (m *WlstSlu_7300_BaseSluitemData_LightData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7300_BaseSluitemData_LightData.Unmarshal(m, b)
}
func (m *WlstSlu_7300_BaseSluitemData_LightData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7300_BaseSluitemData_LightData.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7300_BaseSluitemData_LightData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7300_BaseSluitemData_LightData.Merge(m, src)
}
func (m *WlstSlu_7300_BaseSluitemData_LightData) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7300_BaseSluitemData_LightData.Size(m)
}
func (m *WlstSlu_7300_BaseSluitemData_LightData) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7300_BaseSluitemData_LightData.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7300_BaseSluitemData_LightData proto.InternalMessageInfo

func (m *WlstSlu_7300_BaseSluitemData_LightData) GetVoltage() float64 {
	if m != nil {
		return m.Voltage
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData_LightData) GetCurrent() float64 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData_LightData) GetActivePower() float64 {
	if m != nil {
		return m.ActivePower
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData_LightData) GetElectricity() float64 {
	if m != nil {
		return m.Electricity
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData_LightData) GetActiveTime() float64 {
	if m != nil {
		return m.ActiveTime
	}
	return 0
}

func (m *WlstSlu_7300_BaseSluitemData_LightData) GetPowerLevel() int32 {
	if m != nil {
		return m.PowerLevel
	}
	return 0
}

type WlstSlu_7300_UnknowSluitem struct {
	// 条码
	SluitemIdx int64 `protobuf:"varint,1,opt,name=sluitem_idx,json=sluitemIdx,proto3" json:"sluitem_idx,omitempty"`
	// 型号信息
	ModelInfo            *WlstSlu_7300_ModelInfo `protobuf:"bytes,2,opt,name=model_info,json=modelInfo,proto3" json:"model_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *WlstSlu_7300_UnknowSluitem) Reset()         { *m = WlstSlu_7300_UnknowSluitem{} }
func (m *WlstSlu_7300_UnknowSluitem) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7300_UnknowSluitem) ProtoMessage()    {}
func (*WlstSlu_7300_UnknowSluitem) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{20, 2}
}

func (m *WlstSlu_7300_UnknowSluitem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7300_UnknowSluitem.Unmarshal(m, b)
}
func (m *WlstSlu_7300_UnknowSluitem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7300_UnknowSluitem.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7300_UnknowSluitem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7300_UnknowSluitem.Merge(m, src)
}
func (m *WlstSlu_7300_UnknowSluitem) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7300_UnknowSluitem.Size(m)
}
func (m *WlstSlu_7300_UnknowSluitem) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7300_UnknowSluitem.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7300_UnknowSluitem proto.InternalMessageInfo

func (m *WlstSlu_7300_UnknowSluitem) GetSluitemIdx() int64 {
	if m != nil {
		return m.SluitemIdx
	}
	return 0
}

func (m *WlstSlu_7300_UnknowSluitem) GetModelInfo() *WlstSlu_7300_ModelInfo {
	if m != nil {
		return m.ModelInfo
	}
	return nil
}

type WlstSlu_7300_AssistSluitemData struct {
	// 日 时:分 c#需加1970-1-1
	DateTime int64 `protobuf:"varint,1,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	// 漏电流 / 100 0xff为满量程，此时=2.55A
	LeakageCurrent float64 `protobuf:"fixed64,2,opt,name=leakage_current,json=leakageCurrent,proto3" json:"leakage_current,omitempty"`
	// 灯数据
	LightData []*WlstSlu_7300_AssistSluitemData_LightData `protobuf:"bytes,3,rep,name=light_data,json=lightData,proto3" json:"light_data,omitempty"`
	// 字节数 =控制器数量 / 4 每2位一个控制器 0-3（1路，2路，3路，4路）
	SluitemLoop          int32    `protobuf:"varint,4,opt,name=sluitem_loop,json=sluitemLoop,proto3" json:"sluitem_loop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7300_AssistSluitemData) Reset()         { *m = WlstSlu_7300_AssistSluitemData{} }
func (m *WlstSlu_7300_AssistSluitemData) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7300_AssistSluitemData) ProtoMessage()    {}
func (*WlstSlu_7300_AssistSluitemData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{20, 3}
}

func (m *WlstSlu_7300_AssistSluitemData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7300_AssistSluitemData.Unmarshal(m, b)
}
func (m *WlstSlu_7300_AssistSluitemData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7300_AssistSluitemData.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7300_AssistSluitemData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7300_AssistSluitemData.Merge(m, src)
}
func (m *WlstSlu_7300_AssistSluitemData) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7300_AssistSluitemData.Size(m)
}
func (m *WlstSlu_7300_AssistSluitemData) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7300_AssistSluitemData.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7300_AssistSluitemData proto.InternalMessageInfo

func (m *WlstSlu_7300_AssistSluitemData) GetDateTime() int64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *WlstSlu_7300_AssistSluitemData) GetLeakageCurrent() float64 {
	if m != nil {
		return m.LeakageCurrent
	}
	return 0
}

func (m *WlstSlu_7300_AssistSluitemData) GetLightData() []*WlstSlu_7300_AssistSluitemData_LightData {
	if m != nil {
		return m.LightData
	}
	return nil
}

func (m *WlstSlu_7300_AssistSluitemData) GetSluitemLoop() int32 {
	if m != nil {
		return m.SluitemLoop
	}
	return 0
}

type WlstSlu_7300_AssistSluitemData_LightData struct {
	// 最大电压
	MaxVoltage float64 `protobuf:"fixed64,1,opt,name=max_voltage,json=maxVoltage,proto3" json:"max_voltage,omitempty"`
	// 最大电流
	MaxCurrent float64 `protobuf:"fixed64,2,opt,name=max_current,json=maxCurrent,proto3" json:"max_current,omitempty"`
	// 电量 满量程250kw/h，超出清零
	Electricity          float64  `protobuf:"fixed64,3,opt,name=electricity,proto3" json:"electricity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7300_AssistSluitemData_LightData) Reset() {
	*m = WlstSlu_7300_AssistSluitemData_LightData{}
}
func (m *WlstSlu_7300_AssistSluitemData_LightData) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7300_AssistSluitemData_LightData) ProtoMessage()    {}
func (*WlstSlu_7300_AssistSluitemData_LightData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{20, 3, 0}
}

func (m *WlstSlu_7300_AssistSluitemData_LightData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7300_AssistSluitemData_LightData.Unmarshal(m, b)
}
func (m *WlstSlu_7300_AssistSluitemData_LightData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7300_AssistSluitemData_LightData.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7300_AssistSluitemData_LightData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7300_AssistSluitemData_LightData.Merge(m, src)
}
func (m *WlstSlu_7300_AssistSluitemData_LightData) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7300_AssistSluitemData_LightData.Size(m)
}
func (m *WlstSlu_7300_AssistSluitemData_LightData) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7300_AssistSluitemData_LightData.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7300_AssistSluitemData_LightData proto.InternalMessageInfo

func (m *WlstSlu_7300_AssistSluitemData_LightData) GetMaxVoltage() float64 {
	if m != nil {
		return m.MaxVoltage
	}
	return 0
}

func (m *WlstSlu_7300_AssistSluitemData_LightData) GetMaxCurrent() float64 {
	if m != nil {
		return m.MaxCurrent
	}
	return 0
}

func (m *WlstSlu_7300_AssistSluitemData_LightData) GetElectricity() float64 {
	if m != nil {
		return m.Electricity
	}
	return 0
}

type WlstSlu_7300_SluitemPhyinfo struct {
	// 信号强度
	SignalStrength int32 `protobuf:"varint,1,opt,name=signal_strength,json=signalStrength,proto3" json:"signal_strength,omitempty"`
	// 路由级数 电力载波 0-6,zigbee 0-10
	Routing int32 `protobuf:"varint,2,opt,name=routing,proto3" json:"routing,omitempty"`
	// 所在相位 0-无法确定，1-A，2-B，3-C
	Phase int32 `protobuf:"varint,3,opt,name=phase,proto3" json:"phase,omitempty"`
	// 通信成功次数 1-16
	UsefulCommunicate int32 `protobuf:"varint,4,opt,name=useful_communicate,json=usefulCommunicate,proto3" json:"useful_communicate,omitempty"`
	// 通信总次数 1-16
	AllCommunicate int32 `protobuf:"varint,5,opt,name=all_communicate,json=allCommunicate,proto3" json:"all_communicate,omitempty"`
	// 型号信息
	ModelInfo            *WlstSlu_7300_ModelInfo `protobuf:"bytes,6,opt,name=model_info,json=modelInfo,proto3" json:"model_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *WlstSlu_7300_SluitemPhyinfo) Reset()         { *m = WlstSlu_7300_SluitemPhyinfo{} }
func (m *WlstSlu_7300_SluitemPhyinfo) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7300_SluitemPhyinfo) ProtoMessage()    {}
func (*WlstSlu_7300_SluitemPhyinfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{20, 4}
}

func (m *WlstSlu_7300_SluitemPhyinfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7300_SluitemPhyinfo.Unmarshal(m, b)
}
func (m *WlstSlu_7300_SluitemPhyinfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7300_SluitemPhyinfo.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7300_SluitemPhyinfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7300_SluitemPhyinfo.Merge(m, src)
}
func (m *WlstSlu_7300_SluitemPhyinfo) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7300_SluitemPhyinfo.Size(m)
}
func (m *WlstSlu_7300_SluitemPhyinfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7300_SluitemPhyinfo.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7300_SluitemPhyinfo proto.InternalMessageInfo

func (m *WlstSlu_7300_SluitemPhyinfo) GetSignalStrength() int32 {
	if m != nil {
		return m.SignalStrength
	}
	return 0
}

func (m *WlstSlu_7300_SluitemPhyinfo) GetRouting() int32 {
	if m != nil {
		return m.Routing
	}
	return 0
}

func (m *WlstSlu_7300_SluitemPhyinfo) GetPhase() int32 {
	if m != nil {
		return m.Phase
	}
	return 0
}

func (m *WlstSlu_7300_SluitemPhyinfo) GetUsefulCommunicate() int32 {
	if m != nil {
		return m.UsefulCommunicate
	}
	return 0
}

func (m *WlstSlu_7300_SluitemPhyinfo) GetAllCommunicate() int32 {
	if m != nil {
		return m.AllCommunicate
	}
	return 0
}

func (m *WlstSlu_7300_SluitemPhyinfo) GetModelInfo() *WlstSlu_7300_ModelInfo {
	if m != nil {
		return m.ModelInfo
	}
	return nil
}

type WlstSlu_7300_ModelInfo struct {
	// 控制器回路
	SluitemLoop int32 `protobuf:"varint,1,opt,name=sluitem_loop,json=sluitemLoop,proto3" json:"sluitem_loop,omitempty"`
	// 节能方式 0-无控制，1-只有开关灯，2-一档节能，3-二档节能，4-RS485，5-PWM
	PowerSaving int32 `protobuf:"varint,2,opt,name=power_saving,json=powerSaving,proto3" json:"power_saving,omitempty"`
	// 漏电流测量 0-无，1-有
	HasLeakage int32 `protobuf:"varint,3,opt,name=has_leakage,json=hasLeakage,proto3" json:"has_leakage,omitempty"`
	// 温度采集 0-无，1-有
	HasTemperature int32 `protobuf:"varint,4,opt,name=has_temperature,json=hasTemperature,proto3" json:"has_temperature,omitempty"`
	// 时钟 0-无，1-有
	HasTimer int32 `protobuf:"varint,5,opt,name=has_timer,json=hasTimer,proto3" json:"has_timer,omitempty"`
	// 型号 0-unknow,1-wj2090j
	Model int32 `protobuf:"varint,6,opt,name=model,proto3" json:"model,omitempty"`
	// 字符串型号
	SluitemType          string   `protobuf:"bytes,7,opt,name=sluitem_type,json=sluitemType,proto3" json:"sluitem_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7300_ModelInfo) Reset()         { *m = WlstSlu_7300_ModelInfo{} }
func (m *WlstSlu_7300_ModelInfo) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7300_ModelInfo) ProtoMessage()    {}
func (*WlstSlu_7300_ModelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{20, 5}
}

func (m *WlstSlu_7300_ModelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7300_ModelInfo.Unmarshal(m, b)
}
func (m *WlstSlu_7300_ModelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7300_ModelInfo.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7300_ModelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7300_ModelInfo.Merge(m, src)
}
func (m *WlstSlu_7300_ModelInfo) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7300_ModelInfo.Size(m)
}
func (m *WlstSlu_7300_ModelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7300_ModelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7300_ModelInfo proto.InternalMessageInfo

func (m *WlstSlu_7300_ModelInfo) GetSluitemLoop() int32 {
	if m != nil {
		return m.SluitemLoop
	}
	return 0
}

func (m *WlstSlu_7300_ModelInfo) GetPowerSaving() int32 {
	if m != nil {
		return m.PowerSaving
	}
	return 0
}

func (m *WlstSlu_7300_ModelInfo) GetHasLeakage() int32 {
	if m != nil {
		return m.HasLeakage
	}
	return 0
}

func (m *WlstSlu_7300_ModelInfo) GetHasTemperature() int32 {
	if m != nil {
		return m.HasTemperature
	}
	return 0
}

func (m *WlstSlu_7300_ModelInfo) GetHasTimer() int32 {
	if m != nil {
		return m.HasTimer
	}
	return 0
}

func (m *WlstSlu_7300_ModelInfo) GetModel() int32 {
	if m != nil {
		return m.Model
	}
	return 0
}

func (m *WlstSlu_7300_ModelInfo) GetSluitemType() string {
	if m != nil {
		return m.SluitemType
	}
	return ""
}

type WlstSluF900 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 告警类型 0-集中器告警，1-控制器通讯故障，2-控制器状态告警，3-主动上报巡测结束，4-蓝牙模块连接申请，5-设置新域名成功, 6-控制器基本数据(双字节)
	AlarmType int32 `protobuf:"varint,2,opt,name=alarm_type,json=alarmType,proto3" json:"alarm_type,omitempty"`
	// 集中器数据
	ConcentratorData *WlstSlu_7300_ConcentratorData `protobuf:"bytes,3,opt,name=concentrator_data,json=concentratorData,proto3" json:"concentrator_data,omitempty"`
	// 通讯故障控制器编号
	ErrorCtrls []int32 `protobuf:"varint,4,rep,packed,name=error_ctrls,json=errorCtrls,proto3" json:"error_ctrls,omitempty"`
	// 控制器状态
	SluitemStatusAlarm []*WlstSluF900_SluitemStatusAlarm `protobuf:"bytes,5,rep,name=sluitem_status_alarm,json=sluitemStatusAlarm,proto3" json:"sluitem_status_alarm,omitempty"`
	// 蓝牙连接申请
	BluetoothApply *WlstSluF900_BluetoothApply `protobuf:"bytes,6,opt,name=bluetooth_apply,json=bluetoothApply,proto3" json:"bluetooth_apply,omitempty"`
	// 新域名设置状态
	SetDomainResult      *WlstSluF900_SetDomainResult `protobuf:"bytes,7,opt,name=set_domain_result,json=setDomainResult,proto3" json:"set_domain_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *WlstSluF900) Reset()         { *m = WlstSluF900{} }
func (m *WlstSluF900) String() string { return proto.CompactTextString(m) }
func (*WlstSluF900) ProtoMessage()    {}
func (*WlstSluF900) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{21}
}

func (m *WlstSluF900) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF900.Unmarshal(m, b)
}
func (m *WlstSluF900) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF900.Marshal(b, m, deterministic)
}
func (m *WlstSluF900) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF900.Merge(m, src)
}
func (m *WlstSluF900) XXX_Size() int {
	return xxx_messageInfo_WlstSluF900.Size(m)
}
func (m *WlstSluF900) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF900.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF900 proto.InternalMessageInfo

func (m *WlstSluF900) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSluF900) GetAlarmType() int32 {
	if m != nil {
		return m.AlarmType
	}
	return 0
}

func (m *WlstSluF900) GetConcentratorData() *WlstSlu_7300_ConcentratorData {
	if m != nil {
		return m.ConcentratorData
	}
	return nil
}

func (m *WlstSluF900) GetErrorCtrls() []int32 {
	if m != nil {
		return m.ErrorCtrls
	}
	return nil
}

func (m *WlstSluF900) GetSluitemStatusAlarm() []*WlstSluF900_SluitemStatusAlarm {
	if m != nil {
		return m.SluitemStatusAlarm
	}
	return nil
}

func (m *WlstSluF900) GetBluetoothApply() *WlstSluF900_BluetoothApply {
	if m != nil {
		return m.BluetoothApply
	}
	return nil
}

func (m *WlstSluF900) GetSetDomainResult() *WlstSluF900_SetDomainResult {
	if m != nil {
		return m.SetDomainResult
	}
	return nil
}

type WlstSluF900_SluitemStatusAlarm struct {
	// 控制器地址
	SluitemIdx int32 `protobuf:"varint,1,opt,name=sluitem_idx,json=sluitemIdx,proto3" json:"sluitem_idx,omitempty"`
	// 控制器回路数量
	SluitemLoop int32 `protobuf:"varint,2,opt,name=sluitem_loop,json=sluitemLoop,proto3" json:"sluitem_loop,omitempty"`
	// 控制器状态
	SluitemStatus *WlstSlu_7300_BaseSluitemData_SluitemStatus `protobuf:"bytes,3,opt,name=sluitem_status,json=sluitemStatus,proto3" json:"sluitem_status,omitempty"`
	// 灯状态
	LightStatus          []*WlstSlu_7300_BaseSluitemData_LightStatus `protobuf:"bytes,4,rep,name=light_status,json=lightStatus,proto3" json:"light_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *WlstSluF900_SluitemStatusAlarm) Reset()         { *m = WlstSluF900_SluitemStatusAlarm{} }
func (m *WlstSluF900_SluitemStatusAlarm) String() string { return proto.CompactTextString(m) }
func (*WlstSluF900_SluitemStatusAlarm) ProtoMessage()    {}
func (*WlstSluF900_SluitemStatusAlarm) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{21, 0}
}

func (m *WlstSluF900_SluitemStatusAlarm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF900_SluitemStatusAlarm.Unmarshal(m, b)
}
func (m *WlstSluF900_SluitemStatusAlarm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF900_SluitemStatusAlarm.Marshal(b, m, deterministic)
}
func (m *WlstSluF900_SluitemStatusAlarm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF900_SluitemStatusAlarm.Merge(m, src)
}
func (m *WlstSluF900_SluitemStatusAlarm) XXX_Size() int {
	return xxx_messageInfo_WlstSluF900_SluitemStatusAlarm.Size(m)
}
func (m *WlstSluF900_SluitemStatusAlarm) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF900_SluitemStatusAlarm.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF900_SluitemStatusAlarm proto.InternalMessageInfo

func (m *WlstSluF900_SluitemStatusAlarm) GetSluitemIdx() int32 {
	if m != nil {
		return m.SluitemIdx
	}
	return 0
}

func (m *WlstSluF900_SluitemStatusAlarm) GetSluitemLoop() int32 {
	if m != nil {
		return m.SluitemLoop
	}
	return 0
}

func (m *WlstSluF900_SluitemStatusAlarm) GetSluitemStatus() *WlstSlu_7300_BaseSluitemData_SluitemStatus {
	if m != nil {
		return m.SluitemStatus
	}
	return nil
}

func (m *WlstSluF900_SluitemStatusAlarm) GetLightStatus() []*WlstSlu_7300_BaseSluitemData_LightStatus {
	if m != nil {
		return m.LightStatus
	}
	return nil
}

type WlstSluF900_BluetoothApply struct {
	// 设备标识码
	SimNumber int64 `protobuf:"varint,1,opt,name=sim_number,json=simNumber,proto3" json:"sim_number,omitempty"`
	// 动态码
	CheckCode            string   `protobuf:"bytes,2,opt,name=check_code,json=checkCode,proto3" json:"check_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSluF900_BluetoothApply) Reset()         { *m = WlstSluF900_BluetoothApply{} }
func (m *WlstSluF900_BluetoothApply) String() string { return proto.CompactTextString(m) }
func (*WlstSluF900_BluetoothApply) ProtoMessage()    {}
func (*WlstSluF900_BluetoothApply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{21, 1}
}

func (m *WlstSluF900_BluetoothApply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF900_BluetoothApply.Unmarshal(m, b)
}
func (m *WlstSluF900_BluetoothApply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF900_BluetoothApply.Marshal(b, m, deterministic)
}
func (m *WlstSluF900_BluetoothApply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF900_BluetoothApply.Merge(m, src)
}
func (m *WlstSluF900_BluetoothApply) XXX_Size() int {
	return xxx_messageInfo_WlstSluF900_BluetoothApply.Size(m)
}
func (m *WlstSluF900_BluetoothApply) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF900_BluetoothApply.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF900_BluetoothApply proto.InternalMessageInfo

func (m *WlstSluF900_BluetoothApply) GetSimNumber() int64 {
	if m != nil {
		return m.SimNumber
	}
	return 0
}

func (m *WlstSluF900_BluetoothApply) GetCheckCode() string {
	if m != nil {
		return m.CheckCode
	}
	return ""
}

type WlstSluF900_SetDomainResult struct {
	// 域名
	DomainName int32 `protobuf:"varint,1,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	// 状态 设置成功
	SetSuccess           []int32  `protobuf:"varint,2,rep,packed,name=set_success,json=setSuccess,proto3" json:"set_success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSluF900_SetDomainResult) Reset()         { *m = WlstSluF900_SetDomainResult{} }
func (m *WlstSluF900_SetDomainResult) String() string { return proto.CompactTextString(m) }
func (*WlstSluF900_SetDomainResult) ProtoMessage()    {}
func (*WlstSluF900_SetDomainResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{21, 2}
}

func (m *WlstSluF900_SetDomainResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluF900_SetDomainResult.Unmarshal(m, b)
}
func (m *WlstSluF900_SetDomainResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluF900_SetDomainResult.Marshal(b, m, deterministic)
}
func (m *WlstSluF900_SetDomainResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluF900_SetDomainResult.Merge(m, src)
}
func (m *WlstSluF900_SetDomainResult) XXX_Size() int {
	return xxx_messageInfo_WlstSluF900_SetDomainResult.Size(m)
}
func (m *WlstSluF900_SetDomainResult) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluF900_SetDomainResult.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluF900_SetDomainResult proto.InternalMessageInfo

func (m *WlstSluF900_SetDomainResult) GetDomainName() int32 {
	if m != nil {
		return m.DomainName
	}
	return 0
}

func (m *WlstSluF900_SetDomainResult) GetSetSuccess() []int32 {
	if m != nil {
		return m.SetSuccess
	}
	return nil
}

// Wlst_slu_fb00
type WlstSlu_7B00 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 起始地址
	SluitemIdx int32 `protobuf:"varint,2,opt,name=sluitem_idx,json=sluitemIdx,proto3" json:"sluitem_idx,omitempty"`
	// 记录数量
	DataCount int32 `protobuf:"varint,3,opt,name=data_count,json=dataCount,proto3" json:"data_count,omitempty"`
	// 控制参数
	OperationData        []*WlstSlu_7B00_ReadConcentratorOperationData `protobuf:"bytes,4,rep,name=operation_data,json=operationData,proto3" json:"operation_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *WlstSlu_7B00) Reset()         { *m = WlstSlu_7B00{} }
func (m *WlstSlu_7B00) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7B00) ProtoMessage()    {}
func (*WlstSlu_7B00) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{22}
}

func (m *WlstSlu_7B00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7B00.Unmarshal(m, b)
}
func (m *WlstSlu_7B00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7B00.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7B00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7B00.Merge(m, src)
}
func (m *WlstSlu_7B00) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7B00.Size(m)
}
func (m *WlstSlu_7B00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7B00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7B00 proto.InternalMessageInfo

func (m *WlstSlu_7B00) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSlu_7B00) GetSluitemIdx() int32 {
	if m != nil {
		return m.SluitemIdx
	}
	return 0
}

func (m *WlstSlu_7B00) GetDataCount() int32 {
	if m != nil {
		return m.DataCount
	}
	return 0
}

func (m *WlstSlu_7B00) GetOperationData() []*WlstSlu_7B00_ReadConcentratorOperationData {
	if m != nil {
		return m.OperationData
	}
	return nil
}

type WlstSlu_7B00_ReadConcentratorOperationData struct {
	// （集中器：操作顺序 0-广播，1-依次）（控制器：数据类型 0-base，1-adv）
	OperationOrder int32 `protobuf:"varint,1,opt,name=operation_order,json=operationOrder,proto3" json:"operation_order,omitempty"`
	// 指令类型 0-清除(发送到控制器时无此值)，1-定时，2-经纬度，3-即时
	OperationType int32 `protobuf:"varint,2,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`
	// 周设置
	WeekSet []int32 `protobuf:"varint,3,rep,packed,name=week_set,json=weekSet,proto3" json:"week_set,omitempty"`
	// 定时 hh:mm->int32 或偏移量 依据 operation_type定
	TimerOrOffset int32 `protobuf:"varint,4,opt,name=timer_or_offset,json=timerOrOffset,proto3" json:"timer_or_offset,omitempty"`
	// 地址类型 0-全部，1-组，2-规则，3-单一，4-gprs
	AddrType int32 `protobuf:"varint,5,opt,name=addr_type,json=addrType,proto3" json:"addr_type,omitempty"`
	// 地址
	Addr []int32 `protobuf:"varint,6,rep,packed,name=addr,proto3" json:"addr,omitempty"`
	// 操作类型，1-传统，4-混合，5-pwm
	CmdType int32 `protobuf:"varint,7,opt,name=cmd_type,json=cmdType,proto3" json:"cmd_type,omitempty"`
	// 操作内容
	CmdMix               []*WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation `protobuf:"bytes,8,rep,name=cmd_mix,json=cmdMix,proto3" json:"cmd_mix,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                   `json:"-"`
	XXX_unrecognized     []byte                                                     `json:"-"`
	XXX_sizecache        int32                                                      `json:"-"`
}

func (m *WlstSlu_7B00_ReadConcentratorOperationData) Reset() {
	*m = WlstSlu_7B00_ReadConcentratorOperationData{}
}
func (m *WlstSlu_7B00_ReadConcentratorOperationData) String() string {
	return proto.CompactTextString(m)
}
func (*WlstSlu_7B00_ReadConcentratorOperationData) ProtoMessage() {}
func (*WlstSlu_7B00_ReadConcentratorOperationData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{22, 0}
}

func (m *WlstSlu_7B00_ReadConcentratorOperationData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7B00_ReadConcentratorOperationData.Unmarshal(m, b)
}
func (m *WlstSlu_7B00_ReadConcentratorOperationData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7B00_ReadConcentratorOperationData.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7B00_ReadConcentratorOperationData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7B00_ReadConcentratorOperationData.Merge(m, src)
}
func (m *WlstSlu_7B00_ReadConcentratorOperationData) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7B00_ReadConcentratorOperationData.Size(m)
}
func (m *WlstSlu_7B00_ReadConcentratorOperationData) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7B00_ReadConcentratorOperationData.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7B00_ReadConcentratorOperationData proto.InternalMessageInfo

func (m *WlstSlu_7B00_ReadConcentratorOperationData) GetOperationOrder() int32 {
	if m != nil {
		return m.OperationOrder
	}
	return 0
}

func (m *WlstSlu_7B00_ReadConcentratorOperationData) GetOperationType() int32 {
	if m != nil {
		return m.OperationType
	}
	return 0
}

func (m *WlstSlu_7B00_ReadConcentratorOperationData) GetWeekSet() []int32 {
	if m != nil {
		return m.WeekSet
	}
	return nil
}

func (m *WlstSlu_7B00_ReadConcentratorOperationData) GetTimerOrOffset() int32 {
	if m != nil {
		return m.TimerOrOffset
	}
	return 0
}

func (m *WlstSlu_7B00_ReadConcentratorOperationData) GetAddrType() int32 {
	if m != nil {
		return m.AddrType
	}
	return 0
}

func (m *WlstSlu_7B00_ReadConcentratorOperationData) GetAddr() []int32 {
	if m != nil {
		return m.Addr
	}
	return nil
}

func (m *WlstSlu_7B00_ReadConcentratorOperationData) GetCmdType() int32 {
	if m != nil {
		return m.CmdType
	}
	return 0
}

func (m *WlstSlu_7B00_ReadConcentratorOperationData) GetCmdMix() []*WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation {
	if m != nil {
		return m.CmdMix
	}
	return nil
}

type WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation struct {
	// 回路1-4操作，-1-不操作，0-开灯，1-一档节能，2-二档节能，3-关灯，100～200-pwm0%～100%
	Handle int32 `protobuf:"varint,1,opt,name=handle,proto3" json:"handle,omitempty"`
	// pwm频率 /100为发送值
	Rate                 int32    `protobuf:"varint,2,opt,name=rate,proto3" json:"rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation) Reset() {
	*m = WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation{}
}
func (m *WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation) String() string {
	return proto.CompactTextString(m)
}
func (*WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation) ProtoMessage() {}
func (*WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{22, 0, 0}
}

func (m *WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation.Unmarshal(m, b)
}
func (m *WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation.Merge(m, src)
}
func (m *WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation.Size(m)
}
func (m *WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation proto.InternalMessageInfo

func (m *WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation) GetHandle() int32 {
	if m != nil {
		return m.Handle
	}
	return 0
}

func (m *WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation) GetRate() int32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

type WlstSluFe00 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 操作命令
	OperationCmd int32 `protobuf:"varint,2,opt,name=operation_cmd,json=operationCmd,proto3" json:"operation_cmd,omitempty"`
	// 不成功数量
	FaultCount int32 `protobuf:"varint,3,opt,name=fault_count,json=faultCount,proto3" json:"fault_count,omitempty"`
	// 控制器地址
	SluitemIdx           []int32  `protobuf:"varint,4,rep,packed,name=sluitem_idx,json=sluitemIdx,proto3" json:"sluitem_idx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSluFe00) Reset()         { *m = WlstSluFe00{} }
func (m *WlstSluFe00) String() string { return proto.CompactTextString(m) }
func (*WlstSluFe00) ProtoMessage()    {}
func (*WlstSluFe00) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{23}
}

func (m *WlstSluFe00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSluFe00.Unmarshal(m, b)
}
func (m *WlstSluFe00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSluFe00.Marshal(b, m, deterministic)
}
func (m *WlstSluFe00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSluFe00.Merge(m, src)
}
func (m *WlstSluFe00) XXX_Size() int {
	return xxx_messageInfo_WlstSluFe00.Size(m)
}
func (m *WlstSluFe00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSluFe00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSluFe00 proto.InternalMessageInfo

func (m *WlstSluFe00) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSluFe00) GetOperationCmd() int32 {
	if m != nil {
		return m.OperationCmd
	}
	return 0
}

func (m *WlstSluFe00) GetFaultCount() int32 {
	if m != nil {
		return m.FaultCount
	}
	return 0
}

func (m *WlstSluFe00) GetSluitemIdx() []int32 {
	if m != nil {
		return m.SluitemIdx
	}
	return nil
}

// Wlst_slu_7d00
type WlstSlu_7400 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 指令类型 0-清除，1-定时，2-经纬度，3-即时
	OperationType int32 `protobuf:"varint,2,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`
	// 操作顺序 0-广播，1-依次
	OperationOrder int32 `protobuf:"varint,3,opt,name=operation_order,json=operationOrder,proto3" json:"operation_order,omitempty"`
	// 地址类型 0-全部，1-组，2-规则，3-单一，4-gprs
	AddrType int32 `protobuf:"varint,4,opt,name=addr_type,json=addrType,proto3" json:"addr_type,omitempty"`
	// 地址(需要操作的序号)
	// int32 addr = 5;
	// gprs操作地址
	Addrs []int32 `protobuf:"varint,6,rep,packed,name=addrs,proto3" json:"addrs,omitempty"`
	// 周设置
	WeekSet []int32 `protobuf:"varint,7,rep,packed,name=week_set,json=weekSet,proto3" json:"week_set,omitempty"`
	// 定时 hh:mm->int32 或偏移量 依据 operation_type定
	TimerOrOffset int32 `protobuf:"varint,8,opt,name=timer_or_offset,json=timerOrOffset,proto3" json:"timer_or_offset,omitempty"`
	// 操作类型 3-经纬度关灯，4-混合控制，5-pwm调节，6-485调节
	CmdType int32 `protobuf:"varint,9,opt,name=cmd_type,json=cmdType,proto3" json:"cmd_type,omitempty"`
	// 混合回路操作 0-不操作，1-开灯，2-1档节能，3-2档节能，4-关灯（经纬度关灯时，cmd_type<4视为不操作）
	CmdMix []int32 `protobuf:"varint,10,rep,packed,name=cmd_mix,json=cmdMix,proto3" json:"cmd_mix,omitempty"`
	// pwm功率调节
	CmdPwm               *WlstSlu_7400_CmdPwm `protobuf:"bytes,11,opt,name=cmd_pwm,json=cmdPwm,proto3" json:"cmd_pwm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WlstSlu_7400) Reset()         { *m = WlstSlu_7400{} }
func (m *WlstSlu_7400) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7400) ProtoMessage()    {}
func (*WlstSlu_7400) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{24}
}

func (m *WlstSlu_7400) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7400.Unmarshal(m, b)
}
func (m *WlstSlu_7400) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7400.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7400) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7400.Merge(m, src)
}
func (m *WlstSlu_7400) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7400.Size(m)
}
func (m *WlstSlu_7400) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7400.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7400 proto.InternalMessageInfo

func (m *WlstSlu_7400) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSlu_7400) GetOperationType() int32 {
	if m != nil {
		return m.OperationType
	}
	return 0
}

func (m *WlstSlu_7400) GetOperationOrder() int32 {
	if m != nil {
		return m.OperationOrder
	}
	return 0
}

func (m *WlstSlu_7400) GetAddrType() int32 {
	if m != nil {
		return m.AddrType
	}
	return 0
}

func (m *WlstSlu_7400) GetAddrs() []int32 {
	if m != nil {
		return m.Addrs
	}
	return nil
}

func (m *WlstSlu_7400) GetWeekSet() []int32 {
	if m != nil {
		return m.WeekSet
	}
	return nil
}

func (m *WlstSlu_7400) GetTimerOrOffset() int32 {
	if m != nil {
		return m.TimerOrOffset
	}
	return 0
}

func (m *WlstSlu_7400) GetCmdType() int32 {
	if m != nil {
		return m.CmdType
	}
	return 0
}

func (m *WlstSlu_7400) GetCmdMix() []int32 {
	if m != nil {
		return m.CmdMix
	}
	return nil
}

func (m *WlstSlu_7400) GetCmdPwm() *WlstSlu_7400_CmdPwm {
	if m != nil {
		return m.CmdPwm
	}
	return nil
}

type WlstSlu_7400_CmdPwm struct {
	// 回路(仅需要操作的回路序号)
	LoopCanDo []int32 `protobuf:"varint,1,rep,packed,name=loop_can_do,json=loopCanDo,proto3" json:"loop_can_do,omitempty"`
	// 比例 0-100 -> 0%-100%
	Scale int32 `protobuf:"varint,2,opt,name=scale,proto3" json:"scale,omitempty"`
	// 频率 /100为发送值
	Rate                 int32    `protobuf:"varint,3,opt,name=rate,proto3" json:"rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7400_CmdPwm) Reset()         { *m = WlstSlu_7400_CmdPwm{} }
func (m *WlstSlu_7400_CmdPwm) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7400_CmdPwm) ProtoMessage()    {}
func (*WlstSlu_7400_CmdPwm) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{24, 0}
}

func (m *WlstSlu_7400_CmdPwm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7400_CmdPwm.Unmarshal(m, b)
}
func (m *WlstSlu_7400_CmdPwm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7400_CmdPwm.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7400_CmdPwm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7400_CmdPwm.Merge(m, src)
}
func (m *WlstSlu_7400_CmdPwm) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7400_CmdPwm.Size(m)
}
func (m *WlstSlu_7400_CmdPwm) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7400_CmdPwm.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7400_CmdPwm proto.InternalMessageInfo

func (m *WlstSlu_7400_CmdPwm) GetLoopCanDo() []int32 {
	if m != nil {
		return m.LoopCanDo
	}
	return nil
}

func (m *WlstSlu_7400_CmdPwm) GetScale() int32 {
	if m != nil {
		return m.Scale
	}
	return 0
}

func (m *WlstSlu_7400_CmdPwm) GetRate() int32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

type WlstSlu_7C00 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 地址类型 0-全部，1-组，2-规则，3-单一，4-gprs
	AddrType int32 `protobuf:"varint,2,opt,name=addr_type,json=addrType,proto3" json:"addr_type,omitempty"`
	// 地址
	Addr int32 `protobuf:"varint,3,opt,name=addr,proto3" json:"addr,omitempty"`
	// 数据条数（==-1时表示发送给集中器）
	CmdCount int32 `protobuf:"varint,4,opt,name=cmd_count,json=cmdCount,proto3" json:"cmd_count,omitempty"`
	// 更新或清除 0-add,1-clean&add（仅发送给控制器时有效）
	AddOrUpdate int32 `protobuf:"varint,5,opt,name=add_or_update,json=addOrUpdate,proto3" json:"add_or_update,omitempty"`
	// 控制参数
	OperationData        []*WlstSlu_7C00_ConcentratorOperationData `protobuf:"bytes,6,rep,name=operation_data,json=operationData,proto3" json:"operation_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *WlstSlu_7C00) Reset()         { *m = WlstSlu_7C00{} }
func (m *WlstSlu_7C00) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7C00) ProtoMessage()    {}
func (*WlstSlu_7C00) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{25}
}

func (m *WlstSlu_7C00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7C00.Unmarshal(m, b)
}
func (m *WlstSlu_7C00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7C00.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7C00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7C00.Merge(m, src)
}
func (m *WlstSlu_7C00) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7C00.Size(m)
}
func (m *WlstSlu_7C00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7C00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7C00 proto.InternalMessageInfo

func (m *WlstSlu_7C00) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSlu_7C00) GetAddrType() int32 {
	if m != nil {
		return m.AddrType
	}
	return 0
}

func (m *WlstSlu_7C00) GetAddr() int32 {
	if m != nil {
		return m.Addr
	}
	return 0
}

func (m *WlstSlu_7C00) GetCmdCount() int32 {
	if m != nil {
		return m.CmdCount
	}
	return 0
}

func (m *WlstSlu_7C00) GetAddOrUpdate() int32 {
	if m != nil {
		return m.AddOrUpdate
	}
	return 0
}

func (m *WlstSlu_7C00) GetOperationData() []*WlstSlu_7C00_ConcentratorOperationData {
	if m != nil {
		return m.OperationData
	}
	return nil
}

type WlstSlu_7C00_ConcentratorOperationData struct {
	// 指令类型 1-定时，2-经纬度，3-即时
	OperationType int32 `protobuf:"varint,1,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`
	// 操作类型 4-混合控制，5-pwm调节，6-485调节
	CmdType int32 `protobuf:"varint,2,opt,name=cmd_type,json=cmdType,proto3" json:"cmd_type,omitempty"`
	// 周设置
	WeekSet []int32 `protobuf:"varint,3,rep,packed,name=week_set,json=weekSet,proto3" json:"week_set,omitempty"`
	// 定时 hh:mm->int32 或偏移量 依据 operation_type定
	TimerOrOffset int32 `protobuf:"varint,4,opt,name=timer_or_offset,json=timerOrOffset,proto3" json:"timer_or_offset,omitempty"`
	// 混合回路操作 0-不操作，1-开灯，2-1档节能，3-2档节能，4-关灯
	CmdMix []int32 `protobuf:"varint,5,rep,packed,name=cmd_mix,json=cmdMix,proto3" json:"cmd_mix,omitempty"`
	// pwm功率调节
	CmdPwm *WlstSlu_7C00_ConcentratorOperationData_CmdPwm `protobuf:"bytes,6,opt,name=cmd_pwm,json=cmdPwm,proto3" json:"cmd_pwm,omitempty"`
	// 485调节
	Cmd_485              *WlstSlu_7C00_ConcentratorOperationData_Cmd_485 `protobuf:"bytes,7,opt,name=cmd_485,json=cmd485,proto3" json:"cmd_485,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *WlstSlu_7C00_ConcentratorOperationData) Reset() {
	*m = WlstSlu_7C00_ConcentratorOperationData{}
}
func (m *WlstSlu_7C00_ConcentratorOperationData) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_7C00_ConcentratorOperationData) ProtoMessage()    {}
func (*WlstSlu_7C00_ConcentratorOperationData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{25, 0}
}

func (m *WlstSlu_7C00_ConcentratorOperationData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData.Unmarshal(m, b)
}
func (m *WlstSlu_7C00_ConcentratorOperationData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7C00_ConcentratorOperationData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData.Merge(m, src)
}
func (m *WlstSlu_7C00_ConcentratorOperationData) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData.Size(m)
}
func (m *WlstSlu_7C00_ConcentratorOperationData) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData proto.InternalMessageInfo

func (m *WlstSlu_7C00_ConcentratorOperationData) GetOperationType() int32 {
	if m != nil {
		return m.OperationType
	}
	return 0
}

func (m *WlstSlu_7C00_ConcentratorOperationData) GetCmdType() int32 {
	if m != nil {
		return m.CmdType
	}
	return 0
}

func (m *WlstSlu_7C00_ConcentratorOperationData) GetWeekSet() []int32 {
	if m != nil {
		return m.WeekSet
	}
	return nil
}

func (m *WlstSlu_7C00_ConcentratorOperationData) GetTimerOrOffset() int32 {
	if m != nil {
		return m.TimerOrOffset
	}
	return 0
}

func (m *WlstSlu_7C00_ConcentratorOperationData) GetCmdMix() []int32 {
	if m != nil {
		return m.CmdMix
	}
	return nil
}

func (m *WlstSlu_7C00_ConcentratorOperationData) GetCmdPwm() *WlstSlu_7C00_ConcentratorOperationData_CmdPwm {
	if m != nil {
		return m.CmdPwm
	}
	return nil
}

func (m *WlstSlu_7C00_ConcentratorOperationData) GetCmd_485() *WlstSlu_7C00_ConcentratorOperationData_Cmd_485 {
	if m != nil {
		return m.Cmd_485
	}
	return nil
}

type WlstSlu_7C00_ConcentratorOperationData_CmdPwm struct {
	// 回路
	LoopCanDo []int32 `protobuf:"varint,1,rep,packed,name=loop_can_do,json=loopCanDo,proto3" json:"loop_can_do,omitempty"`
	// 比例 0-100～10%-100%
	Scale int32 `protobuf:"varint,2,opt,name=scale,proto3" json:"scale,omitempty"`
	// 频率 /100为发送值
	Rate                 int32    `protobuf:"varint,3,opt,name=rate,proto3" json:"rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7C00_ConcentratorOperationData_CmdPwm) Reset() {
	*m = WlstSlu_7C00_ConcentratorOperationData_CmdPwm{}
}
func (m *WlstSlu_7C00_ConcentratorOperationData_CmdPwm) String() string {
	return proto.CompactTextString(m)
}
func (*WlstSlu_7C00_ConcentratorOperationData_CmdPwm) ProtoMessage() {}
func (*WlstSlu_7C00_ConcentratorOperationData_CmdPwm) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{25, 0, 0}
}

func (m *WlstSlu_7C00_ConcentratorOperationData_CmdPwm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData_CmdPwm.Unmarshal(m, b)
}
func (m *WlstSlu_7C00_ConcentratorOperationData_CmdPwm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData_CmdPwm.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7C00_ConcentratorOperationData_CmdPwm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData_CmdPwm.Merge(m, src)
}
func (m *WlstSlu_7C00_ConcentratorOperationData_CmdPwm) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData_CmdPwm.Size(m)
}
func (m *WlstSlu_7C00_ConcentratorOperationData_CmdPwm) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData_CmdPwm.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData_CmdPwm proto.InternalMessageInfo

func (m *WlstSlu_7C00_ConcentratorOperationData_CmdPwm) GetLoopCanDo() []int32 {
	if m != nil {
		return m.LoopCanDo
	}
	return nil
}

func (m *WlstSlu_7C00_ConcentratorOperationData_CmdPwm) GetScale() int32 {
	if m != nil {
		return m.Scale
	}
	return 0
}

func (m *WlstSlu_7C00_ConcentratorOperationData_CmdPwm) GetRate() int32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

type WlstSlu_7C00_ConcentratorOperationData_Cmd_485 struct {
	// 波特率 1-600,2-1200,3-2400,4-4800,5-9600,6-19200
	Baudrate int32 `protobuf:"varint,1,opt,name=baudrate,proto3" json:"baudrate,omitempty"`
	// 校验位 0-无，1-奇校验，2-偶校验
	Check int32 `protobuf:"varint,2,opt,name=check,proto3" json:"check,omitempty"`
	// 数据长度 0-20
	DataLength int32 `protobuf:"varint,3,opt,name=data_length,json=dataLength,proto3" json:"data_length,omitempty"`
	// 数据
	Data_485             string   `protobuf:"bytes,4,opt,name=data_485,json=data485,proto3" json:"data_485,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_7C00_ConcentratorOperationData_Cmd_485) Reset() {
	*m = WlstSlu_7C00_ConcentratorOperationData_Cmd_485{}
}
func (m *WlstSlu_7C00_ConcentratorOperationData_Cmd_485) String() string {
	return proto.CompactTextString(m)
}
func (*WlstSlu_7C00_ConcentratorOperationData_Cmd_485) ProtoMessage() {}
func (*WlstSlu_7C00_ConcentratorOperationData_Cmd_485) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{25, 0, 1}
}

func (m *WlstSlu_7C00_ConcentratorOperationData_Cmd_485) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData_Cmd_485.Unmarshal(m, b)
}
func (m *WlstSlu_7C00_ConcentratorOperationData_Cmd_485) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData_Cmd_485.Marshal(b, m, deterministic)
}
func (m *WlstSlu_7C00_ConcentratorOperationData_Cmd_485) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData_Cmd_485.Merge(m, src)
}
func (m *WlstSlu_7C00_ConcentratorOperationData_Cmd_485) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData_Cmd_485.Size(m)
}
func (m *WlstSlu_7C00_ConcentratorOperationData_Cmd_485) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData_Cmd_485.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_7C00_ConcentratorOperationData_Cmd_485 proto.InternalMessageInfo

func (m *WlstSlu_7C00_ConcentratorOperationData_Cmd_485) GetBaudrate() int32 {
	if m != nil {
		return m.Baudrate
	}
	return 0
}

func (m *WlstSlu_7C00_ConcentratorOperationData_Cmd_485) GetCheck() int32 {
	if m != nil {
		return m.Check
	}
	return 0
}

func (m *WlstSlu_7C00_ConcentratorOperationData_Cmd_485) GetDataLength() int32 {
	if m != nil {
		return m.DataLength
	}
	return 0
}

func (m *WlstSlu_7C00_ConcentratorOperationData_Cmd_485) GetData_485() string {
	if m != nil {
		return m.Data_485
	}
	return ""
}

type WlstSlu_6F00 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 地址类型 0-全部，1-组，2-规则，3-单一，4-gprs
	AddrType int32 `protobuf:"varint,2,opt,name=addr_type,json=addrType,proto3" json:"addr_type,omitempty"`
	// 地址
	Addr int32 `protobuf:"varint,3,opt,name=addr,proto3" json:"addr,omitempty"`
	// 操作标识
	ResetMark *WlstSlu_6F00_ResetMark `protobuf:"bytes,4,opt,name=reset_mark,json=resetMark,proto3" json:"reset_mark,omitempty"`
	// 操作结果 0x3a-失败，0x5a-成功, 0x60-数据错误，0x61-正在操作，0x62-等待操作，0x63-队列已满
	Status               int32    `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_6F00) Reset()         { *m = WlstSlu_6F00{} }
func (m *WlstSlu_6F00) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_6F00) ProtoMessage()    {}
func (*WlstSlu_6F00) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{26}
}

func (m *WlstSlu_6F00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_6F00.Unmarshal(m, b)
}
func (m *WlstSlu_6F00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_6F00.Marshal(b, m, deterministic)
}
func (m *WlstSlu_6F00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_6F00.Merge(m, src)
}
func (m *WlstSlu_6F00) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_6F00.Size(m)
}
func (m *WlstSlu_6F00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_6F00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_6F00 proto.InternalMessageInfo

func (m *WlstSlu_6F00) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstSlu_6F00) GetAddrType() int32 {
	if m != nil {
		return m.AddrType
	}
	return 0
}

func (m *WlstSlu_6F00) GetAddr() int32 {
	if m != nil {
		return m.Addr
	}
	return 0
}

func (m *WlstSlu_6F00) GetResetMark() *WlstSlu_6F00_ResetMark {
	if m != nil {
		return m.ResetMark
	}
	return nil
}

func (m *WlstSlu_6F00) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type WlstSlu_6F00_ResetMark struct {
	// mcu复位
	ResetMcu int32 `protobuf:"varint,1,opt,name=reset_mcu,json=resetMcu,proto3" json:"reset_mcu,omitempty"`
	// 通讯模块复位
	ResetComm int32 `protobuf:"varint,2,opt,name=reset_comm,json=resetComm,proto3" json:"reset_comm,omitempty"`
	// 初始化mcu硬件配置
	InitMcuHardware int32 `protobuf:"varint,3,opt,name=init_mcu_hardware,json=initMcuHardware,proto3" json:"init_mcu_hardware,omitempty"`
	// 初始化ram
	InitRam int32 `protobuf:"varint,4,opt,name=init_ram,json=initRam,proto3" json:"init_ram,omitempty"`
	// eerom 清零
	ZeroEerom int32 `protobuf:"varint,5,opt,name=zero_eerom,json=zeroEerom,proto3" json:"zero_eerom,omitempty"`
	// 电量计数清零
	ZeroCount            int32    `protobuf:"varint,6,opt,name=zero_count,json=zeroCount,proto3" json:"zero_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstSlu_6F00_ResetMark) Reset()         { *m = WlstSlu_6F00_ResetMark{} }
func (m *WlstSlu_6F00_ResetMark) String() string { return proto.CompactTextString(m) }
func (*WlstSlu_6F00_ResetMark) ProtoMessage()    {}
func (*WlstSlu_6F00_ResetMark) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6bd86311f0b5fd, []int{26, 0}
}

func (m *WlstSlu_6F00_ResetMark) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstSlu_6F00_ResetMark.Unmarshal(m, b)
}
func (m *WlstSlu_6F00_ResetMark) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstSlu_6F00_ResetMark.Marshal(b, m, deterministic)
}
func (m *WlstSlu_6F00_ResetMark) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstSlu_6F00_ResetMark.Merge(m, src)
}
func (m *WlstSlu_6F00_ResetMark) XXX_Size() int {
	return xxx_messageInfo_WlstSlu_6F00_ResetMark.Size(m)
}
func (m *WlstSlu_6F00_ResetMark) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstSlu_6F00_ResetMark.DiscardUnknown(m)
}

var xxx_messageInfo_WlstSlu_6F00_ResetMark proto.InternalMessageInfo

func (m *WlstSlu_6F00_ResetMark) GetResetMcu() int32 {
	if m != nil {
		return m.ResetMcu
	}
	return 0
}

func (m *WlstSlu_6F00_ResetMark) GetResetComm() int32 {
	if m != nil {
		return m.ResetComm
	}
	return 0
}

func (m *WlstSlu_6F00_ResetMark) GetInitMcuHardware() int32 {
	if m != nil {
		return m.InitMcuHardware
	}
	return 0
}

func (m *WlstSlu_6F00_ResetMark) GetInitRam() int32 {
	if m != nil {
		return m.InitRam
	}
	return 0
}

func (m *WlstSlu_6F00_ResetMark) GetZeroEerom() int32 {
	if m != nil {
		return m.ZeroEerom
	}
	return 0
}

func (m *WlstSlu_6F00_ResetMark) GetZeroCount() int32 {
	if m != nil {
		return m.ZeroCount
	}
	return 0
}

func init() {
	proto.RegisterType((*WlstSluF400)(nil), "wlst.pb2.Wlst_slu_f400")
	proto.RegisterType((*WlstSlu_3900)(nil), "wlst.pb2.Wlst_slu_3900")
	proto.RegisterType((*WlstSlu_3900_ModelInfo)(nil), "wlst.pb2.Wlst_slu_3900.Model_info")
	proto.RegisterType((*WlstSlu_3900_LightData)(nil), "wlst.pb2.Wlst_slu_3900.Light_data")
	proto.RegisterType((*WlstSlu_3900_LightStatus)(nil), "wlst.pb2.Wlst_slu_3900.Light_status")
	proto.RegisterType((*WlstSlu_3900_SluitemStatus)(nil), "wlst.pb2.Wlst_slu_3900.Sluitem_status")
	proto.RegisterType((*WlstSlu_3900_TimeFault)(nil), "wlst.pb2.Wlst_slu_3900.Time_fault")
	proto.RegisterType((*WlstSlu_3900_SluitemPara)(nil), "wlst.pb2.Wlst_slu_3900.Sluitem_para")
	proto.RegisterType((*WlstSlu_7800)(nil), "wlst.pb2.Wlst_slu_7800")
	proto.RegisterType((*WlstSluF800)(nil), "wlst.pb2.Wlst_slu_f800")
	proto.RegisterType((*WlstSluF800_View0X20)(nil), "wlst.pb2.Wlst_slu_f800.View0x20")
	proto.RegisterType((*WlstSluF800_View0X21)(nil), "wlst.pb2.Wlst_slu_f800.View0x21")
	proto.RegisterType((*WlstSluF800_View0X23)(nil), "wlst.pb2.Wlst_slu_f800.View0x23")
	proto.RegisterType((*WlstSluEc00)(nil), "wlst.pb2.Wlst_slu_ec00")
	proto.RegisterType((*WlstSlu_6B00)(nil), "wlst.pb2.Wlst_slu_6b00")
	proto.RegisterType((*WlstSlu_6B00_CmdPwm)(nil), "wlst.pb2.Wlst_slu_6b00.Cmd_pwm")
	proto.RegisterType((*WlstSlu_6C00)(nil), "wlst.pb2.Wlst_slu_6c00")
	proto.RegisterType((*WlstSluD000)(nil), "wlst.pb2.Wlst_slu_d000")
	proto.RegisterType((*WlstSlu_2800)(nil), "wlst.pb2.Wlst_slu_2800")
	proto.RegisterType((*WlstSlu_2400)(nil), "wlst.pb2.Wlst_slu_2400")
	proto.RegisterType((*WlstSlu_6E00)(nil), "wlst.pb2.Wlst_slu_6e00")
	proto.RegisterType((*WlstSlu_3000)(nil), "wlst.pb2.Wlst_slu_3000")
	proto.RegisterType((*WlstSlu_9A00)(nil), "wlst.pb2.Wlst_slu_9a00")
	proto.RegisterType((*WlstSluCd00)(nil), "wlst.pb2.Wlst_slu_cd00")
	proto.RegisterType((*WlstSlu_1C00)(nil), "wlst.pb2.Wlst_slu_1c00")
	proto.RegisterType((*WlstSlu_1D00)(nil), "wlst.pb2.Wlst_slu_1d00")
	proto.RegisterType((*WlstSlu_1D00_DataMark)(nil), "wlst.pb2.Wlst_slu_1d00.Data_mark")
	proto.RegisterType((*WlstSlu_9D00)(nil), "wlst.pb2.Wlst_slu_9d00")
	proto.RegisterType((*WlstSlu_9D00_SetMark)(nil), "wlst.pb2.Wlst_slu_9d00.Set_mark")
	proto.RegisterType((*WlstSlu_9D00_SluitemData)(nil), "wlst.pb2.Wlst_slu_9d00.Sluitem_data")
	proto.RegisterType((*WlstSlu_9D00_SluitemDataNew)(nil), "wlst.pb2.Wlst_slu_9d00.Sluitem_data_new")
	proto.RegisterType((*WlstSlu_9D00_SluitemPara)(nil), "wlst.pb2.Wlst_slu_9d00.Sluitem_para")
	proto.RegisterType((*WlstSlu_9D00_SluitemVer)(nil), "wlst.pb2.Wlst_slu_9d00.Sluitem_ver")
	proto.RegisterType((*WlstSlu_9D00_SluitemSunriseset)(nil), "wlst.pb2.Wlst_slu_9d00.Sluitem_sunriseset")
	proto.RegisterType((*WlstSlu_9D00_SluitemRuntime)(nil), "wlst.pb2.Wlst_slu_9d00.Sluitem_runtime")
	proto.RegisterType((*WlstSluF000)(nil), "wlst.pb2.Wlst_slu_f000")
	proto.RegisterType((*WlstSluF000_ResetMark)(nil), "wlst.pb2.Wlst_slu_f000.Reset_mark")
	proto.RegisterType((*WlstSluF100)(nil), "wlst.pb2.Wlst_slu_f100")
	proto.RegisterType((*WlstSluF100_TimerStatus)(nil), "wlst.pb2.Wlst_slu_f100.Timer_status")
	proto.RegisterType((*WlstSluF200)(nil), "wlst.pb2.Wlst_slu_f200")
	proto.RegisterType((*WlstSluF200_DataMark)(nil), "wlst.pb2.Wlst_slu_f200.Data_mark")
	proto.RegisterType((*WlstSluF200_ControllerData)(nil), "wlst.pb2.Wlst_slu_f200.Controller_data")
	proto.RegisterType((*WlstSlu_7300)(nil), "wlst.pb2.Wlst_slu_7300")
	proto.RegisterType((*WlstSlu_7300_ConcentratorData)(nil), "wlst.pb2.Wlst_slu_7300.Concentrator_data")
	proto.RegisterType((*WlstSlu_7300_ConcentratorData_RunStatus)(nil), "wlst.pb2.Wlst_slu_7300.Concentrator_data.Run_status")
	proto.RegisterType((*WlstSlu_7300_ConcentratorData_ArgsStatus)(nil), "wlst.pb2.Wlst_slu_7300.Concentrator_data.Args_status")
	proto.RegisterType((*WlstSlu_7300_ConcentratorData_HardwareStatus)(nil), "wlst.pb2.Wlst_slu_7300.Concentrator_data.Hardware_status")
	proto.RegisterType((*WlstSlu_7300_BaseSluitemData)(nil), "wlst.pb2.Wlst_slu_7300.Base_sluitem_data")
	proto.RegisterType((*WlstSlu_7300_BaseSluitemData_SluitemStatus)(nil), "wlst.pb2.Wlst_slu_7300.Base_sluitem_data.Sluitem_status")
	proto.RegisterType((*WlstSlu_7300_BaseSluitemData_LightStatus)(nil), "wlst.pb2.Wlst_slu_7300.Base_sluitem_data.Light_status")
	proto.RegisterType((*WlstSlu_7300_BaseSluitemData_LightData)(nil), "wlst.pb2.Wlst_slu_7300.Base_sluitem_data.Light_data")
	proto.RegisterType((*WlstSlu_7300_UnknowSluitem)(nil), "wlst.pb2.Wlst_slu_7300.Unknow_sluitem")
	proto.RegisterType((*WlstSlu_7300_AssistSluitemData)(nil), "wlst.pb2.Wlst_slu_7300.Assist_sluitem_data")
	proto.RegisterType((*WlstSlu_7300_AssistSluitemData_LightData)(nil), "wlst.pb2.Wlst_slu_7300.Assist_sluitem_data.Light_data")
	proto.RegisterType((*WlstSlu_7300_SluitemPhyinfo)(nil), "wlst.pb2.Wlst_slu_7300.Sluitem_phyinfo")
	proto.RegisterType((*WlstSlu_7300_ModelInfo)(nil), "wlst.pb2.Wlst_slu_7300.Model_info")
	proto.RegisterType((*WlstSluF900)(nil), "wlst.pb2.Wlst_slu_f900")
	proto.RegisterType((*WlstSluF900_SluitemStatusAlarm)(nil), "wlst.pb2.Wlst_slu_f900.Sluitem_status_alarm")
	proto.RegisterType((*WlstSluF900_BluetoothApply)(nil), "wlst.pb2.Wlst_slu_f900.Bluetooth_apply")
	proto.RegisterType((*WlstSluF900_SetDomainResult)(nil), "wlst.pb2.Wlst_slu_f900.Set_domain_result")
	proto.RegisterType((*WlstSlu_7B00)(nil), "wlst.pb2.Wlst_slu_7b00")
	proto.RegisterType((*WlstSlu_7B00_ReadConcentratorOperationData)(nil), "wlst.pb2.Wlst_slu_7b00.Read_concentrator_operation_data")
	proto.RegisterType((*WlstSlu_7B00_ReadConcentratorOperationData_CmdOperation)(nil), "wlst.pb2.Wlst_slu_7b00.Read_concentrator_operation_data.Cmd_operation")
	proto.RegisterType((*WlstSluFe00)(nil), "wlst.pb2.Wlst_slu_fe00")
	proto.RegisterType((*WlstSlu_7400)(nil), "wlst.pb2.Wlst_slu_7400")
	proto.RegisterType((*WlstSlu_7400_CmdPwm)(nil), "wlst.pb2.Wlst_slu_7400.Cmd_pwm")
	proto.RegisterType((*WlstSlu_7C00)(nil), "wlst.pb2.Wlst_slu_7c00")
	proto.RegisterType((*WlstSlu_7C00_ConcentratorOperationData)(nil), "wlst.pb2.Wlst_slu_7c00.Concentrator_operation_data")
	proto.RegisterType((*WlstSlu_7C00_ConcentratorOperationData_CmdPwm)(nil), "wlst.pb2.Wlst_slu_7c00.Concentrator_operation_data.Cmd_pwm")
	proto.RegisterType((*WlstSlu_7C00_ConcentratorOperationData_Cmd_485)(nil), "wlst.pb2.Wlst_slu_7c00.Concentrator_operation_data.Cmd_485")
	proto.RegisterType((*WlstSlu_6F00)(nil), "wlst.pb2.Wlst_slu_6f00")
	proto.RegisterType((*WlstSlu_6F00_ResetMark)(nil), "wlst.pb2.Wlst_slu_6f00.Reset_mark")
}

func init() { proto.RegisterFile("protocol_slu.proto", fileDescriptor_ab6bd86311f0b5fd) }

var fileDescriptor_ab6bd86311f0b5fd = []byte{
	// 5207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5c, 0xcd, 0x8f, 0x24, 0x47,
	0x56, 0x57, 0x55, 0x75, 0x7d, 0x45, 0x75, 0x75, 0x75, 0xa7, 0xdb, 0xe3, 0x72, 0xcd, 0x8e, 0x66,
	0xa6, 0x1a, 0x7b, 0xc6, 0xde, 0xdd, 0xa6, 0xa7, 0xbb, 0xc7, 0x1e, 0xcb, 0x5a, 0x44, 0xbb, 0xed,
	0xb1, 0x8d, 0x66, 0xdc, 0xa3, 0xec, 0xf1, 0xac, 0xbc, 0x08, 0x52, 0xd1, 0x99, 0x51, 0xdd, 0xb9,
	0x9d, 0x95, 0x59, 0x8e, 0xcc, 0xec, 0x9e, 0x59, 0x84, 0xc4, 0x01, 0x0e, 0x5c, 0x38, 0xb0, 0x0b,
	0xb7, 0x05, 0x71, 0xe2, 0xc0, 0x85, 0x95, 0x40, 0x48, 0x70, 0x40, 0xe6, 0xb2, 0x17, 0xe0, 0xb2,
	0x17, 0x24, 0xfe, 0x04, 0x84, 0x84, 0xe0, 0x0f, 0x00, 0xbd, 0xf7, 0x22, 0x32, 0x23, 0xb3, 0x3e,
	0xba, 0xc7, 0x1e, 0x9b, 0x03, 0xdc, 0x2a, 0x7e, 0xf1, 0x22, 0x22, 0x23, 0xe2, 0xc5, 0x8b, 0xf7,
	0x15, 0xc5, 0xac, 0x89, 0x8c, 0x92, 0xc8, 0x8d, 0x02, 0x27, 0x0e, 0xd2, 0x4d, 0x2c, 0x58, 0xad,
	0xf3, 0x20, 0x4e, 0x36, 0x27, 0x47, 0xdb, 0xc3, 0xdf, 0x62, 0xdd, 0xef, 0x07, 0x71, 0x02, 0x75,
	0xce, 0x68, 0x77, 0x6b, 0xcb, 0x7a, 0x85, 0x35, 0xdd, 0xb1, 0xe7, 0xf8, 0xde, 0xd3, 0x7e, 0xe5,
	0x46, 0xe5, 0x76, 0xdd, 0x6e, 0xb8, 0x63, 0xef, 0x63, 0xef, 0xa9, 0x75, 0x85, 0x35, 0xe2, 0x84,
	0x27, 0x69, 0xdc, 0xaf, 0x12, 0x4e, 0x25, 0xc0, 0xa5, 0x18, 0x73, 0x79, 0xda, 0xaf, 0x11, 0x4e,
	0x25, 0xeb, 0x26, 0x5b, 0x8e, 0x83, 0xd4, 0x4f, 0xc4, 0xd8, 0xe1, 0x9e, 0x27, 0xfb, 0x4b, 0x58,
	0xdb, 0x51, 0xd8, 0x9e, 0xe7, 0xc9, 0xe1, 0xdf, 0xf7, 0x8c, 0xd1, 0x77, 0xde, 0x59, 0x34, 0xfa,
	0x1e, 0x63, 0xe3, 0xc8, 0x13, 0x81, 0xe3, 0x87, 0xa3, 0x08, 0xbf, 0xa0, 0xb3, 0x3d, 0xdc, 0xd4,
	0xd3, 0xd8, 0x2c, 0xf4, 0xb2, 0xf9, 0x30, 0xa3, 0xb4, 0xdb, 0xd8, 0xea, 0xe3, 0x70, 0x14, 0x41,
	0x17, 0x81, 0x7f, 0x7c, 0x92, 0x38, 0x1e, 0x4f, 0x78, 0xbf, 0x76, 0xa3, 0xb6, 0xa8, 0x8b, 0x07,
	0x19, 0xa5, 0xdd, 0xc6, 0x56, 0xef, 0xf3, 0x84, 0x5b, 0xb7, 0x58, 0x2f, 0x10, 0xfc, 0x94, 0x1f,
	0x0b, 0xc7, 0x4d, 0xa5, 0x14, 0x61, 0x82, 0xd3, 0xaa, 0xd8, 0x2b, 0x0a, 0xde, 0x27, 0xd4, 0x7a,
	0xc8, 0x56, 0xf4, 0xe4, 0xd5, 0xa2, 0xd5, 0xf1, 0x93, 0x5f, 0x9f, 0x37, 0xde, 0x61, 0x81, 0xda,
	0xee, 0xaa, 0xd6, 0x87, 0xb4, 0xc6, 0x7b, 0x8c, 0x25, 0xfe, 0x58, 0x38, 0x23, 0x9e, 0x06, 0x49,
	0xbf, 0xb1, 0x78, 0xf6, 0x8f, 0x33, 0x4a, 0xbb, 0x0d, 0xad, 0xee, 0xc3, 0x4f, 0xeb, 0x3a, 0xeb,
	0x48, 0x11, 0x8b, 0xc4, 0x71, 0xa3, 0x34, 0x4c, 0xfa, 0x4d, 0x5c, 0x5d, 0x86, 0xd0, 0x3e, 0x20,
	0xd6, 0x55, 0xd6, 0xf6, 0x78, 0x22, 0x1c, 0x68, 0xd2, 0x6f, 0xdd, 0xa8, 0xdc, 0xae, 0xd9, 0x2d,
	0x00, 0xa0, 0x3b, 0xeb, 0xc3, 0x7c, 0x33, 0x27, 0x5c, 0xf2, 0x7e, 0x1b, 0x3f, 0xe1, 0x97, 0x2e,
	0x9a, 0x0d, 0xd0, 0x66, 0x5b, 0xfe, 0x88, 0x4b, 0x6e, 0x59, 0x6c, 0x49, 0xc6, 0x72, 0xd2, 0x67,
	0x38, 0x00, 0xfe, 0x26, 0x2c, 0xf6, 0xfb, 0x1d, 0x8d, 0xc5, 0xbe, 0xb5, 0xca, 0x6a, 0x71, 0x28,
	0xfb, 0xcb, 0x08, 0xc1, 0x4f, 0x40, 0x26, 0xae, 0xdf, 0xef, 0x12, 0x32, 0x71, 0x7d, 0xd5, 0xd7,
	0xe7, 0xfd, 0x95, 0xac, 0xaf, 0xcf, 0xad, 0x3e, 0x6b, 0x26, 0x4f, 0x27, 0xd1, 0xb9, 0x90, 0xfd,
	0x1e, 0xc2, 0xba, 0x08, 0x7c, 0x2a, 0xb8, 0x1c, 0xb9, 0x61, 0x7f, 0x15, 0x2b, 0x54, 0x09, 0xfa,
	0x15, 0x6e, 0xd0, 0x5f, 0xc3, 0x05, 0x81, 0x9f, 0x80, 0xb8, 0xf1, 0xe7, 0x7d, 0x8b, 0x10, 0x37,
	0xfe, 0xdc, 0x5a, 0x67, 0x75, 0x29, 0xe2, 0x28, 0xec, 0xbf, 0x84, 0x18, 0x15, 0x08, 0x4d, 0xe4,
	0xb3, 0xfe, 0xba, 0x46, 0x13, 0xf9, 0x0c, 0xbe, 0x20, 0x4e, 0x43, 0xe9, 0xc7, 0xa2, 0xff, 0x32,
	0xe2, 0xba, 0x88, 0x27, 0x28, 0x0d, 0x63, 0x91, 0xf4, 0xaf, 0xa8, 0x13, 0x84, 0xa5, 0xc1, 0x7f,
	0x56, 0x18, 0xcb, 0x59, 0xd6, 0x3c, 0x38, 0x41, 0x14, 0x4d, 0xd4, 0x41, 0xd0, 0xab, 0xf8, 0x20,
	0x8a, 0x26, 0x40, 0x82, 0x93, 0x72, 0x62, 0x7e, 0xe6, 0x87, 0xc7, 0xea, 0x44, 0x76, 0x10, 0x3b,
	0x44, 0x08, 0xf6, 0xfb, 0x84, 0xc7, 0x8e, 0xe2, 0x4b, 0x75, 0x36, 0xd9, 0x09, 0x8f, 0x1f, 0x10,
	0x02, 0xbc, 0x0c, 0x04, 0x89, 0x18, 0x4f, 0x84, 0xe4, 0x49, 0x2a, 0x85, 0x3a, 0xa2, 0x2b, 0x27,
	0x3c, 0x7e, 0x9c, 0xa3, 0xc0, 0x18, 0x48, 0xe8, 0x8f, 0x85, 0x44, 0x36, 0xae, 0xdb, 0x2d, 0x20,
	0x81, 0x32, 0xac, 0x01, 0x9e, 0x30, 0x64, 0xca, 0xba, 0x4d, 0x05, 0x73, 0x0a, 0xc9, 0xb3, 0x89,
	0x40, 0x6e, 0x6b, 0x67, 0x53, 0x78, 0xfc, 0x6c, 0x22, 0x06, 0x3f, 0xab, 0x31, 0x96, 0x1f, 0x32,
	0x58, 0xb5, 0xb3, 0x28, 0x48, 0xe0, 0x53, 0x2b, 0x78, 0xa2, 0x74, 0x11, 0x6a, 0xf4, 0x59, 0xab,
	0x52, 0x8d, 0x2a, 0xc2, 0x28, 0xdc, 0x4d, 0xfc, 0x33, 0xe1, 0xd0, 0x86, 0xd7, 0xb0, 0xba, 0x43,
	0xd8, 0x23, 0xdc, 0xf4, 0xd7, 0xd8, 0x8a, 0x14, 0x05, 0x22, 0x3a, 0xaf, 0x5d, 0x8d, 0x66, 0x64,
	0x7c, 0x32, 0xe1, 0xd0, 0xab, 0x22, 0xab, 0x13, 0x99, 0x46, 0x89, 0xec, 0x06, 0xeb, 0x88, 0x40,
	0xb8, 0x89, 0xf4, 0x5d, 0x3f, 0x79, 0x86, 0x53, 0xae, 0xd8, 0x26, 0x04, 0xab, 0xae, 0x46, 0xc3,
	0x63, 0xd4, 0x44, 0x0a, 0x46, 0x90, 0x3e, 0x48, 0x24, 0x84, 0x94, 0x58, 0x68, 0x2d, 0x3e, 0x48,
	0x0f, 0x0c, 0x5a, 0xbb, 0x83, 0x2d, 0x95, 0x48, 0xb8, 0xce, 0x68, 0xbb, 0x9d, 0x40, 0x9c, 0x89,
	0x00, 0x0f, 0x64, 0xdd, 0x66, 0x08, 0x3d, 0x00, 0xc4, 0xda, 0x62, 0xeb, 0xd9, 0x91, 0x45, 0xc2,
	0x24, 0x95, 0x61, 0x14, 0xe2, 0xc9, 0xab, 0xdb, 0x96, 0x3e, 0x94, 0x50, 0xf5, 0x18, 0x6b, 0x50,
	0x44, 0xf0, 0x44, 0x78, 0x6a, 0x09, 0x3a, 0x4a, 0x44, 0x00, 0x84, 0x64, 0x83, 0xdf, 0x60, 0xcb,
	0xe6, 0x07, 0xc1, 0xd6, 0x68, 0xfe, 0x22, 0x26, 0xd5, 0x45, 0x60, 0x0b, 0x92, 0x55, 0xc4, 0x99,
	0x54, 0xb0, 0xae, 0x31, 0x76, 0x1e, 0xc9, 0x53, 0x3f, 0x3c, 0x76, 0xa2, 0x50, 0xb1, 0x64, 0x5b,
	0x21, 0x07, 0xe1, 0xe0, 0x31, 0x5b, 0x29, 0x8a, 0x41, 0xf8, 0xa2, 0x51, 0xc0, 0xe3, 0x13, 0x25,
	0xf8, 0x68, 0x10, 0x86, 0x10, 0x49, 0xb5, 0x9b, 0x6c, 0x59, 0x84, 0xfc, 0x28, 0x10, 0x0e, 0x0f,
	0xb8, 0x1c, 0xeb, 0x83, 0x40, 0xd8, 0x1e, 0x40, 0x83, 0xdf, 0x66, 0x2c, 0x97, 0x88, 0xd0, 0xa3,
	0x1b, 0x44, 0xee, 0x69, 0xb1, 0x47, 0x84, 0xa8, 0xc7, 0xd7, 0x59, 0x8f, 0x08, 0xa2, 0x34, 0x71,
	0xcc, 0x39, 0x74, 0x11, 0x3e, 0x48, 0x93, 0x19, 0x74, 0x34, 0x78, 0xad, 0x48, 0x47, 0xc3, 0xff,
	0x6b, 0x85, 0x2d, 0x9b, 0xe2, 0xd0, 0xfa, 0x16, 0x6b, 0x07, 0x51, 0x78, 0xec, 0x27, 0xa9, 0xa7,
	0x79, 0x3d, 0x07, 0xac, 0x01, 0x6b, 0x05, 0x3c, 0xa1, 0x4a, 0x62, 0xf7, 0xac, 0x6c, 0xdd, 0x66,
	0xab, 0x70, 0x10, 0x0b, 0x13, 0xae, 0x65, 0x47, 0xf6, 0x83, 0x7c, 0xce, 0xb0, 0xd0, 0x7e, 0xec,
	0xc8, 0x34, 0x0c, 0x41, 0x3a, 0xd0, 0xb1, 0x6e, 0xfb, 0xb1, 0x4d, 0x00, 0xb2, 0x3b, 0xd0, 0x39,
	0x7e, 0x98, 0x08, 0x79, 0xc6, 0x03, 0x75, 0xac, 0xbb, 0x88, 0x7e, 0xac, 0x40, 0x58, 0xdc, 0x74,
	0x12, 0xf8, 0xe1, 0xa9, 0x23, 0xc5, 0x24, 0x78, 0xa6, 0x8e, 0x78, 0x87, 0x30, 0x1b, 0xa0, 0xe1,
	0xdf, 0x55, 0x8c, 0x1b, 0xfc, 0xed, 0x7b, 0x8b, 0x6e, 0xf0, 0x6b, 0x8c, 0x89, 0x33, 0x38, 0x60,
	0x28, 0x11, 0x68, 0x4d, 0xdb, 0x88, 0x80, 0x3c, 0x80, 0x6a, 0x37, 0xe0, 0x71, 0x4c, 0xd5, 0x8a,
	0x37, 0x10, 0xc1, 0xea, 0x9b, 0x6c, 0x59, 0x0a, 0x37, 0x92, 0x9e, 0xba, 0xbf, 0x94, 0x36, 0x41,
	0x18, 0x5d, 0x60, 0xaf, 0xb2, 0x96, 0x87, 0xac, 0x29, 0x13, 0x9c, 0x4f, 0xcd, 0x6e, 0x7a, 0x70,
	0x5a, 0x64, 0x62, 0xbd, 0xcc, 0x1a, 0x5e, 0xe2, 0x88, 0xd0, 0xc3, 0x39, 0xd4, 0xec, 0xba, 0x97,
	0x7c, 0x10, 0x7a, 0xc3, 0xff, 0x60, 0xa6, 0xf6, 0xf3, 0x35, 0x7e, 0xfd, 0x35, 0xc6, 0x40, 0xca,
	0x39, 0x49, 0x94, 0xf0, 0x40, 0xef, 0x07, 0x20, 0x8f, 0x01, 0xc0, 0x2f, 0x87, 0x6a, 0x18, 0x96,
	0x76, 0xa2, 0x09, 0x65, 0x18, 0xb7, 0x3c, 0xef, 0xc6, 0xf4, 0xbc, 0xbf, 0xc7, 0xda, 0x67, 0xbe,
	0x38, 0x77, 0xb6, 0x9e, 0x6e, 0x6f, 0xf5, 0x9b, 0xa8, 0xd6, 0xdc, 0x98, 0x21, 0x4f, 0x60, 0x7e,
	0x9b, 0x4f, 0x7c, 0x71, 0x0e, 0x74, 0x76, 0xeb, 0x4c, 0xfd, 0x32, 0x9b, 0xdf, 0xe9, 0xb7, 0x2e,
	0xd5, 0xfc, 0x4e, 0xd6, 0xfc, 0x8e, 0xd9, 0x7c, 0xbb, 0xdf, 0x7e, 0xce, 0xd1, 0xb7, 0xcd, 0xe6,
	0x3b, 0x7d, 0x76, 0xa9, 0xe6, 0x3b, 0x59, 0xf3, 0x1d, 0xb3, 0xf9, 0x6e, 0xbf, 0xf3, 0x9c, 0xa3,
	0xef, 0x9a, 0xcd, 0xef, 0xf6, 0x97, 0x9f, 0xb3, 0xf9, 0xdd, 0xc1, 0x3e, 0x6b, 0x69, 0x14, 0xd5,
	0xa7, 0xc4, 0x39, 0xe1, 0x93, 0x89, 0x08, 0x91, 0x77, 0x40, 0x7d, 0x4a, 0x3e, 0xc2, 0xb2, 0x35,
	0x30, 0x74, 0xe7, 0xda, 0xed, 0xfa, 0x7b, 0xd5, 0xd5, 0x8a, 0xd6, 0x9f, 0x07, 0xbf, 0xa8, 0x64,
	0xbd, 0xdc, 0x59, 0xdc, 0xcb, 0x6b, 0x6c, 0x25, 0xc2, 0x5b, 0xd9, 0x8f, 0x42, 0x93, 0x0f, 0xbb,
	0x19, 0x8a, 0xcc, 0x76, 0x8b, 0xf5, 0x72, 0xb2, 0x48, 0x7a, 0xea, 0x66, 0xac, 0xdb, 0x79, 0xeb,
	0x03, 0x40, 0x61, 0x30, 0xd0, 0xcc, 0xa9, 0x2b, 0x62, 0xca, 0x16, 0x00, 0xd8, 0x8b, 0xc5, 0x96,
	0x50, 0x6d, 0x27, 0x7e, 0xc4, 0xdf, 0xd6, 0x1b, 0x6c, 0x35, 0xef, 0x39, 0x8e, 0x52, 0xe9, 0x0a,
	0xc5, 0x90, 0xf9, 0x88, 0x87, 0x08, 0x0f, 0xfe, 0x68, 0x29, 0x9b, 0xd5, 0xce, 0xe2, 0x59, 0xe9,
	0x81, 0xaa, 0xc6, 0x40, 0x37, 0x19, 0x23, 0x01, 0xa5, 0x8e, 0x93, 0x5e, 0xb3, 0x36, 0xa2, 0xf8,
	0x7d, 0x6f, 0x4c, 0x69, 0xd8, 0x4b, 0x19, 0x59, 0x49, 0x7b, 0xbe, 0xc5, 0x7a, 0x9a, 0x54, 0xeb,
	0x18, 0x74, 0xbd, 0xeb, 0x1e, 0x9e, 0x28, 0x55, 0xe3, 0xdb, 0x39, 0xa1, 0x56, 0x39, 0x1a, 0x37,
	0x6a, 0xb7, 0x2b, 0xd8, 0xa9, 0x26, 0xd6, 0x2a, 0xfe, 0x6e, 0x7e, 0xbf, 0x16, 0x14, 0x8c, 0x66,
	0xd6, 0x42, 0xdf, 0xb1, 0x7b, 0x86, 0xa6, 0x71, 0x8f, 0x5d, 0xd1, 0xad, 0x4a, 0x8a, 0x49, 0x2b,
	0x6b, 0xa7, 0xfb, 0xb5, 0x0b, 0x3a, 0xca, 0x26, 0x7b, 0x49, 0xb7, 0x1c, 0xf3, 0xa7, 0xd9, 0x4c,
	0xda, 0x38, 0x93, 0x35, 0x55, 0xf5, 0x90, 0x3f, 0xd5, 0x93, 0xd9, 0x2e, 0xd2, 0xeb, 0x09, 0xb1,
	0x6c, 0x18, 0xa3, 0x8d, 0x9e, 0xd3, 0x4e, 0xde, 0xc6, 0x54, 0x74, 0x3a, 0x53, 0x53, 0xfa, 0xc0,
	0xd0, 0x79, 0x8c, 0x55, 0x9b, 0x9c, 0x3c, 0x43, 0xfb, 0x6c, 0x39, 0xdb, 0x0a, 0xbd, 0x6a, 0x8f,
	0xa8, 0x66, 0xf8, 0x67, 0xe6, 0x85, 0x21, 0xdc, 0x45, 0x22, 0xf7, 0x2a, 0x6b, 0xa3, 0x30, 0xc7,
	0x2a, 0xe2, 0x8e, 0x16, 0x02, 0x4a, 0x1e, 0x4b, 0xc1, 0xb5, 0x54, 0x54, 0x02, 0x17, 0x10, 0x92,
	0x89, 0xef, 0xb2, 0xee, 0xb9, 0x1e, 0xe5, 0xad, 0xa3, 0xad, 0x2d, 0x64, 0x8e, 0xce, 0xf6, 0x2b,
	0x33, 0x0e, 0x37, 0x54, 0xdb, 0x1d, 0xc0, 0x0f, 0x83, 0x14, 0x0a, 0xc3, 0x7f, 0xaf, 0x19, 0xdf,
	0x08, 0xc8, 0xfc, 0x6f, 0x7c, 0x85, 0x35, 0xc1, 0xa6, 0xca, 0xbf, 0xb0, 0x11, 0x0b, 0xfc, 0x3e,
	0xf3, 0x32, 0xaa, 0xcd, 0xbb, 0x8c, 0x96, 0x8c, 0xcb, 0x68, 0xc6, 0xe9, 0xae, 0x5f, 0xf2, 0x74,
	0x37, 0x66, 0x9e, 0xee, 0xd7, 0x59, 0x0f, 0x55, 0x76, 0x27, 0x92, 0x4e, 0x34, 0x1a, 0x81, 0xd9,
	0x41, 0x46, 0x5f, 0x17, 0xe1, 0x03, 0x79, 0x80, 0x60, 0x51, 0x0a, 0xb4, 0x4a, 0x52, 0xa0, 0xcf,
	0xea, 0xf0, 0x3b, 0x46, 0xc9, 0x4e, 0x3b, 0x4a, 0x00, 0x4c, 0x10, 0x96, 0x04, 0x5b, 0x91, 0x4a,
	0x09, 0x4b, 0x84, 0x8d, 0xae, 0xd2, 0x6a, 0x8d, 0xfd, 0xa7, 0xc8, 0x39, 0x4a, 0xdc, 0xb9, 0x63,
	0xef, 0xa1, 0xff, 0xd4, 0xba, 0x47, 0x95, 0x93, 0xf3, 0x31, 0x1a, 0x77, 0x9d, 0xed, 0xeb, 0x73,
	0xf6, 0x64, 0x73, 0x9f, 0xc8, 0xb0, 0xe5, 0xa3, 0xf3, 0xf1, 0xe0, 0xfb, 0xac, 0xa9, 0x20, 0x6b,
	0xc8, 0x3a, 0x60, 0x1a, 0x39, 0x2e, 0x0f, 0x1d, 0x2f, 0xea, 0x57, 0x72, 0x01, 0x01, 0xf0, 0x3e,
	0x0f, 0xdf, 0x8f, 0x40, 0x05, 0x8d, 0x5d, 0x1e, 0x68, 0x21, 0x49, 0x05, 0xb4, 0x19, 0x79, 0xa2,
	0xaf, 0x68, 0xfc, 0x3d, 0xf4, 0xcc, 0xed, 0xfe, 0xba, 0x58, 0x72, 0x78, 0xd3, 0x18, 0xc5, 0xdb,
	0xda, 0xda, 0x02, 0x33, 0xf3, 0x4c, 0x48, 0x1c, 0xa1, 0x6d, 0xc3, 0xcf, 0xe1, 0xf7, 0x0c, 0x92,
	0x6d, 0x50, 0x47, 0x72, 0x9f, 0x4b, 0xa5, 0xe0, 0x73, 0x59, 0x67, 0x75, 0x53, 0xdf, 0xa5, 0xc2,
	0xf0, 0x57, 0xcd, 0xe6, 0xca, 0x97, 0xe3, 0x45, 0xce, 0x28, 0xe0, 0xc7, 0xba, 0xbd, 0x17, 0xdd,
	0x0f, 0xf8, 0xf1, 0x3c, 0x5f, 0xce, 0xf0, 0x17, 0xe6, 0xe9, 0x7c, 0x4b, 0x2c, 0xea, 0x02, 0x4c,
	0x50, 0x9e, 0xc8, 0x28, 0x50, 0x4c, 0xae, 0x4d, 0x50, 0xc4, 0x88, 0xd1, 0x6f, 0xb1, 0x9e, 0x22,
	0xc9, 0xf4, 0x4c, 0x75, 0x11, 0x11, 0x6c, 0x2a, 0x9a, 0x8a, 0x90, 0x18, 0x7a, 0xc9, 0xec, 0x8b,
	0xb8, 0x39, 0x27, 0xa1, 0xe5, 0xad, 0x9b, 0x24, 0x74, 0xe6, 0x8d, 0x5d, 0x6b, 0x98, 0xbb, 0x36,
	0xfc, 0xc2, 0x9c, 0xd5, 0x0e, 0x2c, 0xfd, 0x3a, 0xab, 0xbb, 0x89, 0x0c, 0xf4, 0xb2, 0x52, 0x01,
	0x6c, 0x03, 0x2f, 0x1a, 0x73, 0x3f, 0x74, 0x42, 0x3e, 0xd6, 0x7c, 0xc3, 0x08, 0xfa, 0x84, 0x8f,
	0x05, 0x88, 0xe0, 0x74, 0x32, 0x11, 0x52, 0x0b, 0x5f, 0x27, 0xf0, 0xc7, 0xbe, 0xde, 0xea, 0x35,
	0xac, 0x52, 0xd2, 0xf7, 0x01, 0x54, 0x00, 0x7d, 0x80, 0xa6, 0x57, 0x91, 0x9e, 0xa6, 0xb7, 0x86,
	0x55, 0x05, 0xfa, 0x57, 0x59, 0x6b, 0xcc, 0x5d, 0x27, 0xbb, 0x77, 0x6b, 0x76, 0x73, 0xcc, 0x5d,
	0x74, 0x95, 0xed, 0x19, 0x53, 0x78, 0x87, 0x6f, 0x6d, 0x59, 0x5b, 0xcc, 0x32, 0x3e, 0xd6, 0xc9,
	0xd8, 0x44, 0x9f, 0x84, 0xd5, 0xfc, 0xbb, 0xe9, 0x1a, 0x1c, 0xfe, 0xfe, 0x92, 0xd1, 0x87, 0xeb,
	0x15, 0xf9, 0xbc, 0x5b, 0xe0, 0xf3, 0xbb, 0xec, 0x8a, 0x1b, 0x8d, 0xc7, 0x69, 0xe8, 0xbb, 0x24,
	0x68, 0x46, 0xdc, 0x0f, 0x52, 0x29, 0xf4, 0x82, 0xbd, 0x5c, 0xa8, 0xbd, 0xaf, 0x2a, 0x73, 0xb7,
	0xc4, 0x88, 0xbb, 0x49, 0x24, 0x0b, 0x6e, 0x89, 0xfb, 0x08, 0x59, 0x3b, 0xac, 0xd8, 0xd6, 0x71,
	0x4f, 0x78, 0x18, 0x0a, 0xcd, 0x19, 0xeb, 0x85, 0xca, 0x7d, 0xaa, 0xb3, 0x36, 0x58, 0x57, 0x5d,
	0x5f, 0x8e, 0xe4, 0xe1, 0xb1, 0x50, 0x46, 0xfc, 0xb2, 0x02, 0x6d, 0xc0, 0x72, 0x83, 0x98, 0x48,
	0xea, 0x86, 0x41, 0x4c, 0x04, 0x20, 0xe8, 0xd2, 0x24, 0x72, 0xc6, 0x91, 0xa7, 0xd5, 0x96, 0x16,
	0x00, 0x0f, 0x23, 0x4f, 0x14, 0xad, 0xb2, 0xe6, 0x22, 0xab, 0xac, 0x55, 0xb2, 0xca, 0xb6, 0xd8,
	0xba, 0xcb, 0xa5, 0xf4, 0x61, 0xe4, 0x28, 0x4d, 0xc0, 0xb8, 0xc5, 0x11, 0xc8, 0x22, 0xb7, 0x54,
	0x9d, 0x4d, 0x55, 0x38, 0xd6, 0x06, 0xeb, 0x1e, 0x05, 0xa9, 0x48, 0xa2, 0x28, 0x39, 0x71, 0x26,
	0xbe, 0x36, 0xc9, 0x97, 0x33, 0xf0, 0x91, 0x8f, 0xca, 0x5e, 0x4e, 0x84, 0x1d, 0x92, 0x3d, 0x9e,
	0x37, 0xc5, 0xbe, 0x56, 0x59, 0xcd, 0x75, 0x13, 0x14, 0xa5, 0x75, 0x1b, 0x7e, 0x42, 0xef, 0x3c,
	0x38, 0xe7, 0xcf, 0x62, 0x27, 0x0a, 0x03, 0x3f, 0x14, 0xe8, 0x1e, 0xab, 0xdb, 0xcb, 0x04, 0x1e,
	0x20, 0x36, 0xfc, 0xa1, 0xc1, 0x0a, 0x77, 0x16, 0x8a, 0xbc, 0xeb, 0x4c, 0xbb, 0x6d, 0x32, 0xa1,
	0x57, 0xb3, 0x99, 0x82, 0x14, 0x81, 0x79, 0x6a, 0x6a, 0xe5, 0x53, 0x33, 0xfc, 0x53, 0xf3, 0x3a,
	0xbd, 0xe3, 0x7d, 0xa5, 0xc1, 0x7e, 0x05, 0x9d, 0x94, 0xdc, 0x41, 0x7f, 0xf3, 0x12, 0xde, 0x1f,
	0x37, 0x67, 0xdc, 0x1f, 0x30, 0xca, 0xe6, 0xfb, 0x9a, 0x10, 0xfd, 0x98, 0xfc, 0x21, 0x97, 0xa7,
	0x83, 0x1f, 0x57, 0x59, 0x3b, 0xc3, 0x81, 0x23, 0x50, 0x62, 0xa3, 0x43, 0x98, 0xbe, 0xa4, 0x05,
	0x00, 0xfa, 0x7a, 0xb5, 0x38, 0x27, 0xbf, 0x57, 0x35, 0x17, 0xe7, 0xe4, 0xf8, 0xd2, 0x6d, 0xb9,
	0x3c, 0x8e, 0xd5, 0xa4, 0xb1, 0xed, 0x9e, 0x3c, 0x8e, 0xb3, 0xb6, 0xc7, 0x32, 0x4a, 0x27, 0xda,
	0xde, 0x03, 0xe4, 0x43, 0x00, 0xe0, 0x9c, 0x63, 0xf5, 0x59, 0xe6, 0x50, 0x6b, 0x42, 0xf9, 0x89,
	0x90, 0x20, 0x33, 0xb1, 0x4a, 0xf9, 0x0c, 0xe1, 0xd6, 0x56, 0xd7, 0x3b, 0xc0, 0x87, 0x19, 0xaa,
	0x3c, 0x5b, 0xf4, 0x79, 0x09, 0x58, 0xfe, 0xfa, 0x76, 0xd7, 0x9f, 0x88, 0x20, 0x70, 0x03, 0x5d,
	0x4a, 0x89, 0x0c, 0x70, 0x9a, 0x74, 0xc3, 0x2f, 0xe3, 0xbd, 0xa4, 0xb0, 0xe1, 0x4f, 0x06, 0xa6,
	0x74, 0xf9, 0x5f, 0xdd, 0x21, 0x58, 0x3a, 0xba, 0xda, 0x0d, 0x31, 0x4f, 0xb7, 0x3a, 0x0a, 0x79,
	0xc3, 0x11, 0x8d, 0xd3, 0x69, 0xcc, 0xf5, 0x9f, 0xc1, 0x3c, 0x32, 0x47, 0x34, 0x3a, 0xf2, 0xf5,
	0x97, 0xe3, 0xf6, 0x9a, 0x2e, 0x4a, 0xed, 0xaa, 0xab, 0xe5, 0x2e, 0xca, 0x59, 0x4e, 0xef, 0xd6,
	0xe5, 0xc6, 0x9a, 0x76, 0x7a, 0xdf, 0x62, 0xda, 0x22, 0x51, 0x1c, 0x91, 0x6b, 0x53, 0x7a, 0x04,
	0x62, 0x8c, 0xf7, 0xf3, 0xd5, 0x05, 0xde, 0x60, 0x38, 0xe0, 0xc6, 0x45, 0x03, 0x9e, 0x09, 0x99,
	0x6d, 0x01, 0xf0, 0xd0, 0x67, 0xcc, 0xca, 0x4c, 0xa3, 0x9c, 0x8d, 0x3a, 0xd8, 0xd9, 0x9b, 0x17,
	0x75, 0x96, 0xb7, 0xc8, 0x0c, 0x04, 0x83, 0xeb, 0x1e, 0xe5, 0xba, 0xbe, 0x4c, 0x43, 0x5c, 0x38,
	0x32, 0x9b, 0x6f, 0x5d, 0xd4, 0xaf, 0x22, 0xcf, 0x0c, 0x02, 0x9b, 0xca, 0x96, 0xcd, 0x56, 0xcd,
	0x0d, 0x75, 0x42, 0x71, 0x8e, 0x97, 0x51, 0x67, 0xfb, 0xf6, 0x65, 0x36, 0x15, 0xe8, 0xb3, 0x3e,
	0x61, 0x63, 0x3f, 0x11, 0xe7, 0x86, 0x7a, 0xb3, 0x52, 0x50, 0x9b, 0xde, 0x65, 0x2d, 0xd0, 0xd6,
	0x91, 0x35, 0x7b, 0x38, 0xc6, 0x8d, 0xb9, 0x63, 0x28, 0x3a, 0x1b, 0xf4, 0x7b, 0x64, 0xcc, 0x0d,
	0xd6, 0xc5, 0x01, 0xdd, 0x28, 0x4c, 0xfc, 0x30, 0x15, 0x18, 0x46, 0xa8, 0xdb, 0xcb, 0x00, 0xee,
	0x2b, 0x6c, 0xf0, 0xd3, 0x0a, 0x6b, 0xe9, 0xa6, 0xa8, 0x2d, 0x8a, 0x44, 0x09, 0x10, 0x25, 0x5e,
	0x62, 0x91, 0x90, 0xfc, 0x78, 0x95, 0xbe, 0x05, 0xc5, 0x47, 0x55, 0xc5, 0x09, 0x44, 0x82, 0xd2,
	0x43, 0xb5, 0x23, 0x56, 0xa9, 0x65, 0xed, 0x88, 0x45, 0x54, 0x25, 0x06, 0x6e, 0xb4, 0xd1, 0x0e,
	0x9b, 0x85, 0xdb, 0x03, 0xa7, 0x13, 0x43, 0x3c, 0x21, 0xa8, 0x45, 0xfa, 0x0e, 0xc4, 0x10, 0x0f,
	0x22, 0x83, 0x7f, 0x59, 0xca, 0xbd, 0x91, 0x17, 0xf8, 0xdd, 0xbf, 0x65, 0xfa, 0xdd, 0xb5, 0xfd,
	0x97, 0xf9, 0xde, 0x5f, 0x9b, 0xf2, 0xbd, 0x6b, 0x92, 0x82, 0xff, 0xfd, 0x8d, 0x19, 0xfe, 0x77,
	0x4d, 0x58, 0xf2, 0xc1, 0x5f, 0x67, 0x1d, 0xd3, 0xae, 0x25, 0x0b, 0x9d, 0x8d, 0x73, 0x83, 0x76,
	0x83, 0x08, 0xa6, 0x2d, 0x73, 0x20, 0xd2, 0x16, 0xec, 0x2f, 0xb3, 0x35, 0x74, 0xb2, 0x15, 0xec,
	0xd7, 0xdc, 0x24, 0x5f, 0xc5, 0x4a, 0xd3, 0x7a, 0xbd, 0xc1, 0x3a, 0x66, 0x08, 0x84, 0xc4, 0xa3,
	0x09, 0xcd, 0x0a, 0xfa, 0xb5, 0x67, 0x06, 0xfd, 0xae, 0xb3, 0x0e, 0x59, 0x5c, 0x42, 0xca, 0x48,
	0xaa, 0x5b, 0x1d, 0x03, 0x77, 0xf2, 0x03, 0x40, 0x2c, 0x67, 0xca, 0x67, 0x41, 0x87, 0xf2, 0xde,
	0x0c, 0x2e, 0x7c, 0x7b, 0x67, 0x6b, 0x6b, 0xf3, 0x3d, 0x1e, 0x0b, 0xc7, 0x3c, 0x1e, 0x17, 0xc4,
	0x09, 0x3f, 0x2b, 0x45, 0x17, 0xe8, 0x6c, 0xbe, 0x75, 0xf9, 0xee, 0x17, 0xc6, 0x1b, 0xcc, 0xf8,
	0x61, 0xb7, 0x1c, 0x3f, 0x1c, 0xfc, 0xc5, 0x12, 0x5b, 0x2d, 0x9f, 0x4c, 0x60, 0xa2, 0x9c, 0xbd,
	0x32, 0x26, 0x7a, 0xa1, 0x2c, 0x76, 0x8d, 0xb5, 0x64, 0x1a, 0x92, 0x10, 0xcf, 0x5d, 0x40, 0x4d,
	0x99, 0x86, 0x28, 0xc4, 0xd7, 0x59, 0x7d, 0x72, 0xc2, 0x63, 0xad, 0x10, 0x52, 0xe1, 0xf9, 0xd9,
	0xe4, 0xff, 0x99, 0xe0, 0x32, 0x4c, 0x00, 0x37, 0x9d, 0x08, 0x85, 0x3c, 0x7e, 0xa6, 0x23, 0x93,
	0x2b, 0xf9, 0x4d, 0x47, 0x15, 0x14, 0x9e, 0x1c, 0xfc, 0x41, 0xad, 0x14, 0x16, 0x29, 0xa9, 0x91,
	0x95, 0x29, 0xe3, 0xeb, 0xb5, 0xa9, 0x75, 0x53, 0xde, 0xcf, 0xe2, 0xec, 0x8d, 0xb0, 0xd7, 0x8c,
	0x40, 0x49, 0xe6, 0xbf, 0x32, 0x82, 0x25, 0xbb, 0x73, 0x02, 0x65, 0x39, 0x33, 0xcd, 0x0a, 0x96,
	0x19, 0xfe, 0xc7, 0x33, 0x81, 0xd6, 0x4e, 0x7d, 0xca, 0xff, 0xf8, 0x04, 0x2b, 0x8a, 0xb6, 0x45,
	0x63, 0x91, 0x6d, 0xd1, 0x2c, 0xd9, 0x16, 0x1b, 0xc5, 0x88, 0x5c, 0x2b, 0x1b, 0xc1, 0x88, 0xca,
	0x19, 0x61, 0x1a, 0xba, 0x69, 0xda, 0x66, 0x98, 0x86, 0x2e, 0x9b, 0x72, 0x24, 0x87, 0x4d, 0x45,
	0x72, 0x06, 0x3f, 0xa9, 0xb2, 0x8e, 0xa1, 0x50, 0x5c, 0x26, 0x0a, 0xbd, 0x51, 0xde, 0x6c, 0xda,
	0x90, 0xc2, 0x46, 0x5b, 0x6f, 0xb1, 0x57, 0xf4, 0x19, 0xd3, 0xc1, 0x68, 0x30, 0x67, 0xd2, 0x40,
	0x9b, 0x0a, 0x2f, 0xeb, 0x6a, 0x15, 0x98, 0x7e, 0x88, 0x95, 0xd6, 0x77, 0x99, 0x65, 0x08, 0x61,
	0xdd, 0x44, 0x99, 0xce, 0x46, 0x8d, 0x22, 0xbf, 0xc9, 0x96, 0xe9, 0xd8, 0x29, 0x42, 0xe5, 0x1f,
	0x40, 0x2c, 0x27, 0x29, 0x04, 0xa5, 0x1b, 0x53, 0x41, 0x69, 0xed, 0x92, 0x69, 0x66, 0x2e, 0x99,
	0xc1, 0x7d, 0x66, 0x4d, 0x6b, 0x46, 0x66, 0x8c, 0xbf, 0x32, 0x2f, 0xc6, 0x5f, 0x2d, 0xc4, 0xf8,
	0x7f, 0x56, 0x63, 0xbd, 0x92, 0x2a, 0xa4, 0x32, 0x2e, 0x38, 0x7d, 0x8d, 0xd2, 0x0f, 0x30, 0x28,
	0x04, 0x9f, 0x72, 0x9d, 0x75, 0xa2, 0x34, 0x99, 0xa4, 0x85, 0x88, 0x13, 0x23, 0x48, 0x47, 0xc4,
	0xc8, 0xe3, 0x27, 0xcc, 0xa0, 0x53, 0x47, 0x61, 0x48, 0xb2, 0xc1, 0x3a, 0x98, 0xd2, 0x41, 0x07,
	0xc1, 0x60, 0x68, 0x06, 0x30, 0x9d, 0x81, 0x42, 0x3f, 0x20, 0x43, 0xeb, 0xc5, 0x7e, 0x7c, 0x3a,
	0x7a, 0x9a, 0x44, 0x79, 0x12, 0x1b, 0xa6, 0x6b, 0x52, 0x28, 0x4f, 0xe2, 0x2d, 0xb0, 0x35, 0x02,
	0xfe, 0xcc, 0x51, 0x30, 0x0a, 0x54, 0x75, 0xf8, 0xb1, 0xe2, 0x80, 0x70, 0x10, 0xd9, 0x93, 0x73,
	0xc5, 0x57, 0x39, 0x4f, 0x37, 0x27, 0xe7, 0xc4, 0x57, 0x57, 0x59, 0x1b, 0xaa, 0x89, 0xe7, 0x89,
	0x9b, 0x81, 0x3e, 0xe3, 0x76, 0xa8, 0x3c, 0xe2, 0xa9, 0x87, 0x63, 0x28, 0x56, 0x9e, 0x9c, 0x8f,
	0xdf, 0x53, 0x10, 0x9a, 0x46, 0xf1, 0xee, 0xbd, 0xbb, 0x39, 0x91, 0x32, 0x9d, 0x11, 0xcd, 0xc8,
	0x40, 0x98, 0x21, 0x99, 0x7b, 0x22, 0xdc, 0x53, 0x65, 0x42, 0x33, 0x84, 0xf6, 0x01, 0x19, 0xfe,
	0x89, 0x69, 0xb8, 0x8e, 0xb6, 0x2e, 0x48, 0x4f, 0x22, 0xc1, 0x88, 0xba, 0xe5, 0xfc, 0xf4, 0x24,
	0xe8, 0x65, 0xd3, 0xce, 0x28, 0xc1, 0x28, 0x54, 0xfa, 0xe5, 0xe0, 0x2f, 0xab, 0x8c, 0xe5, 0x35,
	0x14, 0x51, 0x14, 0x5c, 0x3a, 0x09, 0x8f, 0x4f, 0xd5, 0x68, 0x6d, 0x44, 0x1e, 0xf3, 0xf8, 0x14,
	0x8e, 0x87, 0x96, 0xc4, 0xa1, 0x2b, 0xc2, 0x44, 0xf2, 0xdc, 0xe1, 0xb2, 0xa6, 0x04, 0x72, 0x5e,
	0x61, 0xbd, 0xc9, 0xd6, 0x4e, 0xb8, 0xf4, 0x48, 0x6d, 0x74, 0x7e, 0xe4, 0x1f, 0x1f, 0x09, 0xcd,
	0x31, 0x3d, 0xa8, 0xc0, 0x81, 0x7f, 0x80, 0x30, 0xd0, 0xc6, 0xd1, 0x28, 0x29, 0xd2, 0xd2, 0xc1,
	0xeb, 0x41, 0x85, 0x49, 0x8b, 0xe6, 0x25, 0x7e, 0x06, 0xb9, 0x39, 0x14, 0xf7, 0x2c, 0xd3, 0x17,
	0x10, 0x06, 0xaa, 0xae, 0x1f, 0xfa, 0x89, 0xc3, 0x03, 0x9d, 0x26, 0xd2, 0x84, 0xf2, 0x5e, 0x10,
	0xe4, 0xb3, 0x44, 0x63, 0xae, 0x69, 0xcc, 0x52, 0xdb, 0xe0, 0x54, 0x8d, 0x6a, 0x72, 0xcb, 0xa8,
	0x06, 0x45, 0x79, 0xf8, 0x45, 0xd5, 0xdc, 0xa0, 0x3b, 0x8b, 0x36, 0xe8, 0x55, 0xd6, 0x8a, 0x26,
	0xc6, 0xf6, 0xd4, 0xed, 0x66, 0x34, 0x21, 0xc5, 0xbe, 0x90, 0xf8, 0x54, 0x2b, 0x25, 0x3e, 0x5d,
	0x67, 0x9d, 0x51, 0x24, 0x5d, 0xa1, 0x64, 0xeb, 0x92, 0xca, 0x40, 0x00, 0x88, 0x44, 0xeb, 0x87,
	0x5a, 0xf0, 0x14, 0xf2, 0xbc, 0x66, 0x19, 0x89, 0xf0, 0x81, 0x98, 0x9c, 0x25, 0xb3, 0xbb, 0x15,
	0x5b, 0xd2, 0xc5, 0x35, 0x48, 0xd9, 0xb2, 0x59, 0x09, 0x5c, 0xec, 0x25, 0xa3, 0x48, 0x8e, 0x79,
	0xa2, 0x74, 0x09, 0x9a, 0x51, 0x57, 0xa3, 0xa4, 0x4e, 0x94, 0xf4, 0x8d, 0xea, 0x94, 0xbe, 0x71,
	0xad, 0x90, 0x3b, 0xa6, 0xdc, 0xd2, 0x59, 0x5e, 0xd8, 0xf0, 0x9f, 0xdb, 0xe6, 0x1a, 0x6e, 0x3f,
	0xa7, 0xed, 0x5f, 0x2f, 0xd8, 0xfe, 0x1b, 0xb9, 0x9d, 0x6b, 0x3a, 0xc1, 0xb5, 0xd8, 0x25, 0x15,
	0xe1, 0x92, 0x0e, 0x02, 0xf8, 0x94, 0x99, 0x0e, 0x82, 0x5f, 0x2b, 0x79, 0x00, 0xea, 0x73, 0xed,
	0x4f, 0xec, 0x42, 0x59, 0x3e, 0x81, 0x90, 0x33, 0x9c, 0x00, 0xb9, 0xa1, 0xd8, 0x30, 0x0d, 0xc5,
	0xc1, 0xdf, 0x14, 0xdc, 0x44, 0xca, 0x54, 0xc3, 0xd1, 0xd6, 0x33, 0x53, 0x0d, 0x3b, 0x58, 0x67,
	0x75, 0x32, 0xd3, 0x94, 0x23, 0x19, 0x0b, 0x70, 0x3d, 0x1c, 0x71, 0xe9, 0x46, 0x9e, 0x96, 0xdb,
	0xba, 0x88, 0x29, 0x63, 0x51, 0x9a, 0xc5, 0x1f, 0xa8, 0x00, 0xa8, 0xe9, 0xf8, 0xa6, 0x02, 0xa0,
	0xe4, 0x2f, 0x56, 0x9a, 0x2b, 0x16, 0xac, 0xd7, 0x59, 0x8f, 0xb4, 0x94, 0x28, 0x74, 0x0a, 0xdf,
	0xde, 0x45, 0xf8, 0x20, 0x54, 0x7a, 0xd0, 0x35, 0xc6, 0x40, 0x2d, 0x56, 0x24, 0xea, 0x64, 0xc9,
	0x54, 0x57, 0x5f, 0x61, 0x0d, 0xa5, 0xb6, 0xd0, 0xa9, 0x52, 0xa5, 0x72, 0x0e, 0x50, 0xbb, 0x9c,
	0x03, 0x54, 0xf2, 0xcf, 0xb0, 0x92, 0x7f, 0x66, 0xf0, 0xdf, 0x4b, 0xac, 0x57, 0x5a, 0xf2, 0x69,
	0xf7, 0x47, 0x65, 0x8e, 0xfb, 0xe3, 0x42, 0xe7, 0x92, 0xd1, 0x93, 0x5e, 0xc6, 0x72, 0x4f, 0x36,
	0xae, 0xa8, 0xc1, 0x89, 0xe6, 0xca, 0x6a, 0x22, 0x8a, 0x29, 0xbc, 0xc9, 0xc8, 0x67, 0xaf, 0xd4,
	0x3e, 0x73, 0xb1, 0x7b, 0x58, 0x81, 0x33, 0x26, 0xd7, 0xfc, 0x9b, 0x8c, 0xfc, 0xf5, 0x05, 0x5a,
	0x15, 0xfb, 0xc6, 0x0a, 0x83, 0x76, 0x9e, 0x42, 0xd9, 0x5c, 0xa8, 0x50, 0x4e, 0xeb, 0xb7, 0xad,
	0xe7, 0xd1, 0x6f, 0xdb, 0x73, 0xf5, 0xdb, 0x69, 0x4d, 0x95, 0xcd, 0xd3, 0x54, 0x37, 0xca, 0x19,
	0x60, 0xb3, 0xf4, 0xcd, 0x22, 0x07, 0x2c, 0x97, 0x3d, 0x74, 0x05, 0x6d, 0xb7, 0xbb, 0x48, 0xdb,
	0x5d, 0x29, 0x69, 0xbb, 0x65, 0x45, 0xb6, 0x77, 0xb1, 0x22, 0xbb, 0x3a, 0x9d, 0x92, 0xf4, 0xd7,
	0x57, 0xcd, 0x94, 0xa4, 0x9d, 0x45, 0x02, 0xcd, 0xe0, 0x12, 0x33, 0x88, 0xb5, 0x9c, 0xaf, 0xb8,
	0x4c, 0x2e, 0x27, 0xd4, 0xae, 0x96, 0x85, 0x5a, 0xdd, 0x90, 0x58, 0x4f, 0xd8, 0x9a, 0x79, 0x4b,
	0x6b, 0xb1, 0x05, 0x92, 0xef, 0x8d, 0x79, 0x56, 0xd9, 0x7e, 0xb9, 0x81, 0xbd, 0x6a, 0xf6, 0x81,
	0xc2, 0xe7, 0x53, 0xb6, 0x76, 0x54, 0x36, 0xde, 0xd0, 0x2d, 0xb2, 0xa0, 0xdf, 0x29, 0x6b, 0xcf,
	0xee, 0x41, 0x1f, 0x87, 0x86, 0x50, 0x7c, 0xc8, 0x56, 0xd2, 0xf0, 0x34, 0x8c, 0xce, 0x35, 0x9d,
	0x4a, 0x2a, 0x7a, 0x7d, 0x5e, 0x9f, 0x9f, 0x16, 0xa8, 0xed, 0x2e, 0xb5, 0x56, 0x5d, 0x5a, 0xbf,
	0xce, 0x5e, 0xe2, 0x71, 0xec, 0x53, 0x83, 0xfc, 0x3b, 0x29, 0xd3, 0xe8, 0xdb, 0xf3, 0xfa, 0xdc,
	0x9b, 0x6e, 0x62, 0xaf, 0x51, 0x3f, 0xe6, 0xb7, 0x3e, 0x9a, 0xce, 0x3d, 0x68, 0xcf, 0xbd, 0x0f,
	0xb0, 0xe3, 0xc3, 0x22, 0x79, 0x39, 0x41, 0xc1, 0x14, 0x31, 0x14, 0xf9, 0x66, 0x53, 0x22, 0x66,
	0x0f, 0xf0, 0xc1, 0x3f, 0x36, 0xd9, 0xda, 0xd4, 0x2e, 0xe1, 0x09, 0x32, 0x2c, 0xe4, 0x8a, 0x71,
	0x82, 0x72, 0x2b, 0xf9, 0xb0, 0x20, 0x9b, 0x49, 0x5b, 0xdc, 0xbd, 0x34, 0x27, 0x6c, 0xda, 0x59,
	0x5b, 0x53, 0xa2, 0x3f, 0x61, 0x1d, 0xd0, 0x92, 0x74, 0xaf, 0x35, 0xec, 0xf5, 0xee, 0xe5, 0x7b,
	0xdd, 0xcb, 0x1b, 0xdb, 0x0c, 0x7a, 0x52, 0xfd, 0x1e, 0x31, 0xd4, 0x10, 0xcf, 0xb9, 0x14, 0x79,
	0xa6, 0x0d, 0xf4, 0xfd, 0xce, 0xe5, 0xfb, 0xfe, 0xa8, 0xd8, 0x81, 0xbd, 0xa2, 0x7b, 0xcc, 0x85,
	0x5a, 0x91, 0xe5, 0x0a, 0xee, 0x7f, 0xab, 0xc0, 0x50, 0xb4, 0x84, 0x73, 0xe3, 0x88, 0x8d, 0xf9,
	0x71, 0xc4, 0xc1, 0x5f, 0x55, 0x18, 0xcb, 0x17, 0x0f, 0xae, 0xe9, 0x68, 0x34, 0xc2, 0x18, 0x99,
	0xb2, 0xe2, 0x54, 0xf1, 0x12, 0x69, 0xa5, 0x59, 0xac, 0x33, 0x0a, 0x1d, 0xe3, 0xf1, 0x43, 0x47,
	0x61, 0x78, 0xee, 0xaf, 0x33, 0xd5, 0xc2, 0x39, 0x9e, 0xc8, 0x58, 0xeb, 0x8e, 0x04, 0x7d, 0x38,
	0x91, 0xa8, 0xe2, 0xe9, 0x61, 0xd2, 0x24, 0x72, 0x4f, 0x4e, 0x75, 0xca, 0x87, 0x1a, 0x88, 0xc0,
	0xc1, 0x4f, 0x2b, 0xac, 0x63, 0xec, 0x0e, 0x98, 0xd4, 0x05, 0x79, 0x82, 0xdb, 0x6e, 0xaa, 0x88,
	0x2f, 0x9b, 0xd5, 0xd0, 0x92, 0x34, 0xc1, 0xef, 0xe4, 0x71, 0x01, 0xa3, 0x09, 0xcd, 0x4d, 0x3b,
	0xe1, 0x73, 0xea, 0xdb, 0x6c, 0x15, 0xee, 0x2d, 0x27, 0x0a, 0xa3, 0xd1, 0x48, 0xd1, 0xaa, 0xf0,
	0x3d, 0xe0, 0x07, 0x00, 0x23, 0xe5, 0xe0, 0x1f, 0x2a, 0xac, 0x57, 0xda, 0x61, 0x58, 0x1e, 0xb2,
	0x1c, 0x0a, 0x1f, 0xd6, 0x21, 0x8c, 0x06, 0xd8, 0x60, 0x5d, 0x1d, 0x38, 0x35, 0xbf, 0x64, 0x59,
	0x81, 0x99, 0xf6, 0x3a, 0x92, 0x7c, 0x5c, 0x18, 0xbf, 0x0d, 0x08, 0x55, 0xdf, 0x62, 0xbd, 0x3c,
	0x4a, 0x4a, 0x34, 0x2a, 0x89, 0x3d, 0x83, 0x67, 0xaa, 0xc9, 0xf5, 0xb2, 0x9a, 0x3c, 0xf8, 0xa2,
	0xc9, 0xd6, 0xa6, 0x84, 0x63, 0xd1, 0x36, 0xa8, 0x94, 0x6c, 0x03, 0x67, 0xa6, 0x47, 0xea, 0x05,
	0x7a, 0xf2, 0x4a, 0xbe, 0xe9, 0xda, 0xb4, 0x6f, 0xba, 0xec, 0xeb, 0x5b, 0x7a, 0x71, 0xbe, 0xbe,
	0xc3, 0xc2, 0x73, 0x19, 0xd2, 0xb2, 0x77, 0x9f, 0xb7, 0xe3, 0xf2, 0x03, 0x9a, 0xb2, 0x57, 0xa9,
	0x31, 0xe5, 0x55, 0x1a, 0xfc, 0x5b, 0x65, 0x2a, 0x0d, 0x7c, 0x5e, 0x1a, 0xcc, 0x15, 0xd6, 0xe0,
	0xde, 0x0f, 0xd3, 0x38, 0x73, 0xb6, 0x50, 0x09, 0x46, 0xd1, 0x79, 0xe6, 0x46, 0x78, 0xb6, 0xa3,
	0x30, 0x8c, 0xb1, 0xbc, 0xca, 0x5a, 0x61, 0xa4, 0x4e, 0x37, 0x71, 0x4c, 0x33, 0x8c, 0xe8, 0x64,
	0x83, 0xa9, 0x38, 0x1a, 0x39, 0x28, 0x17, 0xea, 0x99, 0x5c, 0x78, 0xa0, 0xe5, 0x82, 0x98, 0xc8,
	0x48, 0xf3, 0xa3, 0xfa, 0x7c, 0xc2, 0x88, 0xd1, 0x4a, 0x7e, 0xab, 0x58, 0x84, 0x71, 0x24, 0x95,
	0xfe, 0x6d, 0xfa, 0xad, 0x0e, 0xb1, 0x62, 0xf0, 0x3b, 0x95, 0x52, 0x4e, 0x7d, 0xfe, 0xb4, 0xc3,
	0x9c, 0xb1, 0x7a, 0xda, 0x31, 0x95, 0x76, 0x5f, 0x9d, 0x93, 0x76, 0x5f, 0x9b, 0x9f, 0x76, 0xbf,
	0x54, 0x4e, 0xbb, 0xff, 0x79, 0xe5, 0x9b, 0x78, 0x89, 0x51, 0x7a, 0x3b, 0xb1, 0x74, 0xe1, 0xdb,
	0x89, 0xfa, 0xd4, 0xdb, 0x89, 0xd2, 0x93, 0x87, 0x46, 0xf9, 0xc9, 0xc3, 0x20, 0x61, 0x2b, 0x45,
	0x5d, 0xa4, 0x6c, 0x51, 0x54, 0xa6, 0x2c, 0x8a, 0xcb, 0xbe, 0x2b, 0x43, 0x2e, 0x9f, 0xf9, 0xae,
	0x6c, 0xf0, 0xf3, 0x2a, 0x7b, 0x69, 0x86, 0xba, 0xb2, 0x58, 0x76, 0xcc, 0x88, 0x27, 0x54, 0x67,
	0xc6, 0x13, 0x3e, 0x9d, 0xf1, 0x6a, 0xed, 0xad, 0xe7, 0xd0, 0x9a, 0x2e, 0x79, 0x10, 0x97, 0xa6,
	0x0f, 0xe2, 0xa4, 0xc0, 0x16, 0xa5, 0xf0, 0x5c, 0x65, 0x2a, 0x3c, 0x77, 0xbd, 0x18, 0x9e, 0xab,
	0x66, 0x04, 0x7a, 0x26, 0x25, 0x0e, 0xa8, 0x4d, 0x71, 0xc0, 0xe0, 0xf7, 0xaa, 0xb9, 0x93, 0x74,
	0x92, 0xe9, 0x63, 0xbd, 0xd8, 0x3f, 0x0e, 0x79, 0xe0, 0xc4, 0x89, 0x14, 0xe1, 0x71, 0x72, 0xa2,
	0x8e, 0xc4, 0x0a, 0xc1, 0x87, 0x0a, 0x05, 0xee, 0x54, 0xf9, 0x37, 0xfa, 0x54, 0xa8, 0x62, 0x1e,
	0x02, 0xaa, 0x99, 0x21, 0xa0, 0xef, 0x32, 0x2b, 0x8d, 0xc5, 0x28, 0x0d, 0x9c, 0x5c, 0x57, 0xc8,
	0x1c, 0xcc, 0x54, 0xb3, 0x9f, 0x57, 0xc0, 0x77, 0xf0, 0xa0, 0x48, 0x4b, 0xc2, 0x61, 0x85, 0x07,
	0x05, 0xc2, 0x22, 0x47, 0x35, 0xbe, 0x0c, 0x47, 0xfd, 0x5f, 0x7c, 0x10, 0x36, 0xfc, 0xc3, 0xa6,
	0xe9, 0x88, 0x7a, 0xe7, 0x82, 0xc7, 0x18, 0x46, 0x7a, 0xb8, 0x4a, 0xcd, 0xc9, 0x53, 0xc3, 0x67,
	0xda, 0x5b, 0xb5, 0xaf, 0x6e, 0x6f, 0x6d, 0xb0, 0x0e, 0x8a, 0x7d, 0x87, 0x72, 0x07, 0x0d, 0x77,
	0x3a, 0xc2, 0xfb, 0x98, 0x44, 0xf8, 0x9b, 0xb9, 0x7d, 0x4e, 0x12, 0x5c, 0x5d, 0x32, 0x74, 0x81,
	0x7e, 0x67, 0x96, 0x9b, 0x6a, 0xfa, 0xfd, 0x27, 0xb5, 0xc9, 0xac, 0x79, 0x92, 0xfb, 0x74, 0x3b,
	0x3d, 0x32, 0x35, 0x1e, 0x3e, 0xd1, 0xef, 0x72, 0xe6, 0x78, 0xc0, 0xa0, 0xeb, 0xf7, 0x8a, 0xe4,
	0x86, 0x6a, 0xb4, 0x07, 0x65, 0x30, 0x23, 0xd1, 0xbd, 0x45, 0xd1, 0x37, 0x29, 0x62, 0xb8, 0x40,
	0x9a, 0x73, 0x97, 0x8b, 0x3e, 0xb7, 0xdc, 0xc0, 0xee, 0xc5, 0x22, 0x79, 0x1f, 0x11, 0x1b, 0x81,
	0xc1, 0x1f, 0x57, 0xd9, 0xfa, 0xac, 0x59, 0xcd, 0x92, 0xc9, 0x45, 0x37, 0x62, 0x99, 0xdf, 0xab,
	0xd3, 0xfc, 0x3e, 0xad, 0x7a, 0xd5, 0xbe, 0xde, 0x20, 0xea, 0x8b, 0x53, 0xac, 0x06, 0x07, 0xac,
	0x57, 0xda, 0x12, 0x60, 0xe8, 0xd8, 0x1f, 0x3b, 0x61, 0x3a, 0x3e, 0x52, 0xa9, 0x22, 0x35, 0xbb,
	0x1d, 0xfb, 0xe3, 0x4f, 0x10, 0x40, 0x37, 0xf8, 0x89, 0x70, 0x4f, 0x9d, 0xcc, 0xa5, 0xd8, 0xb6,
	0xdb, 0x88, 0xec, 0x47, 0x9e, 0x18, 0x7c, 0xc6, 0xd6, 0xa6, 0xf6, 0xe3, 0xe2, 0x78, 0xea, 0x06,
	0xe5, 0x8a, 0xc4, 0xa9, 0xeb, 0x8a, 0xd8, 0x7c, 0x98, 0xc2, 0x62, 0x91, 0x1c, 0x12, 0x3a, 0xfc,
	0x2f, 0x33, 0x67, 0xf4, 0xed, 0xa3, 0xaf, 0xe4, 0x1d, 0xd6, 0x8f, 0xa0, 0x0a, 0xf9, 0xd1, 0x94,
	0x3d, 0x03, 0x16, 0x9d, 0x63, 0xe6, 0xbf, 0xe3, 0x91, 0xa5, 0x35, 0x9f, 0xb9, 0xa5, 0x47, 0x18,
	0x46, 0xc1, 0x64, 0x6b, 0xe3, 0xdc, 0x16, 0xdb, 0x1b, 0x99, 0xf3, 0x70, 0x7c, 0x07, 0x7f, 0x5e,
	0x63, 0x37, 0x2e, 0x6a, 0x33, 0x2b, 0xbd, 0xbe, 0x32, 0x33, 0xbd, 0xfe, 0x92, 0x8f, 0x71, 0xae,
	0xb1, 0xd6, 0xb9, 0x10, 0xa7, 0x4e, 0x2c, 0x12, 0xc3, 0x59, 0xd9, 0x04, 0xec, 0x50, 0x24, 0xb3,
	0x92, 0xf4, 0x97, 0x2e, 0x4c, 0xd2, 0xaf, 0x97, 0x92, 0xf4, 0xaf, 0xa8, 0x17, 0x34, 0x8d, 0xac,
	0x7f, 0x7a, 0x45, 0x63, 0xa6, 0xe8, 0x37, 0x8b, 0x29, 0xfa, 0x4e, 0x9e, 0xa2, 0x4f, 0x8e, 0x98,
	0xfb, 0x5f, 0x76, 0x95, 0x31, 0x4d, 0x3f, 0x83, 0x74, 0x9a, 0xff, 0xe0, 0x5d, 0xd6, 0x2d, 0x54,
	0x80, 0xae, 0x7e, 0xc2, 0x43, 0x2f, 0xd0, 0xac, 0xa8, 0x4a, 0x59, 0x42, 0x7e, 0xd5, 0x48, 0xc8,
	0xff, 0xb1, 0x99, 0xb0, 0x3d, 0x12, 0x17, 0xb8, 0xf0, 0xf2, 0xef, 0x71, 0xc7, 0x9e, 0x36, 0x22,
	0x33, 0x70, 0x7f, 0xec, 0x61, 0x10, 0x07, 0x34, 0xe1, 0x02, 0xeb, 0x31, 0x84, 0x88, 0xf7, 0x36,
	0x8a, 0xbc, 0x6b, 0x48, 0xf6, 0x9c, 0x7f, 0x87, 0x5f, 0x98, 0xe1, 0xc0, 0xb7, 0x17, 0xfe, 0x57,
	0xc2, 0x37, 0xfa, 0x52, 0x2b, 0x7b, 0xa3, 0xd1, 0x28, 0xbf, 0xd1, 0x30, 0x99, 0xaf, 0x79, 0x29,
	0xe6, 0x6b, 0xcd, 0x62, 0x3e, 0x93, 0x8f, 0xda, 0x73, 0x9f, 0x7a, 0xb0, 0x45, 0x4f, 0x3d, 0x3a,
	0x73, 0x9f, 0x7a, 0xc0, 0x42, 0x7e, 0x73, 0x4f, 0x3d, 0xfe, 0xb6, 0x61, 0xee, 0xe1, 0x45, 0x6f,
	0x3d, 0xf2, 0x35, 0xaf, 0xce, 0x79, 0x1d, 0x57, 0x33, 0x1e, 0xad, 0x5d, 0x65, 0x6d, 0xe8, 0xc9,
	0x7c, 0x9f, 0x0a, 0xeb, 0x46, 0x1c, 0x36, 0x64, 0x5d, 0xee, 0x79, 0xb0, 0xd2, 0xe9, 0xc4, 0xcb,
	0x95, 0xc7, 0x0e, 0xf7, 0xbc, 0x03, 0xf9, 0x29, 0x42, 0xd6, 0x0f, 0xa6, 0x24, 0x20, 0x39, 0x73,
	0x77, 0x66, 0x2d, 0x9b, 0x5b, 0x56, 0x5a, 0x16, 0x0b, 0xbf, 0x2f, 0x96, 0xd8, 0xd5, 0x05, 0xe4,
	0x33, 0x38, 0xb6, 0x32, 0x8b, 0x63, 0x4d, 0x56, 0xa8, 0x16, 0x59, 0xe1, 0x85, 0x49, 0xba, 0x8c,
	0xa3, 0xea, 0x53, 0x1c, 0xf5, 0x38, 0xe7, 0x28, 0x52, 0x7a, 0xde, 0xfd, 0x12, 0x4b, 0x53, 0xe6,
	0x36, 0xdd, 0xeb, 0xee, 0xbd, 0xbb, 0x4a, 0xed, 0xf9, 0xd2, 0xbd, 0xee, 0xde, 0xbb, 0x8b, 0xbd,
	0xee, 0xde, 0xbb, 0xfb, 0xb5, 0xf1, 0xf0, 0xe0, 0x9c, 0x3a, 0xde, 0xbd, 0x77, 0xd7, 0x1a, 0xb0,
	0x56, 0x96, 0xe3, 0xa0, 0x12, 0x48, 0x74, 0x19, 0xdf, 0xb8, 0x60, 0x62, 0x83, 0xea, 0x10, 0x0b,
	0xa8, 0x16, 0xc0, 0x25, 0x1c, 0x90, 0x29, 0xa5, 0xb3, 0xf5, 0x79, 0xc2, 0x1f, 0x90, 0x19, 0xa5,
	0xdf, 0x22, 0xc3, 0x6a, 0x2c, 0xa1, 0xa6, 0x81, 0x6f, 0x91, 0x77, 0xef, 0xdd, 0x1d, 0xfe, 0x6e,
	0xe1, 0x5d, 0xdc, 0xe8, 0x85, 0x1e, 0x9e, 0x62, 0x02, 0xc5, 0xd2, 0x5c, 0xab, 0x09, 0x86, 0x9d,
	0x9d, 0x40, 0x61, 0x78, 0x89, 0xea, 0x85, 0x60, 0xee, 0x3f, 0x55, 0x0a, 0x89, 0x15, 0x98, 0xb8,
	0x8f, 0x25, 0x37, 0xcd, 0x93, 0xfe, 0xa1, 0x13, 0x37, 0xa5, 0xc4, 0x7d, 0x72, 0xdf, 0x8f, 0xc7,
	0x79, 0xd2, 0x3f, 0x7a, 0xee, 0xc7, 0x63, 0xeb, 0x4d, 0xb6, 0x86, 0x99, 0x0c, 0x63, 0x37, 0x75,
	0xb4, 0x0b, 0x5b, 0xa7, 0x51, 0x40, 0xc5, 0x43, 0x37, 0xd5, 0x8e, 0xd0, 0x2c, 0xeb, 0x41, 0xf2,
	0xcc, 0xc3, 0x04, 0x65, 0x9b, 0xe3, 0xf3, 0xfc, 0x1f, 0x09, 0x19, 0x39, 0x42, 0xc8, 0x68, 0xac,
	0x73, 0xdc, 0x01, 0xf9, 0x00, 0x80, 0xac, 0xda, 0x7c, 0xf1, 0x8d, 0xd5, 0x28, 0x4a, 0xde, 0xab,
	0x7e, 0x54, 0x39, 0x6a, 0xe0, 0xff, 0xf8, 0xec, 0xfc, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf4,
	0xe7, 0x7c, 0x87, 0xdd, 0x47, 0x00, 0x00,
}
