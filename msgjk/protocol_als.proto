syntax = "proto3";
package wlst.pb2;

option optimize_for = SPEED;

// 恒杰电子锁

// 通用应答，除查询锁状态命令以外的所有命令
message Hj_lock_0000 {
  int32 status = 1; // 应答，0-失败，1-成功
}

// 设置刷卡主报
message Hj_lock_0d00 {
  int32 enable_alarm = 1; // 0-不允许主报，1-允许主报
}
// 设置地址
message Hj_lock_0100 {
  int64 new_addr = 1; // 设置的地址
}

// 查询锁状态
message Hj_lock_0200 {
  int32 lock_status = 1; //锁状态，0-闭合，1-开启
  int32 freq_lights =
      2; // 1～254表示打开或者关闭持续时间，单位100MS。0表示常闭，0xFF表示常开
  int32 freq_beep =
      3; // 1～254表示打开或者关闭持续时间，单位100MS。0表示常闭，0xFF表示常开
  int32 time_delay = 4;    // 以上2个freq状态的持续时间
  int32 lockoff_delay = 5; // 开门持续时间，默认5000ms
  uint64 master_card1 = 6; // 主卡号1，用于现场添加卡
  uint64 master_card2 = 7; // 主卡号2，用于现场删除卡
  int32 cards = 8;         // 已添加的卡数量
  uint64 hardware_ver = 9; // 硬件版本
  uint64 last_card = 10;   // 最后一次读卡卡号
  int32 last_card_legal = 11; // 最后一次读卡是否合法，0-非法，1-合法
  int32 card_type = 12;       // 卡类型，0x00 ID，0x01 IC
  int32 status = 13; // 0x00 无异常，0x01 开锁异常，0x02 关锁异常
}

// 开门提醒参数设置
message Hj_lock_0500 {
  int32 freq_lights =
      1; // 1～254表示打开或者关闭持续时间，单位100MS。0表示常闭，0xFF表示常开
  int32 freq_beep =
      2; // 1～254表示打开或者关闭持续时间，单位100MS。0表示常闭，0xFF表示常开
  int32 time_delay = 3; // 以上2个freq状态的持续时间
}

// 添加/删除卡
message Hj_lock_0600 {
  uint64 card = 1; // 卡号
}

// 设置管理卡
message Hj_lock_0800 {
  uint64 master_card1 = 1; //主卡号1，用于现场添加卡
  uint64 master_card2 = 2; //主卡号2，用于现场删除卡
}

// 设置开锁延迟（指定时间后自动锁闭）
message Hj_lock_0c00 {
  int32 delay = 1; // 开锁延迟，毫秒值，1-65535，默认5000
}

// 设置报警参数
message Hj_lock_0e00 {
  int32 freq_lights = 1; // 红灯异常报警时间，单位秒，范围5-600
  int32 freq_beep = 2; // 蜂鸣器异常报警时间，单位秒，范围5-600
}

// 设置门磁报警
message Hj_lock_0f00 {
  int32 alarm_magnetic = 1; // 门磁报警 0-不启用 1-启用
}

// 查询锁号
message Hj_lock_1000 {
  int64 lock_id = 1; // 锁号
}

// 查询门锁状态
message Hj_lock_1100 {
  int32 lock_status = 1; // 锁状态 0-关 1-开
  int32 door_status = 2; // 门状态 0-关 1-开
}

// 漏电协议
// 设置地址
message Wlst_elu_6255 {
  int32 new_addr = 1; // 设置的地址
  int32 status = 2;   // 设置应答,0-失败(0xaa),1-成功(0xff)
}
//设置运行参数
message Wlst_elu_6256 {
  message WorkArgv {
    int32 loop_mark = 1; // 回路标示 0-不启用,1-启用
    int32 work_mode = 2; // 工作模式,0-报警不动作,1-报警并动作
    int32 alarm_value_set = 3; // 设置的漏电报警(毫安)/温度报警值(摄氏度)
    int32 opt_delay = 4; // 动作延时,下发/10ms
  }
  repeated WorkArgv work_argv = 1;
  int32 status = 2; // 设置应答,0-失败(0xaa),1-成功(0xff)
}
// 手动操作
message Wlst_elu_6257 {
  repeated int32 opt_do =
      1 [packed = true]; // 1-8回路操作标示,0-关,1-开,2-不操作
  int32 status = 2;      // 设置应答,0-失败(0xaa),1-成功(0xff)
}
// 主动报警,选测
message Wlst_elu_62d8 {
  message AlarmData {
    repeated int32 switch_status = 1
        [packed =
             true]; // 状态,传输8个标志,目前只解析前3个
                    // [主动报警(0-报警不动作,1-报警并动作),分合闸状态(0-分闸,1-合闸),报警状态(1-漏电/温度报警,0-漏电/温度消警)]
    int32 alarm_value_set = 2; // 设置的漏电报警(毫安)/温度报警值(摄氏度)
    int32 opt_delay = 3; // 动作延迟
    int32 now_value = 4; // 当前漏电值/当前温度值
    int32 el_value = 5;  // 漏电流大小/温度
  }
  repeated AlarmData alarm_data = 1; // 各回路数据
}
// 事件查询
message Wlst_elu_625a {
  int32 events_count = 1;     // 查询条数,1,2,3
  repeated int32 loop_no = 2; // 回路标示,1~8
  int32 alarm_value_set = 3;  // 设置的报警值
  int32 now_value = 4;        // 报警值
  int64 dt_alarm = 5;         // 报警时间,标准格式
}
// 设置检测门限
message Wlst_elu_625b {
  int32 watch_value_el = 1; // 漏电检测门限
  int32 watch_value_tp = 2; // 温度检测门限
  int32 status = 3;         // 设置应答,0-失败(0xaa),1-成功(0xff)
}
// 设置时钟
message Wlst_elu_625c {
  int64 dt_timer = 1; // 设备时钟,标准格式
  int32 status = 2;   // 设置应答,0-失败(0xaa),1-成功(0xff)
}
// 召测运行参数, 同 Wlst_elu_6256
// 召测时钟, 同 Wlst_elu_625c
// 复位, 同 Wlst_elu_6255
// 设置/读取 8路2级参数
message Wlst_elu_6266 {
  message WorkArgv {
    int32 loop_mark = 1;         // 回路标示 0-不启用,1-启用
    int32 alarm_value_set = 2;   // 设置的漏电报警上限(毫安)
    int32 opt_value_set = 3;     // 设置的分匝上限（毫安）
    int32 opt_delay = 4;         // 动作延时,下发/10ms
    int32 opt_recover = 5;       // 是否自动重合匝，1-是，0-否
    int32 opt_recover_count = 6; // 自动重合闸次数
    int32 opt_recover_time = 7;  // 自动重合闸时间（单位秒）
  }
  repeated WorkArgv work_argv = 1; // 固定8，依次1-8
  int32 status = 2;                // 设置应答,0-失败(0xaa),1-成功(0xff)
}
// 主动报警,选测，8路
message Wlst_elu_62e8 {
  message AlarmData {
    int32 loop_status = 1; // 回路报警状态，1-漏电报警，2-分匝报警，3-漏电分匝同时报警
    int32 alarm_status = 2; // 漏电状态，1-报警，0-消警
    int32 opt_status = 3; // 分匝状态，1-报警，0-消警
    int32 now_value = 4; // 当前漏电值
    int32 alarm_value = 5;  // 报警漏电流大小
  }
  repeated AlarmData alarm_data = 1; // 各回路数据，依次1-8
}

//光照度协议
message Wlst_als_a700 {
  //光照度地址
  int32 addr = 1;
  // 1-设置成功，0-设置失败，b700_a500_b800
  int32 status = 2;
  // 0-每5s主动上报，1-选测上报,b600_3600_c600,2-按自定义间隔主动上报（多光控），3-按自定义间隔主动上报（485）,3700_b700_c700
  int32 mode = 3;
  //时间间隔（s），3800_c800
  int32 time = 4;
  //版本号，ca00
  string ver = 5;
  //光照度值，a600_a700_a800
  double lux = 6;
  //光照度状态
  int32 error = 7;
}

// gps较时
message Wlst_gps_0000 {
  //经度
  double longitude = 1;
  //纬度
  double latitude = 2;
  // gps时间
  string gpsdate = 3;
}

//新版gps模式设置
message Wlst_gps_5901 {
  //经度
  int32 work_mode = 1;
  //纬度
  int32 time_interval = 2;
  // gps时间
  int32 alarm_distance = 3;
  //设置结果
  int32 status = 4;
  // index
  int32 nindex = 5;
}
//新版gps选测
message Wlst_gps_5902 {
  //经度
  int32 new_addr = 1;
  // index
  int32 nindex = 2;
}
//新版gps选测
message Wlst_gps_5903 {
  //经度
  string ver = 1;
  // index
  int32 nindex = 2;
}
//新版gps选测
message Wlst_gps_5904 {
  //经度
  double longitude = 1;
  //纬度
  double latitude = 2;
  // gps时间
  int64 gpsdate = 3;
  // index
  int32 nindex = 4;
  //报警半径(m)
  int32 radius = 5;
}

message Wlst_mru_9100 {
  // 2007协议电表地址1
  repeated int32 addr = 1;
  //抄表类型(1A相，2B相，3C相，4正向有功总电能，5组合有功总电能)
  int32 meter_reading_type = 2;
  //抄表时间段（0当前，1上月，2上上月。。。）
  int32 meter_reading_date = 3;
  //电表波特率
  int32 baud_rate = 4;
  //数据
  double meter_value = 5;
  //协议版本，1-1997协议，2-2007协议
  int32 ver = 6;
}
