// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol_tp.proto

package wlst_pb2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AhhfRtu_6804 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 数据标记,1-开关量输出参数，2-模拟量采集参数，3-模拟量上下限参数
	DataMark []int32 `protobuf:"varint,2,rep,packed,name=data_mark,json=dataMark,proto3" json:"data_mark,omitempty"`
	// 信息点，暂不用
	DataPoint     []int32                     `protobuf:"varint,3,rep,packed,name=data_point,json=dataPoint,proto3" json:"data_point,omitempty"`
	SwitchOut     *AhhfRtu_6804_SwitchOut     `protobuf:"bytes,4,opt,name=switch_out,json=switchOut,proto3" json:"switch_out,omitempty"`
	SwitchIn      *AhhfRtu_6804_SwitchIn      `protobuf:"bytes,5,opt,name=switch_in,json=switchIn,proto3" json:"switch_in,omitempty"`
	SwitchInLimit *AhhfRtu_6804_SwitchInLimit `protobuf:"bytes,6,opt,name=switch_in_limit,json=switchInLimit,proto3" json:"switch_in_limit,omitempty"`
	// 应答,0-失败，1-成功，填充顺序和data_mark相同
	Status               []int32  `protobuf:"varint,9,rep,packed,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AhhfRtu_6804) Reset()         { *m = AhhfRtu_6804{} }
func (m *AhhfRtu_6804) String() string { return proto.CompactTextString(m) }
func (*AhhfRtu_6804) ProtoMessage()    {}
func (*AhhfRtu_6804) Descriptor() ([]byte, []int) {
	return fileDescriptor_905abe2d3bf4d8dd, []int{0}
}

func (m *AhhfRtu_6804) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AhhfRtu_6804.Unmarshal(m, b)
}
func (m *AhhfRtu_6804) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AhhfRtu_6804.Marshal(b, m, deterministic)
}
func (m *AhhfRtu_6804) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AhhfRtu_6804.Merge(m, src)
}
func (m *AhhfRtu_6804) XXX_Size() int {
	return xxx_messageInfo_AhhfRtu_6804.Size(m)
}
func (m *AhhfRtu_6804) XXX_DiscardUnknown() {
	xxx_messageInfo_AhhfRtu_6804.DiscardUnknown(m)
}

var xxx_messageInfo_AhhfRtu_6804 proto.InternalMessageInfo

func (m *AhhfRtu_6804) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *AhhfRtu_6804) GetDataMark() []int32 {
	if m != nil {
		return m.DataMark
	}
	return nil
}

func (m *AhhfRtu_6804) GetDataPoint() []int32 {
	if m != nil {
		return m.DataPoint
	}
	return nil
}

func (m *AhhfRtu_6804) GetSwitchOut() *AhhfRtu_6804_SwitchOut {
	if m != nil {
		return m.SwitchOut
	}
	return nil
}

func (m *AhhfRtu_6804) GetSwitchIn() *AhhfRtu_6804_SwitchIn {
	if m != nil {
		return m.SwitchIn
	}
	return nil
}

func (m *AhhfRtu_6804) GetSwitchInLimit() *AhhfRtu_6804_SwitchInLimit {
	if m != nil {
		return m.SwitchInLimit
	}
	return nil
}

func (m *AhhfRtu_6804) GetStatus() []int32 {
	if m != nil {
		return m.Status
	}
	return nil
}

type AhhfRtu_6804_SwitchOut struct {
	// 开关量输出路数
	SwitchOutTotal int32 `protobuf:"varint,1,opt,name=switch_out_total,json=switchOutTotal,proto3" json:"switch_out_total,omitempty"`
	// 每个开关量输出的回路数
	SwitchOutLoop        []int32  `protobuf:"varint,2,rep,packed,name=switch_out_loop,json=switchOutLoop,proto3" json:"switch_out_loop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AhhfRtu_6804_SwitchOut) Reset()         { *m = AhhfRtu_6804_SwitchOut{} }
func (m *AhhfRtu_6804_SwitchOut) String() string { return proto.CompactTextString(m) }
func (*AhhfRtu_6804_SwitchOut) ProtoMessage()    {}
func (*AhhfRtu_6804_SwitchOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_905abe2d3bf4d8dd, []int{0, 0}
}

func (m *AhhfRtu_6804_SwitchOut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AhhfRtu_6804_SwitchOut.Unmarshal(m, b)
}
func (m *AhhfRtu_6804_SwitchOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AhhfRtu_6804_SwitchOut.Marshal(b, m, deterministic)
}
func (m *AhhfRtu_6804_SwitchOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AhhfRtu_6804_SwitchOut.Merge(m, src)
}
func (m *AhhfRtu_6804_SwitchOut) XXX_Size() int {
	return xxx_messageInfo_AhhfRtu_6804_SwitchOut.Size(m)
}
func (m *AhhfRtu_6804_SwitchOut) XXX_DiscardUnknown() {
	xxx_messageInfo_AhhfRtu_6804_SwitchOut.DiscardUnknown(m)
}

var xxx_messageInfo_AhhfRtu_6804_SwitchOut proto.InternalMessageInfo

func (m *AhhfRtu_6804_SwitchOut) GetSwitchOutTotal() int32 {
	if m != nil {
		return m.SwitchOutTotal
	}
	return 0
}

func (m *AhhfRtu_6804_SwitchOut) GetSwitchOutLoop() []int32 {
	if m != nil {
		return m.SwitchOutLoop
	}
	return nil
}

type AhhfRtu_6804_SwitchIn struct {
	// 电压互感比,默认5
	VoltageTransformer int32 `protobuf:"varint,1,opt,name=voltage_transformer,json=voltageTransformer,proto3" json:"voltage_transformer,omitempty"`
	// 电流回路数
	LoopTotal int32 `protobuf:"varint,2,opt,name=loop_total,json=loopTotal,proto3" json:"loop_total,omitempty"`
	// 电流回路互感比,按真实值提交，通信下发时/5
	CurrentTransformer []int32 `protobuf:"varint,3,rep,packed,name=current_transformer,json=currentTransformer,proto3" json:"current_transformer,omitempty"`
	// 电流回路相位,0-a,1-b,2-c
	CurrentPhase         []int32  `protobuf:"varint,4,rep,packed,name=current_phase,json=currentPhase,proto3" json:"current_phase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AhhfRtu_6804_SwitchIn) Reset()         { *m = AhhfRtu_6804_SwitchIn{} }
func (m *AhhfRtu_6804_SwitchIn) String() string { return proto.CompactTextString(m) }
func (*AhhfRtu_6804_SwitchIn) ProtoMessage()    {}
func (*AhhfRtu_6804_SwitchIn) Descriptor() ([]byte, []int) {
	return fileDescriptor_905abe2d3bf4d8dd, []int{0, 1}
}

func (m *AhhfRtu_6804_SwitchIn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AhhfRtu_6804_SwitchIn.Unmarshal(m, b)
}
func (m *AhhfRtu_6804_SwitchIn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AhhfRtu_6804_SwitchIn.Marshal(b, m, deterministic)
}
func (m *AhhfRtu_6804_SwitchIn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AhhfRtu_6804_SwitchIn.Merge(m, src)
}
func (m *AhhfRtu_6804_SwitchIn) XXX_Size() int {
	return xxx_messageInfo_AhhfRtu_6804_SwitchIn.Size(m)
}
func (m *AhhfRtu_6804_SwitchIn) XXX_DiscardUnknown() {
	xxx_messageInfo_AhhfRtu_6804_SwitchIn.DiscardUnknown(m)
}

var xxx_messageInfo_AhhfRtu_6804_SwitchIn proto.InternalMessageInfo

func (m *AhhfRtu_6804_SwitchIn) GetVoltageTransformer() int32 {
	if m != nil {
		return m.VoltageTransformer
	}
	return 0
}

func (m *AhhfRtu_6804_SwitchIn) GetLoopTotal() int32 {
	if m != nil {
		return m.LoopTotal
	}
	return 0
}

func (m *AhhfRtu_6804_SwitchIn) GetCurrentTransformer() []int32 {
	if m != nil {
		return m.CurrentTransformer
	}
	return nil
}

func (m *AhhfRtu_6804_SwitchIn) GetCurrentPhase() []int32 {
	if m != nil {
		return m.CurrentPhase
	}
	return nil
}

type AhhfRtu_6804_SwitchInLimit struct {
	// 回路数量
	LoopTotal int32 `protobuf:"varint,5,opt,name=loop_total,json=loopTotal,proto3" json:"loop_total,omitempty"`
	// 电压上下限,按真实值提交，通信下发*100
	VoltageUplimit  []float64 `protobuf:"fixed64,1,rep,packed,name=voltage_uplimit,json=voltageUplimit,proto3" json:"voltage_uplimit,omitempty"`
	VoltageLowlimit []float64 `protobuf:"fixed64,2,rep,packed,name=voltage_lowlimit,json=voltageLowlimit,proto3" json:"voltage_lowlimit,omitempty"`
	// 电流上下限
	CurrentUplimit       []float64 `protobuf:"fixed64,3,rep,packed,name=current_uplimit,json=currentUplimit,proto3" json:"current_uplimit,omitempty"`
	CurrentLowlimit      []float64 `protobuf:"fixed64,4,rep,packed,name=current_lowlimit,json=currentLowlimit,proto3" json:"current_lowlimit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AhhfRtu_6804_SwitchInLimit) Reset()         { *m = AhhfRtu_6804_SwitchInLimit{} }
func (m *AhhfRtu_6804_SwitchInLimit) String() string { return proto.CompactTextString(m) }
func (*AhhfRtu_6804_SwitchInLimit) ProtoMessage()    {}
func (*AhhfRtu_6804_SwitchInLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_905abe2d3bf4d8dd, []int{0, 2}
}

func (m *AhhfRtu_6804_SwitchInLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AhhfRtu_6804_SwitchInLimit.Unmarshal(m, b)
}
func (m *AhhfRtu_6804_SwitchInLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AhhfRtu_6804_SwitchInLimit.Marshal(b, m, deterministic)
}
func (m *AhhfRtu_6804_SwitchInLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AhhfRtu_6804_SwitchInLimit.Merge(m, src)
}
func (m *AhhfRtu_6804_SwitchInLimit) XXX_Size() int {
	return xxx_messageInfo_AhhfRtu_6804_SwitchInLimit.Size(m)
}
func (m *AhhfRtu_6804_SwitchInLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_AhhfRtu_6804_SwitchInLimit.DiscardUnknown(m)
}

var xxx_messageInfo_AhhfRtu_6804_SwitchInLimit proto.InternalMessageInfo

func (m *AhhfRtu_6804_SwitchInLimit) GetLoopTotal() int32 {
	if m != nil {
		return m.LoopTotal
	}
	return 0
}

func (m *AhhfRtu_6804_SwitchInLimit) GetVoltageUplimit() []float64 {
	if m != nil {
		return m.VoltageUplimit
	}
	return nil
}

func (m *AhhfRtu_6804_SwitchInLimit) GetVoltageLowlimit() []float64 {
	if m != nil {
		return m.VoltageLowlimit
	}
	return nil
}

func (m *AhhfRtu_6804_SwitchInLimit) GetCurrentUplimit() []float64 {
	if m != nil {
		return m.CurrentUplimit
	}
	return nil
}

func (m *AhhfRtu_6804_SwitchInLimit) GetCurrentLowlimit() []float64 {
	if m != nil {
		return m.CurrentLowlimit
	}
	return nil
}

//江阴节能协议
//Wxjy_esu_d500
type WxjyEsu_5500 struct {
	//当前时间 hhmmss
	TimeNow string `protobuf:"bytes,1,opt,name=time_now,json=timeNow,proto3" json:"time_now,omitempty"`
	//时间1-3 hhmm
	XTime []int32 `protobuf:"varint,2,rep,packed,name=x_time,json=xTime,proto3" json:"x_time,omitempty"`
	//电压
	XVoltage             []int32  `protobuf:"varint,3,rep,packed,name=x_voltage,json=xVoltage,proto3" json:"x_voltage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WxjyEsu_5500) Reset()         { *m = WxjyEsu_5500{} }
func (m *WxjyEsu_5500) String() string { return proto.CompactTextString(m) }
func (*WxjyEsu_5500) ProtoMessage()    {}
func (*WxjyEsu_5500) Descriptor() ([]byte, []int) {
	return fileDescriptor_905abe2d3bf4d8dd, []int{1}
}

func (m *WxjyEsu_5500) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WxjyEsu_5500.Unmarshal(m, b)
}
func (m *WxjyEsu_5500) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WxjyEsu_5500.Marshal(b, m, deterministic)
}
func (m *WxjyEsu_5500) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WxjyEsu_5500.Merge(m, src)
}
func (m *WxjyEsu_5500) XXX_Size() int {
	return xxx_messageInfo_WxjyEsu_5500.Size(m)
}
func (m *WxjyEsu_5500) XXX_DiscardUnknown() {
	xxx_messageInfo_WxjyEsu_5500.DiscardUnknown(m)
}

var xxx_messageInfo_WxjyEsu_5500 proto.InternalMessageInfo

func (m *WxjyEsu_5500) GetTimeNow() string {
	if m != nil {
		return m.TimeNow
	}
	return ""
}

func (m *WxjyEsu_5500) GetXTime() []int32 {
	if m != nil {
		return m.XTime
	}
	return nil
}

func (m *WxjyEsu_5500) GetXVoltage() []int32 {
	if m != nil {
		return m.XVoltage
	}
	return nil
}

type WxjyEsuD700 struct {
	//A相输入电压
	PhaseAIn int32 `protobuf:"varint,1,opt,name=phase_a_in,json=phaseAIn,proto3" json:"phase_a_in,omitempty"`
	//B相输入电压
	PhaseBIn int32 `protobuf:"varint,2,opt,name=phase_b_in,json=phaseBIn,proto3" json:"phase_b_in,omitempty"`
	//C相输入电压
	PhaseCIn int32 `protobuf:"varint,3,opt,name=phase_c_in,json=phaseCIn,proto3" json:"phase_c_in,omitempty"`
	//A相输出电压
	PhaseAOut int32 `protobuf:"varint,4,opt,name=phase_a_out,json=phaseAOut,proto3" json:"phase_a_out,omitempty"`
	//B相输出电压
	PhaseBOut int32 `protobuf:"varint,5,opt,name=phase_b_out,json=phaseBOut,proto3" json:"phase_b_out,omitempty"`
	//C相输出电压
	PhaseCOut            int32    `protobuf:"varint,6,opt,name=phase_c_out,json=phaseCOut,proto3" json:"phase_c_out,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WxjyEsuD700) Reset()         { *m = WxjyEsuD700{} }
func (m *WxjyEsuD700) String() string { return proto.CompactTextString(m) }
func (*WxjyEsuD700) ProtoMessage()    {}
func (*WxjyEsuD700) Descriptor() ([]byte, []int) {
	return fileDescriptor_905abe2d3bf4d8dd, []int{2}
}

func (m *WxjyEsuD700) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WxjyEsuD700.Unmarshal(m, b)
}
func (m *WxjyEsuD700) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WxjyEsuD700.Marshal(b, m, deterministic)
}
func (m *WxjyEsuD700) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WxjyEsuD700.Merge(m, src)
}
func (m *WxjyEsuD700) XXX_Size() int {
	return xxx_messageInfo_WxjyEsuD700.Size(m)
}
func (m *WxjyEsuD700) XXX_DiscardUnknown() {
	xxx_messageInfo_WxjyEsuD700.DiscardUnknown(m)
}

var xxx_messageInfo_WxjyEsuD700 proto.InternalMessageInfo

func (m *WxjyEsuD700) GetPhaseAIn() int32 {
	if m != nil {
		return m.PhaseAIn
	}
	return 0
}

func (m *WxjyEsuD700) GetPhaseBIn() int32 {
	if m != nil {
		return m.PhaseBIn
	}
	return 0
}

func (m *WxjyEsuD700) GetPhaseCIn() int32 {
	if m != nil {
		return m.PhaseCIn
	}
	return 0
}

func (m *WxjyEsuD700) GetPhaseAOut() int32 {
	if m != nil {
		return m.PhaseAOut
	}
	return 0
}

func (m *WxjyEsuD700) GetPhaseBOut() int32 {
	if m != nil {
		return m.PhaseBOut
	}
	return 0
}

func (m *WxjyEsuD700) GetPhaseCOut() int32 {
	if m != nil {
		return m.PhaseCOut
	}
	return 0
}

type WxjyEsuD800 struct {
	//报警状态
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WxjyEsuD800) Reset()         { *m = WxjyEsuD800{} }
func (m *WxjyEsuD800) String() string { return proto.CompactTextString(m) }
func (*WxjyEsuD800) ProtoMessage()    {}
func (*WxjyEsuD800) Descriptor() ([]byte, []int) {
	return fileDescriptor_905abe2d3bf4d8dd, []int{3}
}

func (m *WxjyEsuD800) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WxjyEsuD800.Unmarshal(m, b)
}
func (m *WxjyEsuD800) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WxjyEsuD800.Marshal(b, m, deterministic)
}
func (m *WxjyEsuD800) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WxjyEsuD800.Merge(m, src)
}
func (m *WxjyEsuD800) XXX_Size() int {
	return xxx_messageInfo_WxjyEsuD800.Size(m)
}
func (m *WxjyEsuD800) XXX_DiscardUnknown() {
	xxx_messageInfo_WxjyEsuD800.DiscardUnknown(m)
}

var xxx_messageInfo_WxjyEsuD800 proto.InternalMessageInfo

func (m *WxjyEsuD800) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// 勃洛克单灯
type BlkSlu_6891 struct {
	// 高地址（集中器地址）
	SluId int32 `protobuf:"varint,1,opt,name=slu_id,json=sluId,proto3" json:"slu_id,omitempty"`
	// 低地址（控制器地址）
	SluitemId int32 `protobuf:"varint,2,opt,name=sluitem_id,json=sluitemId,proto3" json:"sluitem_id,omitempty"`
	// 控制器数量（1～100）/时钟时间戳/是否启动扫描
	SluitemConfig int64 `protobuf:"varint,3,opt,name=sluitem_config,json=sluitemConfig,proto3" json:"sluitem_config,omitempty"`
	// 每个控制器回路数量
	SluitemLoop []int32 `protobuf:"varint,4,rep,packed,name=sluitem_loop,json=sluitemLoop,proto3" json:"sluitem_loop,omitempty"`
	// 设备应答状态，0-失败，1-成功
	Status               int32    `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlkSlu_6891) Reset()         { *m = BlkSlu_6891{} }
func (m *BlkSlu_6891) String() string { return proto.CompactTextString(m) }
func (*BlkSlu_6891) ProtoMessage()    {}
func (*BlkSlu_6891) Descriptor() ([]byte, []int) {
	return fileDescriptor_905abe2d3bf4d8dd, []int{4}
}

func (m *BlkSlu_6891) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlkSlu_6891.Unmarshal(m, b)
}
func (m *BlkSlu_6891) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlkSlu_6891.Marshal(b, m, deterministic)
}
func (m *BlkSlu_6891) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlkSlu_6891.Merge(m, src)
}
func (m *BlkSlu_6891) XXX_Size() int {
	return xxx_messageInfo_BlkSlu_6891.Size(m)
}
func (m *BlkSlu_6891) XXX_DiscardUnknown() {
	xxx_messageInfo_BlkSlu_6891.DiscardUnknown(m)
}

var xxx_messageInfo_BlkSlu_6891 proto.InternalMessageInfo

func (m *BlkSlu_6891) GetSluId() int32 {
	if m != nil {
		return m.SluId
	}
	return 0
}

func (m *BlkSlu_6891) GetSluitemId() int32 {
	if m != nil {
		return m.SluitemId
	}
	return 0
}

func (m *BlkSlu_6891) GetSluitemConfig() int64 {
	if m != nil {
		return m.SluitemConfig
	}
	return 0
}

func (m *BlkSlu_6891) GetSluitemLoop() []int32 {
	if m != nil {
		return m.SluitemLoop
	}
	return nil
}

func (m *BlkSlu_6891) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type BlkSlu_6892 struct {
	// 高地址（集中器地址）
	SluId                int32                      `protobuf:"varint,1,opt,name=slu_id,json=sluId,proto3" json:"slu_id,omitempty"`
	SluitemData          []*BlkSlu_6892_SluitemData `protobuf:"bytes,2,rep,name=sluitem_data,json=sluitemData,proto3" json:"sluitem_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *BlkSlu_6892) Reset()         { *m = BlkSlu_6892{} }
func (m *BlkSlu_6892) String() string { return proto.CompactTextString(m) }
func (*BlkSlu_6892) ProtoMessage()    {}
func (*BlkSlu_6892) Descriptor() ([]byte, []int) {
	return fileDescriptor_905abe2d3bf4d8dd, []int{5}
}

func (m *BlkSlu_6892) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlkSlu_6892.Unmarshal(m, b)
}
func (m *BlkSlu_6892) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlkSlu_6892.Marshal(b, m, deterministic)
}
func (m *BlkSlu_6892) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlkSlu_6892.Merge(m, src)
}
func (m *BlkSlu_6892) XXX_Size() int {
	return xxx_messageInfo_BlkSlu_6892.Size(m)
}
func (m *BlkSlu_6892) XXX_DiscardUnknown() {
	xxx_messageInfo_BlkSlu_6892.DiscardUnknown(m)
}

var xxx_messageInfo_BlkSlu_6892 proto.InternalMessageInfo

func (m *BlkSlu_6892) GetSluId() int32 {
	if m != nil {
		return m.SluId
	}
	return 0
}

func (m *BlkSlu_6892) GetSluitemData() []*BlkSlu_6892_SluitemData {
	if m != nil {
		return m.SluitemData
	}
	return nil
}

type BlkSlu_6892_SluitemData struct {
	// 依次各灯头电压
	Voltage []float64 `protobuf:"fixed64,1,rep,packed,name=voltage,proto3" json:"voltage,omitempty"`
	// 依次各灯头电流
	Current []float64 `protobuf:"fixed64,2,rep,packed,name=current,proto3" json:"current,omitempty"`
	// 依次各灯头功率
	Power []float64 `protobuf:"fixed64,3,rep,packed,name=power,proto3" json:"power,omitempty"`
	// 依次各灯头错误代码，0-关灯正常,1-关灯有电流，8-开灯正常，9-开灯无电流，10-开灯功率因数低，255-设备通讯故障
	Error []int32 `protobuf:"varint,5,rep,packed,name=error,proto3" json:"error,omitempty"`
	// 依次各灯头节点
	Node []int32 `protobuf:"varint,6,rep,packed,name=node,proto3" json:"node,omitempty"`
	// 控制器地址
	SluitemId int32 `protobuf:"varint,7,opt,name=sluitem_id,json=sluitemId,proto3" json:"sluitem_id,omitempty"`
	// 控制器回路数量
	SluitemLoop          int32    `protobuf:"varint,8,opt,name=sluitem_loop,json=sluitemLoop,proto3" json:"sluitem_loop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlkSlu_6892_SluitemData) Reset()         { *m = BlkSlu_6892_SluitemData{} }
func (m *BlkSlu_6892_SluitemData) String() string { return proto.CompactTextString(m) }
func (*BlkSlu_6892_SluitemData) ProtoMessage()    {}
func (*BlkSlu_6892_SluitemData) Descriptor() ([]byte, []int) {
	return fileDescriptor_905abe2d3bf4d8dd, []int{5, 0}
}

func (m *BlkSlu_6892_SluitemData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlkSlu_6892_SluitemData.Unmarshal(m, b)
}
func (m *BlkSlu_6892_SluitemData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlkSlu_6892_SluitemData.Marshal(b, m, deterministic)
}
func (m *BlkSlu_6892_SluitemData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlkSlu_6892_SluitemData.Merge(m, src)
}
func (m *BlkSlu_6892_SluitemData) XXX_Size() int {
	return xxx_messageInfo_BlkSlu_6892_SluitemData.Size(m)
}
func (m *BlkSlu_6892_SluitemData) XXX_DiscardUnknown() {
	xxx_messageInfo_BlkSlu_6892_SluitemData.DiscardUnknown(m)
}

var xxx_messageInfo_BlkSlu_6892_SluitemData proto.InternalMessageInfo

func (m *BlkSlu_6892_SluitemData) GetVoltage() []float64 {
	if m != nil {
		return m.Voltage
	}
	return nil
}

func (m *BlkSlu_6892_SluitemData) GetCurrent() []float64 {
	if m != nil {
		return m.Current
	}
	return nil
}

func (m *BlkSlu_6892_SluitemData) GetPower() []float64 {
	if m != nil {
		return m.Power
	}
	return nil
}

func (m *BlkSlu_6892_SluitemData) GetError() []int32 {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *BlkSlu_6892_SluitemData) GetNode() []int32 {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *BlkSlu_6892_SluitemData) GetSluitemId() int32 {
	if m != nil {
		return m.SluitemId
	}
	return 0
}

func (m *BlkSlu_6892_SluitemData) GetSluitemLoop() int32 {
	if m != nil {
		return m.SluitemLoop
	}
	return 0
}

type BlkSlu_6895 struct {
	// 高地址（集中器地址）
	SluId int32 `protobuf:"varint,1,opt,name=slu_id,json=sluId,proto3" json:"slu_id,omitempty"`
	// addr_type==3时表示组地址，addr_type==4时表示单个控制器地址（单个控制器地址为255时下发0x1,0x1）
	SluitemId int32 `protobuf:"varint,2,opt,name=sluitem_id,json=sluitemId,proto3" json:"sluitem_id,omitempty"`
	// 地址类型，0-全部，1-单号，2-双号，3-组，4-单一
	AddrType int32 `protobuf:"varint,3,opt,name=addr_type,json=addrType,proto3" json:"addr_type,omitempty"`
	// 指令类型,0-清除，1-定时，3-即时
	OperationType int32 `protobuf:"varint,4,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`
	// 控制方式,按灯头数量填充，0-关灯，1-开灯，2-不操作，10～100-调光
	OperationValue []int32 `protobuf:"varint,5,rep,packed,name=operation_value,json=operationValue,proto3" json:"operation_value,omitempty"`
	// 定时序号,范围1-5
	TimerId int32 `protobuf:"varint,6,opt,name=timer_id,json=timerId,proto3" json:"timer_id,omitempty"`
	// 周设置，[周1,2,3,4,5,6,7],0-不操作，1-操作
	WeekSet []int32 `protobuf:"varint,7,rep,packed,name=week_set,json=weekSet,proto3" json:"week_set,omitempty"`
	// 时间hh×60+mm
	TimeSet int32 `protobuf:"varint,8,opt,name=time_set,json=timeSet,proto3" json:"time_set,omitempty"`
	// 命令序号，范围0-255
	CmdIdx int32 `protobuf:"varint,9,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 执行状态，0-失败，1-成功
	Status               int32    `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlkSlu_6895) Reset()         { *m = BlkSlu_6895{} }
func (m *BlkSlu_6895) String() string { return proto.CompactTextString(m) }
func (*BlkSlu_6895) ProtoMessage()    {}
func (*BlkSlu_6895) Descriptor() ([]byte, []int) {
	return fileDescriptor_905abe2d3bf4d8dd, []int{6}
}

func (m *BlkSlu_6895) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlkSlu_6895.Unmarshal(m, b)
}
func (m *BlkSlu_6895) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlkSlu_6895.Marshal(b, m, deterministic)
}
func (m *BlkSlu_6895) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlkSlu_6895.Merge(m, src)
}
func (m *BlkSlu_6895) XXX_Size() int {
	return xxx_messageInfo_BlkSlu_6895.Size(m)
}
func (m *BlkSlu_6895) XXX_DiscardUnknown() {
	xxx_messageInfo_BlkSlu_6895.DiscardUnknown(m)
}

var xxx_messageInfo_BlkSlu_6895 proto.InternalMessageInfo

func (m *BlkSlu_6895) GetSluId() int32 {
	if m != nil {
		return m.SluId
	}
	return 0
}

func (m *BlkSlu_6895) GetSluitemId() int32 {
	if m != nil {
		return m.SluitemId
	}
	return 0
}

func (m *BlkSlu_6895) GetAddrType() int32 {
	if m != nil {
		return m.AddrType
	}
	return 0
}

func (m *BlkSlu_6895) GetOperationType() int32 {
	if m != nil {
		return m.OperationType
	}
	return 0
}

func (m *BlkSlu_6895) GetOperationValue() []int32 {
	if m != nil {
		return m.OperationValue
	}
	return nil
}

func (m *BlkSlu_6895) GetTimerId() int32 {
	if m != nil {
		return m.TimerId
	}
	return 0
}

func (m *BlkSlu_6895) GetWeekSet() []int32 {
	if m != nil {
		return m.WeekSet
	}
	return nil
}

func (m *BlkSlu_6895) GetTimeSet() int32 {
	if m != nil {
		return m.TimeSet
	}
	return 0
}

func (m *BlkSlu_6895) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *BlkSlu_6895) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*AhhfRtu_6804)(nil), "wlst.pb2.Ahhf_rtu_6804")
	proto.RegisterType((*AhhfRtu_6804_SwitchOut)(nil), "wlst.pb2.Ahhf_rtu_6804.Switch_out")
	proto.RegisterType((*AhhfRtu_6804_SwitchIn)(nil), "wlst.pb2.Ahhf_rtu_6804.Switch_in")
	proto.RegisterType((*AhhfRtu_6804_SwitchInLimit)(nil), "wlst.pb2.Ahhf_rtu_6804.Switch_in_limit")
	proto.RegisterType((*WxjyEsu_5500)(nil), "wlst.pb2.Wxjy_esu_5500")
	proto.RegisterType((*WxjyEsuD700)(nil), "wlst.pb2.Wxjy_esu_d700")
	proto.RegisterType((*WxjyEsuD800)(nil), "wlst.pb2.Wxjy_esu_d800")
	proto.RegisterType((*BlkSlu_6891)(nil), "wlst.pb2.Blk_slu_6891")
	proto.RegisterType((*BlkSlu_6892)(nil), "wlst.pb2.Blk_slu_6892")
	proto.RegisterType((*BlkSlu_6892_SluitemData)(nil), "wlst.pb2.Blk_slu_6892.Sluitem_data")
	proto.RegisterType((*BlkSlu_6895)(nil), "wlst.pb2.Blk_slu_6895")
}

func init() { proto.RegisterFile("protocol_tp.proto", fileDescriptor_905abe2d3bf4d8dd) }

var fileDescriptor_905abe2d3bf4d8dd = []byte{
	// 886 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x18, 0x95, 0x93, 0xda, 0x89, 0xbf, 0x36, 0x6d, 0x99, 0x15, 0x8b, 0x37, 0x2c, 0xd0, 0x06, 0xad,
	0x1a, 0xb1, 0x22, 0x84, 0x2e, 0x85, 0xe5, 0x06, 0xa9, 0x29, 0x42, 0x44, 0x2a, 0x74, 0xe5, 0x96,
	0xe5, 0x72, 0xe4, 0xc4, 0xd3, 0xad, 0x89, 0xe3, 0xb1, 0xec, 0xf1, 0x26, 0x7d, 0x25, 0x5e, 0x00,
	0xf1, 0x06, 0xf0, 0x06, 0xbc, 0x01, 0x3c, 0x06, 0xfa, 0xc6, 0x33, 0xe3, 0x49, 0x24, 0x54, 0x89,
	0xbb, 0xcc, 0x39, 0x67, 0x8e, 0xbf, 0x5f, 0x3b, 0xf0, 0x4e, 0x5e, 0x70, 0xc1, 0xe7, 0x3c, 0xa5,
	0x22, 0x1f, 0xc9, 0xdf, 0xa4, 0xbb, 0x4a, 0x4b, 0x31, 0xca, 0x67, 0xa7, 0x83, 0xbf, 0x3d, 0xe8,
	0x9d, 0xdf, 0xdd, 0xdd, 0xd2, 0x42, 0x54, 0xf4, 0xcb, 0x97, 0xe3, 0x2f, 0xc8, 0x7b, 0xd0, 0x99,
	0x2f, 0x63, 0x9a, 0xc4, 0xeb, 0xc0, 0x39, 0x72, 0x86, 0x6e, 0xe8, 0xcd, 0x97, 0xf1, 0x34, 0x5e,
	0x93, 0x8f, 0xc0, 0x8f, 0x23, 0x11, 0xd1, 0x65, 0x54, 0x2c, 0x82, 0xd6, 0x51, 0x7b, 0xe8, 0x4e,
	0x5a, 0x87, 0x4e, 0xd8, 0x45, 0xf0, 0x87, 0xa8, 0x58, 0x90, 0x63, 0x00, 0x29, 0xc8, 0x79, 0x92,
	0x89, 0xa0, 0x6d, 0x14, 0xf2, 0xda, 0x2b, 0x04, 0xc9, 0x39, 0x40, 0xb9, 0x4a, 0xc4, 0xfc, 0x8e,
	0xf2, 0x4a, 0x04, 0x3b, 0x47, 0xce, 0x70, 0xf7, 0x74, 0x30, 0xd2, 0xd1, 0x8c, 0x36, 0x22, 0x19,
	0x5d, 0x1b, 0x65, 0xe8, 0xd7, 0xb7, 0xae, 0x2a, 0x41, 0xbe, 0x01, 0x75, 0xa0, 0x49, 0x16, 0xb8,
	0xd2, 0xe1, 0xf8, 0x01, 0x87, 0x24, 0x0b, 0xbb, 0xf5, 0x9d, 0x69, 0x46, 0xae, 0xe0, 0xc0, 0xdc,
	0xa7, 0x69, 0xb2, 0x4c, 0x44, 0xe0, 0x49, 0x97, 0x93, 0x07, 0x5d, 0x6a, 0x79, 0xd8, 0xd3, 0x5e,
	0x97, 0x78, 0x24, 0x7d, 0xf0, 0x4a, 0x11, 0x89, 0xaa, 0x0c, 0x7c, 0x93, 0xb2, 0x42, 0xfa, 0x33,
	0x80, 0x26, 0x0b, 0x32, 0x84, 0xc3, 0x26, 0x7b, 0x2a, 0xb8, 0x88, 0x52, 0x55, 0xe3, 0x7d, 0x93,
	0xdf, 0x0d, 0xa2, 0xe4, 0x13, 0x13, 0x24, 0x2a, 0x53, 0xce, 0x73, 0xab, 0xe2, 0x3d, 0x23, 0xbe,
	0xe4, 0x3c, 0xef, 0xff, 0xee, 0x80, 0x6f, 0x42, 0x24, 0x9f, 0xc1, 0xa3, 0xb7, 0x3c, 0x15, 0xd1,
	0x1b, 0x46, 0x45, 0x11, 0x65, 0xe5, 0x2d, 0x2f, 0x96, 0xac, 0x50, 0x8f, 0x21, 0x8a, 0xba, 0x69,
	0x18, 0xf2, 0x01, 0x00, 0xfa, 0xab, 0x70, 0x5a, 0x52, 0xe7, 0x23, 0x52, 0x47, 0xf2, 0x02, 0x1e,
	0xcd, 0xab, 0xa2, 0x60, 0x99, 0xd8, 0xf0, 0x6b, 0xba, 0x4b, 0x14, 0x6d, 0x7b, 0x9e, 0x40, 0x4f,
	0x5f, 0xca, 0xef, 0xa2, 0x92, 0x05, 0x3b, 0x46, 0xbe, 0xa7, 0x88, 0x57, 0x88, 0xf7, 0xff, 0x71,
	0xe0, 0x60, 0xab, 0xbc, 0x5b, 0x01, 0xb9, 0xdb, 0x01, 0x3d, 0x87, 0x03, 0x9d, 0x60, 0x95, 0xd7,
	0xfd, 0x73, 0x8e, 0xda, 0x43, 0x47, 0xba, 0xef, 0x2b, 0xea, 0xa7, 0x9a, 0x21, 0x9f, 0xc2, 0xa1,
	0x16, 0xa7, 0x7c, 0x55, 0xab, 0x5b, 0x46, 0xad, 0x8d, 0x2e, 0x15, 0x85, 0xde, 0x3a, 0x6e, 0xed,
	0xdd, 0x6e, 0xbc, 0x15, 0x65, 0x79, 0x6b, 0xb1, 0xf1, 0xde, 0x69, 0xbc, 0x15, 0xa7, 0xbd, 0x07,
	0xb7, 0xd0, 0xfb, 0x79, 0xfd, 0xcb, 0x3d, 0x65, 0x65, 0x45, 0xcf, 0xce, 0xc6, 0x63, 0xf2, 0x04,
	0xba, 0x22, 0x59, 0x32, 0x9a, 0xf1, 0x95, 0x6c, 0x8f, 0x1f, 0x76, 0xf0, 0xfc, 0x23, 0x5f, 0x91,
	0x27, 0xe0, 0xad, 0x29, 0x1e, 0xac, 0xae, 0xbb, 0xeb, 0x9b, 0x64, 0xc9, 0x70, 0x0b, 0xd7, 0x54,
	0xc5, 0x6d, 0x75, 0xa1, 0xbb, 0x7e, 0x5d, 0x63, 0x83, 0x3f, 0x1d, 0xeb, 0x41, 0xf1, 0x57, 0xe3,
	0x31, 0x79, 0x0a, 0x20, 0xbb, 0x40, 0x23, 0x5c, 0x99, 0x7a, 0x12, 0xba, 0x12, 0x39, 0x9f, 0x66,
	0x0d, 0x3b, 0x43, 0xb6, 0x65, 0xb1, 0x13, 0x9b, 0x9d, 0x23, 0xdb, 0xb6, 0xd8, 0x8b, 0x69, 0x46,
	0x3e, 0x84, 0x5d, 0xed, 0xac, 0xf7, 0xd9, 0x0d, 0xfd, 0xda, 0x1a, 0x77, 0xd5, 0xf0, 0x33, 0xc9,
	0xbb, 0x16, 0x3f, 0xd9, 0xe0, 0xe7, 0x92, 0xf7, 0x2c, 0xfe, 0xe2, 0xaa, 0x12, 0x83, 0x13, 0x3b,
	0x95, 0x97, 0xe3, 0x31, 0x79, 0x6c, 0x76, 0xad, 0xae, 0x98, 0x3a, 0x0d, 0x7e, 0x75, 0x60, 0x6f,
	0x92, 0x2e, 0x68, 0x99, 0xe2, 0xce, 0x7e, 0xfd, 0x39, 0x79, 0x17, 0x3c, 0xfc, 0x9d, 0xc4, 0x2a,
	0x5f, 0xb7, 0x4c, 0xab, 0x69, 0x8c, 0xb3, 0x55, 0xa6, 0x55, 0x22, 0xd8, 0x12, 0x29, 0x35, 0xec,
	0x0a, 0x99, 0xc6, 0xe4, 0x19, 0xec, 0x6b, 0x7a, 0xce, 0xb3, 0xdb, 0xe4, 0x8d, 0xcc, 0xb8, 0x1d,
	0xf6, 0x14, 0x7a, 0x21, 0x41, 0xf2, 0x0c, 0xf6, 0xb4, 0x4c, 0xae, 0x66, 0x33, 0xdd, 0xbb, 0x0a,
	0xc7, 0xc5, 0xb4, 0x82, 0xad, 0x13, 0xd7, 0xc1, 0xfe, 0xd1, 0xda, 0x08, 0xf6, 0xf4, 0xbf, 0x82,
	0xfd, 0xae, 0x79, 0x0c, 0xbe, 0x41, 0xe5, 0x2c, 0xec, 0x9e, 0x7e, 0xdc, 0xbc, 0xa6, 0x6c, 0x93,
	0xd1, 0xb5, 0x25, 0x35, 0x71, 0x7c, 0x1b, 0x89, 0xa8, 0xff, 0x97, 0x03, 0x7b, 0x36, 0x4b, 0x9e,
	0x42, 0x47, 0x4f, 0x50, 0xb3, 0x3a, 0x1a, 0x42, 0x56, 0xcd, 0xae, 0xb5, 0x2a, 0x1a, 0x22, 0x01,
	0xb8, 0x39, 0x5f, 0xa9, 0x37, 0x40, 0xcd, 0xd5, 0x00, 0x32, 0xac, 0x28, 0x78, 0x11, 0xb8, 0xcd,
	0xcc, 0x4a, 0x80, 0x3c, 0x86, 0x9d, 0x8c, 0xc7, 0x2c, 0xf0, 0x0c, 0x21, 0xcf, 0x5b, 0xdd, 0xe8,
	0x6c, 0x77, 0xe3, 0x78, 0xab, 0xcc, 0x5d, 0x29, 0xb0, 0x4b, 0x3c, 0xf8, 0x6d, 0xb3, 0x94, 0x67,
	0xff, 0xb3, 0xef, 0xef, 0x83, 0x1f, 0xc5, 0x71, 0x41, 0xc5, 0x7d, 0xce, 0xf4, 0x90, 0x23, 0x70,
	0x73, 0x9f, 0x33, 0x1c, 0x0a, 0x9e, 0xb3, 0x22, 0x12, 0x09, 0xcf, 0x6a, 0x45, 0x3d, 0xe7, 0x3d,
	0x83, 0x4a, 0xd9, 0x73, 0x38, 0x68, 0x64, 0x6f, 0xa3, 0xb4, 0x62, 0x56, 0x21, 0x1a, 0x87, 0xd7,
	0xc8, 0xe8, 0xdd, 0x2f, 0x30, 0x9a, 0x7a, 0xea, 0xe5, 0xee, 0x17, 0xd3, 0x18, 0xa9, 0x15, 0x63,
	0x0b, 0x5a, 0x32, 0x11, 0x74, 0xd0, 0x20, 0xec, 0xe0, 0xf9, 0x9a, 0x09, 0xf3, 0xc6, 0x40, 0xaa,
	0xdb, 0xdc, 0x42, 0xca, 0xfa, 0x6a, 0xfb, 0x1b, 0x5f, 0xed, 0x66, 0x08, 0xc1, 0x1e, 0xc2, 0x49,
	0xeb, 0x7b, 0x67, 0xe6, 0xc9, 0x7f, 0x03, 0x2f, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x93, 0x85,
	0x5f, 0x62, 0x22, 0x08, 0x00, 0x00,
}
