// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol_rtu.proto

package wlst_pb2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WlstRtuAns struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 数据标记
	DataMark []int32 `protobuf:"varint,2,rep,packed,name=data_mark,json=dataMark,proto3" json:"data_mark,omitempty"`
	// 信息点，暂不用
	DataPoint []int32 `protobuf:"varint,3,rep,packed,name=data_point,json=dataPoint,proto3" json:"data_point,omitempty"`
	// 应答,0-失败，1-成功，填充顺序和data_mark相同
	Status []int32 `protobuf:"varint,4,rep,packed,name=status,proto3" json:"status,omitempty"`
	// 状态码，详细参考文档
	StatusCode           int32    `protobuf:"varint,5,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtuAns) Reset()         { *m = WlstRtuAns{} }
func (m *WlstRtuAns) String() string { return proto.CompactTextString(m) }
func (*WlstRtuAns) ProtoMessage()    {}
func (*WlstRtuAns) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{0}
}

func (m *WlstRtuAns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtuAns.Unmarshal(m, b)
}
func (m *WlstRtuAns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtuAns.Marshal(b, m, deterministic)
}
func (m *WlstRtuAns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtuAns.Merge(m, src)
}
func (m *WlstRtuAns) XXX_Size() int {
	return xxx_messageInfo_WlstRtuAns.Size(m)
}
func (m *WlstRtuAns) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtuAns.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtuAns proto.InternalMessageInfo

func (m *WlstRtuAns) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtuAns) GetDataMark() []int32 {
	if m != nil {
		return m.DataMark
	}
	return nil
}

func (m *WlstRtuAns) GetDataPoint() []int32 {
	if m != nil {
		return m.DataPoint
	}
	return nil
}

func (m *WlstRtuAns) GetStatus() []int32 {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *WlstRtuAns) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

// 3006主动上报
type WlstRtu_7094 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 报警类型，400-火零不平衡,401-24路设备开关灯操作后应答
	AlarmType int32 `protobuf:"varint,2,opt,name=alarm_type,json=alarmType,proto3" json:"alarm_type,omitempty"`
	// 火零不平衡报警内容
	Alarmln *WlstRtu_7094_Alarm_LN `protobuf:"bytes,3,opt,name=alarmln,proto3" json:"alarmln,omitempty"`
	// 24路开关灯后操作结果，依次为1-24路输出状态，1-通，0-断
	SwitchOutStPacked    []int32  `protobuf:"varint,4,rep,packed,name=switch_out_st_packed,json=switchOutStPacked,proto3" json:"switch_out_st_packed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7094) Reset()         { *m = WlstRtu_7094{} }
func (m *WlstRtu_7094) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7094) ProtoMessage()    {}
func (*WlstRtu_7094) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{1}
}

func (m *WlstRtu_7094) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7094.Unmarshal(m, b)
}
func (m *WlstRtu_7094) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7094.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7094) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7094.Merge(m, src)
}
func (m *WlstRtu_7094) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7094.Size(m)
}
func (m *WlstRtu_7094) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7094.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7094 proto.InternalMessageInfo

func (m *WlstRtu_7094) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_7094) GetAlarmType() int32 {
	if m != nil {
		return m.AlarmType
	}
	return 0
}

func (m *WlstRtu_7094) GetAlarmln() *WlstRtu_7094_Alarm_LN {
	if m != nil {
		return m.Alarmln
	}
	return nil
}

func (m *WlstRtu_7094) GetSwitchOutStPacked() []int32 {
	if m != nil {
		return m.SwitchOutStPacked
	}
	return nil
}

type WlstRtu_7094_Alarm_LN struct {
	// 回路序号，1-12
	LoopNo int32 `protobuf:"varint,1,opt,name=loop_no,json=loopNo,proto3" json:"loop_no,omitempty"`
	// 报警类型，1-报警，2-报警并分匝
	AlarmStatus int32 `protobuf:"varint,2,opt,name=alarm_status,json=alarmStatus,proto3" json:"alarm_status,omitempty"`
	// 报警电流
	AlarmCurrent         float64  `protobuf:"fixed64,3,opt,name=alarm_current,json=alarmCurrent,proto3" json:"alarm_current,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7094_Alarm_LN) Reset()         { *m = WlstRtu_7094_Alarm_LN{} }
func (m *WlstRtu_7094_Alarm_LN) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7094_Alarm_LN) ProtoMessage()    {}
func (*WlstRtu_7094_Alarm_LN) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{1, 0}
}

func (m *WlstRtu_7094_Alarm_LN) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7094_Alarm_LN.Unmarshal(m, b)
}
func (m *WlstRtu_7094_Alarm_LN) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7094_Alarm_LN.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7094_Alarm_LN) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7094_Alarm_LN.Merge(m, src)
}
func (m *WlstRtu_7094_Alarm_LN) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7094_Alarm_LN.Size(m)
}
func (m *WlstRtu_7094_Alarm_LN) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7094_Alarm_LN.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7094_Alarm_LN proto.InternalMessageInfo

func (m *WlstRtu_7094_Alarm_LN) GetLoopNo() int32 {
	if m != nil {
		return m.LoopNo
	}
	return 0
}

func (m *WlstRtu_7094_Alarm_LN) GetAlarmStatus() int32 {
	if m != nil {
		return m.AlarmStatus
	}
	return 0
}

func (m *WlstRtu_7094_Alarm_LN) GetAlarmCurrent() float64 {
	if m != nil {
		return m.AlarmCurrent
	}
	return 0
}

// 设置/读取终端参数 （火零不平衡参数,1-24路周控制时间表）
type WlstRtu_7021 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 参数类别，1-火零不平衡参数,2-1~24路周控制时间表
	DataType int32 `protobuf:"varint,2,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	// 火零不平衡参数
	Argsln []*WlstRtu_7021_Args_LN `protobuf:"bytes,3,rep,name=argsln,proto3" json:"argsln,omitempty"`
	// 设置应答状态码
	StatusCode int32 `protobuf:"varint,4,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	// 回路代码 0-1~8回路,1-9~16回路,2-17~24回路
	LoopType int32 `protobuf:"varint,5,opt,name=loop_type,json=loopType,proto3" json:"loop_type,omitempty"`
	// 周日到周六 时间表参数(定长7)
	Argswc               []*WlstRtu_7021_Args_WC `protobuf:"bytes,6,rep,name=argswc,proto3" json:"argswc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *WlstRtu_7021) Reset()         { *m = WlstRtu_7021{} }
func (m *WlstRtu_7021) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7021) ProtoMessage()    {}
func (*WlstRtu_7021) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{2}
}

func (m *WlstRtu_7021) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7021.Unmarshal(m, b)
}
func (m *WlstRtu_7021) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7021.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7021) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7021.Merge(m, src)
}
func (m *WlstRtu_7021) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7021.Size(m)
}
func (m *WlstRtu_7021) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7021.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7021 proto.InternalMessageInfo

func (m *WlstRtu_7021) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_7021) GetDataType() int32 {
	if m != nil {
		return m.DataType
	}
	return 0
}

func (m *WlstRtu_7021) GetArgsln() []*WlstRtu_7021_Args_LN {
	if m != nil {
		return m.Argsln
	}
	return nil
}

func (m *WlstRtu_7021) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *WlstRtu_7021) GetLoopType() int32 {
	if m != nil {
		return m.LoopType
	}
	return 0
}

func (m *WlstRtu_7021) GetArgswc() []*WlstRtu_7021_Args_WC {
	if m != nil {
		return m.Argswc
	}
	return nil
}

type WlstRtu_7021_Args_LN struct {
	// 回路启用标识,1-12回路序号,填充回路号,超范围无视,不启用的回路不用填充
	LoopNo int32 `protobuf:"varint,1,opt,name=loop_no,json=loopNo,proto3" json:"loop_no,omitempty"`
	// 基础值(0-200)
	BaseValue int32 `protobuf:"varint,2,opt,name=base_value,json=baseValue,proto3" json:"base_value,omitempty"`
	// 报警阀值(0-200)
	AlarmValue int32 `protobuf:"varint,3,opt,name=alarm_value,json=alarmValue,proto3" json:"alarm_value,omitempty"`
	// 分闸阀值(0-200)
	BreakValue           int32    `protobuf:"varint,4,opt,name=break_value,json=breakValue,proto3" json:"break_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7021_Args_LN) Reset()         { *m = WlstRtu_7021_Args_LN{} }
func (m *WlstRtu_7021_Args_LN) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7021_Args_LN) ProtoMessage()    {}
func (*WlstRtu_7021_Args_LN) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{2, 0}
}

func (m *WlstRtu_7021_Args_LN) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7021_Args_LN.Unmarshal(m, b)
}
func (m *WlstRtu_7021_Args_LN) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7021_Args_LN.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7021_Args_LN) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7021_Args_LN.Merge(m, src)
}
func (m *WlstRtu_7021_Args_LN) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7021_Args_LN.Size(m)
}
func (m *WlstRtu_7021_Args_LN) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7021_Args_LN.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7021_Args_LN proto.InternalMessageInfo

func (m *WlstRtu_7021_Args_LN) GetLoopNo() int32 {
	if m != nil {
		return m.LoopNo
	}
	return 0
}

func (m *WlstRtu_7021_Args_LN) GetBaseValue() int32 {
	if m != nil {
		return m.BaseValue
	}
	return 0
}

func (m *WlstRtu_7021_Args_LN) GetAlarmValue() int32 {
	if m != nil {
		return m.AlarmValue
	}
	return 0
}

func (m *WlstRtu_7021_Args_LN) GetBreakValue() int32 {
	if m != nil {
		return m.BreakValue
	}
	return 0
}

type WlstRtu_7021_Args_WC struct {
	// L1开灯时间(时*60+分钟,不操作填1500)
	L1On int32 `protobuf:"varint,1,opt,name=l1_on,json=l1On,proto3" json:"l1_on,omitempty"`
	// L1关灯时间
	L1Off int32 `protobuf:"varint,2,opt,name=l1_off,json=l1Off,proto3" json:"l1_off,omitempty"`
	// L2开灯时间
	L2On int32 `protobuf:"varint,3,opt,name=l2_on,json=l2On,proto3" json:"l2_on,omitempty"`
	// L2关灯时间
	L2Off int32 `protobuf:"varint,4,opt,name=l2_off,json=l2Off,proto3" json:"l2_off,omitempty"`
	// L3开灯时间
	L3On int32 `protobuf:"varint,5,opt,name=l3_on,json=l3On,proto3" json:"l3_on,omitempty"`
	// L3关灯时间
	L3Off int32 `protobuf:"varint,6,opt,name=l3_off,json=l3Off,proto3" json:"l3_off,omitempty"`
	// L4开灯时间
	L4On int32 `protobuf:"varint,7,opt,name=l4_on,json=l4On,proto3" json:"l4_on,omitempty"`
	// L4关灯时间
	L4Off int32 `protobuf:"varint,8,opt,name=l4_off,json=l4Off,proto3" json:"l4_off,omitempty"`
	// L5开灯时间
	L5On int32 `protobuf:"varint,9,opt,name=l5_on,json=l5On,proto3" json:"l5_on,omitempty"`
	// L5关灯时间
	L5Off int32 `protobuf:"varint,10,opt,name=l5_off,json=l5Off,proto3" json:"l5_off,omitempty"`
	// L6开灯时间
	L6On int32 `protobuf:"varint,11,opt,name=l6_on,json=l6On,proto3" json:"l6_on,omitempty"`
	// L6关灯时间
	L6Off int32 `protobuf:"varint,12,opt,name=l6_off,json=l6Off,proto3" json:"l6_off,omitempty"`
	// L7开灯时间
	L7On int32 `protobuf:"varint,13,opt,name=l7_on,json=l7On,proto3" json:"l7_on,omitempty"`
	// L7关灯时间
	L7Off int32 `protobuf:"varint,14,opt,name=l7_off,json=l7Off,proto3" json:"l7_off,omitempty"`
	// L8开灯时间
	L8On int32 `protobuf:"varint,15,opt,name=l8_on,json=l8On,proto3" json:"l8_on,omitempty"`
	// L8关灯时间
	L8Off                int32    `protobuf:"varint,16,opt,name=l8_off,json=l8Off,proto3" json:"l8_off,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7021_Args_WC) Reset()         { *m = WlstRtu_7021_Args_WC{} }
func (m *WlstRtu_7021_Args_WC) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7021_Args_WC) ProtoMessage()    {}
func (*WlstRtu_7021_Args_WC) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{2, 1}
}

func (m *WlstRtu_7021_Args_WC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7021_Args_WC.Unmarshal(m, b)
}
func (m *WlstRtu_7021_Args_WC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7021_Args_WC.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7021_Args_WC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7021_Args_WC.Merge(m, src)
}
func (m *WlstRtu_7021_Args_WC) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7021_Args_WC.Size(m)
}
func (m *WlstRtu_7021_Args_WC) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7021_Args_WC.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7021_Args_WC proto.InternalMessageInfo

func (m *WlstRtu_7021_Args_WC) GetL1On() int32 {
	if m != nil {
		return m.L1On
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL1Off() int32 {
	if m != nil {
		return m.L1Off
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL2On() int32 {
	if m != nil {
		return m.L2On
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL2Off() int32 {
	if m != nil {
		return m.L2Off
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL3On() int32 {
	if m != nil {
		return m.L3On
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL3Off() int32 {
	if m != nil {
		return m.L3Off
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL4On() int32 {
	if m != nil {
		return m.L4On
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL4Off() int32 {
	if m != nil {
		return m.L4Off
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL5On() int32 {
	if m != nil {
		return m.L5On
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL5Off() int32 {
	if m != nil {
		return m.L5Off
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL6On() int32 {
	if m != nil {
		return m.L6On
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL6Off() int32 {
	if m != nil {
		return m.L6Off
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL7On() int32 {
	if m != nil {
		return m.L7On
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL7Off() int32 {
	if m != nil {
		return m.L7Off
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL8On() int32 {
	if m != nil {
		return m.L8On
	}
	return 0
}

func (m *WlstRtu_7021_Args_WC) GetL8Off() int32 {
	if m != nil {
		return m.L8Off
	}
	return 0
}

// 遥控
type WlstRtu_7023 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 参数类别，1-遥控
	DataType int32 `protobuf:"varint,2,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	// 控制参数
	Argscontrol []*WlstRtu_7023_Args_Control `protobuf:"bytes,3,rep,name=argscontrol,proto3" json:"argscontrol,omitempty"`
	// 应答状态码 0-成功
	StatusCode           int32    `protobuf:"varint,4,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7023) Reset()         { *m = WlstRtu_7023{} }
func (m *WlstRtu_7023) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7023) ProtoMessage()    {}
func (*WlstRtu_7023) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{3}
}

func (m *WlstRtu_7023) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7023.Unmarshal(m, b)
}
func (m *WlstRtu_7023) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7023.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7023) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7023.Merge(m, src)
}
func (m *WlstRtu_7023) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7023.Size(m)
}
func (m *WlstRtu_7023) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7023.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7023 proto.InternalMessageInfo

func (m *WlstRtu_7023) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_7023) GetDataType() int32 {
	if m != nil {
		return m.DataType
	}
	return 0
}

func (m *WlstRtu_7023) GetArgscontrol() []*WlstRtu_7023_Args_Control {
	if m != nil {
		return m.Argscontrol
	}
	return nil
}

func (m *WlstRtu_7023) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

type WlstRtu_7023_Args_Control struct {
	// 回路启用标识,1-24回路序号,填充回路号,超范围无视,不启用的回路不用填充
	LoopNo int32 `protobuf:"varint,1,opt,name=loop_no,json=loopNo,proto3" json:"loop_no,omitempty"`
	// 开关标识 0-关,1-开
	Operation            int32    `protobuf:"varint,2,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7023_Args_Control) Reset()         { *m = WlstRtu_7023_Args_Control{} }
func (m *WlstRtu_7023_Args_Control) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7023_Args_Control) ProtoMessage()    {}
func (*WlstRtu_7023_Args_Control) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{3, 0}
}

func (m *WlstRtu_7023_Args_Control) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7023_Args_Control.Unmarshal(m, b)
}
func (m *WlstRtu_7023_Args_Control) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7023_Args_Control.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7023_Args_Control) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7023_Args_Control.Merge(m, src)
}
func (m *WlstRtu_7023_Args_Control) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7023_Args_Control.Size(m)
}
func (m *WlstRtu_7023_Args_Control) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7023_Args_Control.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7023_Args_Control proto.InternalMessageInfo

func (m *WlstRtu_7023_Args_Control) GetLoopNo() int32 {
	if m != nil {
		return m.LoopNo
	}
	return 0
}

func (m *WlstRtu_7023_Args_Control) GetOperation() int32 {
	if m != nil {
		return m.Operation
	}
	return 0
}

// 硬件相关参数招测
type WlstRtu_705B struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 数据类型，1-硬件版本信息
	CmdType int32 `protobuf:"varint,2,opt,name=cmd_type,json=cmdType,proto3" json:"cmd_type,omitempty"`
	// 硬件版本
	HardwareVer string `protobuf:"bytes,3,opt,name=hardware_ver,json=hardwareVer,proto3" json:"hardware_ver,omitempty"`
	// 生产批次,年周 如：1820
	ProductionBatch string `protobuf:"bytes,4,opt,name=production_batch,json=productionBatch,proto3" json:"production_batch,omitempty"`
	// 生产日期,年月日
	ProductionDate string `protobuf:"bytes,5,opt,name=production_date,json=productionDate,proto3" json:"production_date,omitempty"`
	// 安装日期，年月日
	InstallationDate     string   `protobuf:"bytes,6,opt,name=installation_date,json=installationDate,proto3" json:"installation_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_705B) Reset()         { *m = WlstRtu_705B{} }
func (m *WlstRtu_705B) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_705B) ProtoMessage()    {}
func (*WlstRtu_705B) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{4}
}

func (m *WlstRtu_705B) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_705B.Unmarshal(m, b)
}
func (m *WlstRtu_705B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_705B.Marshal(b, m, deterministic)
}
func (m *WlstRtu_705B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_705B.Merge(m, src)
}
func (m *WlstRtu_705B) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_705B.Size(m)
}
func (m *WlstRtu_705B) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_705B.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_705B proto.InternalMessageInfo

func (m *WlstRtu_705B) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_705B) GetCmdType() int32 {
	if m != nil {
		return m.CmdType
	}
	return 0
}

func (m *WlstRtu_705B) GetHardwareVer() string {
	if m != nil {
		return m.HardwareVer
	}
	return ""
}

func (m *WlstRtu_705B) GetProductionBatch() string {
	if m != nil {
		return m.ProductionBatch
	}
	return ""
}

func (m *WlstRtu_705B) GetProductionDate() string {
	if m != nil {
		return m.ProductionDate
	}
	return ""
}

func (m *WlstRtu_705B) GetInstallationDate() string {
	if m != nil {
		return m.InstallationDate
	}
	return ""
}

// 电能计量
type WlstRtu_70A0 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 数据类型，1-电能计量，2-辅助数据+gps定位数据,3-24路输出选测数据
	CmdType int32 `protobuf:"varint,2,opt,name=cmd_type,json=cmdType,proto3" json:"cmd_type,omitempty"`
	// 频率，cmd_type==1时填
	Frequency float32 `protobuf:"fixed32,3,opt,name=frequency,proto3" json:"frequency,omitempty"`
	// 依次三相位电能数据
	Ee []*WlstRtu_70A0_ElectricEnergy `protobuf:"bytes,4,rep,name=ee,proto3" json:"ee,omitempty"`
	// 温度，-25-100，cmd_type==2,3时填
	Temperature int32 `protobuf:"varint,5,opt,name=temperature,proto3" json:"temperature,omitempty"`
	// 湿度，0-99%，cmd_type==2,3时填
	Humidity int32 `protobuf:"varint,6,opt,name=humidity,proto3" json:"humidity,omitempty"`
	// 主电源电压，cmd_type==2,3时填
	MainVoltage float64 `protobuf:"fixed64,7,opt,name=main_voltage,json=mainVoltage,proto3" json:"main_voltage,omitempty"`
	// 蓄电池电量，cmd_type==2时填
	BatteryPower int32 `protobuf:"varint,8,opt,name=battery_power,json=batteryPower,proto3" json:"battery_power,omitempty"`
	// 经度，cmd_type==2时填
	Longitude float64 `protobuf:"fixed64,9,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// 纬度，cmd_type==2时填
	Latitude float64 `protobuf:"fixed64,10,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// cmd_type==2时填
	Gpsargs *WlstRtu_70A0_GpsArgs `protobuf:"bytes,11,opt,name=gpsargs,proto3" json:"gpsargs,omitempty"`
	// 开关量输入状态 0-断,1-通，cmd_type==3时填
	SwitchInStPacked []int32 `protobuf:"varint,12,rep,packed,name=switch_in_st_packed,json=switchInStPacked,proto3" json:"switch_in_st_packed,omitempty"`
	// 开关量输出状态 0-断,1-通，cmd_type==3时填
	SwitchOutStPacked []int32 `protobuf:"varint,13,rep,packed,name=switch_out_st_packed,json=switchOutStPacked,proto3" json:"switch_out_st_packed,omitempty"`
	// 终端运行状态，cmd_type==3时填 [供电位0-有电,1-无电;开机申请位,0-无,1-开机;停运位,0-正常,1-停运;报警位,0-无警,1-告警;电压超限,0-正常,1-超限;电流超限,0-正常,1-超限;无电流报警,0-正常,1-报警;参数错误,0-正常,1-错误]
	TmlStPacked []int32 `protobuf:"varint,14,rep,packed,name=tml_st_packed,json=tmlStPacked,proto3" json:"tml_st_packed,omitempty"`
	// 终端复位次数[当前,昨天,前天,大前天]，cmd_type==3时填
	TmlReset []int32 `protobuf:"varint,15,rep,packed,name=tml_reset,json=tmlReset,proto3" json:"tml_reset,omitempty"`
	// 回路数量，cmd_type==3时填
	LoopCount            int32    `protobuf:"varint,16,opt,name=loop_count,json=loopCount,proto3" json:"loop_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_70A0) Reset()         { *m = WlstRtu_70A0{} }
func (m *WlstRtu_70A0) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_70A0) ProtoMessage()    {}
func (*WlstRtu_70A0) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{5}
}

func (m *WlstRtu_70A0) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_70A0.Unmarshal(m, b)
}
func (m *WlstRtu_70A0) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_70A0.Marshal(b, m, deterministic)
}
func (m *WlstRtu_70A0) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_70A0.Merge(m, src)
}
func (m *WlstRtu_70A0) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_70A0.Size(m)
}
func (m *WlstRtu_70A0) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_70A0.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_70A0 proto.InternalMessageInfo

func (m *WlstRtu_70A0) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_70A0) GetCmdType() int32 {
	if m != nil {
		return m.CmdType
	}
	return 0
}

func (m *WlstRtu_70A0) GetFrequency() float32 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *WlstRtu_70A0) GetEe() []*WlstRtu_70A0_ElectricEnergy {
	if m != nil {
		return m.Ee
	}
	return nil
}

func (m *WlstRtu_70A0) GetTemperature() int32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func (m *WlstRtu_70A0) GetHumidity() int32 {
	if m != nil {
		return m.Humidity
	}
	return 0
}

func (m *WlstRtu_70A0) GetMainVoltage() float64 {
	if m != nil {
		return m.MainVoltage
	}
	return 0
}

func (m *WlstRtu_70A0) GetBatteryPower() int32 {
	if m != nil {
		return m.BatteryPower
	}
	return 0
}

func (m *WlstRtu_70A0) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *WlstRtu_70A0) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *WlstRtu_70A0) GetGpsargs() *WlstRtu_70A0_GpsArgs {
	if m != nil {
		return m.Gpsargs
	}
	return nil
}

func (m *WlstRtu_70A0) GetSwitchInStPacked() []int32 {
	if m != nil {
		return m.SwitchInStPacked
	}
	return nil
}

func (m *WlstRtu_70A0) GetSwitchOutStPacked() []int32 {
	if m != nil {
		return m.SwitchOutStPacked
	}
	return nil
}

func (m *WlstRtu_70A0) GetTmlStPacked() []int32 {
	if m != nil {
		return m.TmlStPacked
	}
	return nil
}

func (m *WlstRtu_70A0) GetTmlReset() []int32 {
	if m != nil {
		return m.TmlReset
	}
	return nil
}

func (m *WlstRtu_70A0) GetLoopCount() int32 {
	if m != nil {
		return m.LoopCount
	}
	return 0
}

type WlstRtu_70A0_ElectricEnergy struct {
	// 电压，cmd_type==1，3时填
	Voltage float32 `protobuf:"fixed32,1,opt,name=voltage,proto3" json:"voltage,omitempty"`
	// 电流，cmd_type==1，3时填
	Current float32 `protobuf:"fixed32,2,opt,name=current,proto3" json:"current,omitempty"`
	// 功率因素，cmd_type==1时填
	PowerFactor float32 `protobuf:"fixed32,3,opt,name=power_factor,json=powerFactor,proto3" json:"power_factor,omitempty"`
	// 有功功率，cmd_type==1，3时填
	ActivePower float32 `protobuf:"fixed32,4,opt,name=active_power,json=activePower,proto3" json:"active_power,omitempty"`
	// 无功功率，cmd_type==1时填
	ReactivePower float32 `protobuf:"fixed32,5,opt,name=reactive_power,json=reactivePower,proto3" json:"reactive_power,omitempty"`
	// 有功电能，cmd_type==1时填
	ActiveEnergy float32 `protobuf:"fixed32,6,opt,name=active_energy,json=activeEnergy,proto3" json:"active_energy,omitempty"`
	// 无功电能，cmd_type==1时填
	ReactiveEnergy       float32  `protobuf:"fixed32,7,opt,name=reactive_energy,json=reactiveEnergy,proto3" json:"reactive_energy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_70A0_ElectricEnergy) Reset()         { *m = WlstRtu_70A0_ElectricEnergy{} }
func (m *WlstRtu_70A0_ElectricEnergy) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_70A0_ElectricEnergy) ProtoMessage()    {}
func (*WlstRtu_70A0_ElectricEnergy) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{5, 0}
}

func (m *WlstRtu_70A0_ElectricEnergy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_70A0_ElectricEnergy.Unmarshal(m, b)
}
func (m *WlstRtu_70A0_ElectricEnergy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_70A0_ElectricEnergy.Marshal(b, m, deterministic)
}
func (m *WlstRtu_70A0_ElectricEnergy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_70A0_ElectricEnergy.Merge(m, src)
}
func (m *WlstRtu_70A0_ElectricEnergy) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_70A0_ElectricEnergy.Size(m)
}
func (m *WlstRtu_70A0_ElectricEnergy) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_70A0_ElectricEnergy.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_70A0_ElectricEnergy proto.InternalMessageInfo

func (m *WlstRtu_70A0_ElectricEnergy) GetVoltage() float32 {
	if m != nil {
		return m.Voltage
	}
	return 0
}

func (m *WlstRtu_70A0_ElectricEnergy) GetCurrent() float32 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *WlstRtu_70A0_ElectricEnergy) GetPowerFactor() float32 {
	if m != nil {
		return m.PowerFactor
	}
	return 0
}

func (m *WlstRtu_70A0_ElectricEnergy) GetActivePower() float32 {
	if m != nil {
		return m.ActivePower
	}
	return 0
}

func (m *WlstRtu_70A0_ElectricEnergy) GetReactivePower() float32 {
	if m != nil {
		return m.ReactivePower
	}
	return 0
}

func (m *WlstRtu_70A0_ElectricEnergy) GetActiveEnergy() float32 {
	if m != nil {
		return m.ActiveEnergy
	}
	return 0
}

func (m *WlstRtu_70A0_ElectricEnergy) GetReactiveEnergy() float32 {
	if m != nil {
		return m.ReactiveEnergy
	}
	return 0
}

type WlstRtu_70A0_GpsArgs struct {
	// 定位方式:1—GPS定位,2—北斗定位,3—混合定位
	GpsType int32 `protobuf:"varint,1,opt,name=gps_type,json=gpsType,proto3" json:"gps_type,omitempty"`
	// 纬度类型：0-北纬,1-南纬
	LatType int32 `protobuf:"varint,2,opt,name=lat_type,json=latType,proto3" json:"lat_type,omitempty"`
	// 经度类型：0-东经，1-西经
	LonType int32 `protobuf:"varint,3,opt,name=lon_type,json=lonType,proto3" json:"lon_type,omitempty"`
	// 定位状态：0-未定位,1-已定位
	LocationStatus       int32    `protobuf:"varint,4,opt,name=location_status,json=locationStatus,proto3" json:"location_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_70A0_GpsArgs) Reset()         { *m = WlstRtu_70A0_GpsArgs{} }
func (m *WlstRtu_70A0_GpsArgs) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_70A0_GpsArgs) ProtoMessage()    {}
func (*WlstRtu_70A0_GpsArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{5, 1}
}

func (m *WlstRtu_70A0_GpsArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_70A0_GpsArgs.Unmarshal(m, b)
}
func (m *WlstRtu_70A0_GpsArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_70A0_GpsArgs.Marshal(b, m, deterministic)
}
func (m *WlstRtu_70A0_GpsArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_70A0_GpsArgs.Merge(m, src)
}
func (m *WlstRtu_70A0_GpsArgs) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_70A0_GpsArgs.Size(m)
}
func (m *WlstRtu_70A0_GpsArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_70A0_GpsArgs.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_70A0_GpsArgs proto.InternalMessageInfo

func (m *WlstRtu_70A0_GpsArgs) GetGpsType() int32 {
	if m != nil {
		return m.GpsType
	}
	return 0
}

func (m *WlstRtu_70A0_GpsArgs) GetLatType() int32 {
	if m != nil {
		return m.LatType
	}
	return 0
}

func (m *WlstRtu_70A0_GpsArgs) GetLonType() int32 {
	if m != nil {
		return m.LonType
	}
	return 0
}

func (m *WlstRtu_70A0_GpsArgs) GetLocationStatus() int32 {
	if m != nil {
		return m.LocationStatus
	}
	return 0
}

// sd卡数据招测
type WlstRtu_7053 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 记录类型 1-每天一条的最大电压电流数据,2-2s一条的普通选测数据
	RecordType int32 `protobuf:"varint,2,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	// 查询开始时间
	DtStart int64 `protobuf:"varint,3,opt,name=dt_start,json=dtStart,proto3" json:"dt_start,omitempty"`
	// 查询数据条数
	RecordCount int32 `protobuf:"varint,4,opt,name=record_count,json=recordCount,proto3" json:"record_count,omitempty"`
	// 查询时间间隔(单位秒)
	RecordDistance       int64    `protobuf:"varint,5,opt,name=record_distance,json=recordDistance,proto3" json:"record_distance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7053) Reset()         { *m = WlstRtu_7053{} }
func (m *WlstRtu_7053) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7053) ProtoMessage()    {}
func (*WlstRtu_7053) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{6}
}

func (m *WlstRtu_7053) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7053.Unmarshal(m, b)
}
func (m *WlstRtu_7053) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7053.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7053) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7053.Merge(m, src)
}
func (m *WlstRtu_7053) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7053.Size(m)
}
func (m *WlstRtu_7053) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7053.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7053 proto.InternalMessageInfo

func (m *WlstRtu_7053) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_7053) GetRecordType() int32 {
	if m != nil {
		return m.RecordType
	}
	return 0
}

func (m *WlstRtu_7053) GetDtStart() int64 {
	if m != nil {
		return m.DtStart
	}
	return 0
}

func (m *WlstRtu_7053) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *WlstRtu_7053) GetRecordDistance() int64 {
	if m != nil {
		return m.RecordDistance
	}
	return 0
}

// sd卡数据招测应答
type WlstRtu_70D3 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 总包数
	RecordTotal int32 `protobuf:"varint,2,opt,name=record_total,json=recordTotal,proto3" json:"record_total,omitempty"`
	// 当前序号
	RecordIdx int32 `protobuf:"varint,3,opt,name=record_idx,json=recordIdx,proto3" json:"record_idx,omitempty"`
	// 当前数据包错误标志，0：正常,1-6：sd功能错误,7：无sd卡,8:记录时间错误,9：查询开始时间错误,10：查询截止时间错误,11：时间间隔错误,12：记录类型错误,13：记录数据错误
	RecordStatus int32 `protobuf:"varint,4,opt,name=record_status,json=recordStatus,proto3" json:"record_status,omitempty"`
	// 记录类型 1-2s一条的普通选测数据,2-每天一条的最大电压电流数据
	RecordType int32 `protobuf:"varint,5,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	// 查询开始时间
	DtStart int64 `protobuf:"varint,6,opt,name=dt_start,json=dtStart,proto3" json:"dt_start,omitempty"`
	// 查询数据条数
	RecordCount int32 `protobuf:"varint,7,opt,name=record_count,json=recordCount,proto3" json:"record_count,omitempty"`
	// 查询时间间隔(单位秒)
	RecordDistance int64 `protobuf:"varint,8,opt,name=record_distance,json=recordDistance,proto3" json:"record_distance,omitempty"`
	// 数据类型1
	Data_70D0 []*WlstRtu_70D0 `protobuf:"bytes,9,rep,name=data_70d0,json=data70d0,proto3" json:"data_70d0,omitempty"`
	// 数据类型2
	Data_70D0Max         []*WlstRtu_70D0Max `protobuf:"bytes,10,rep,name=data_70d0_max,json=data70d0Max,proto3" json:"data_70d0_max,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WlstRtu_70D3) Reset()         { *m = WlstRtu_70D3{} }
func (m *WlstRtu_70D3) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_70D3) ProtoMessage()    {}
func (*WlstRtu_70D3) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{7}
}

func (m *WlstRtu_70D3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_70D3.Unmarshal(m, b)
}
func (m *WlstRtu_70D3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_70D3.Marshal(b, m, deterministic)
}
func (m *WlstRtu_70D3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_70D3.Merge(m, src)
}
func (m *WlstRtu_70D3) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_70D3.Size(m)
}
func (m *WlstRtu_70D3) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_70D3.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_70D3 proto.InternalMessageInfo

func (m *WlstRtu_70D3) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_70D3) GetRecordTotal() int32 {
	if m != nil {
		return m.RecordTotal
	}
	return 0
}

func (m *WlstRtu_70D3) GetRecordIdx() int32 {
	if m != nil {
		return m.RecordIdx
	}
	return 0
}

func (m *WlstRtu_70D3) GetRecordStatus() int32 {
	if m != nil {
		return m.RecordStatus
	}
	return 0
}

func (m *WlstRtu_70D3) GetRecordType() int32 {
	if m != nil {
		return m.RecordType
	}
	return 0
}

func (m *WlstRtu_70D3) GetDtStart() int64 {
	if m != nil {
		return m.DtStart
	}
	return 0
}

func (m *WlstRtu_70D3) GetRecordCount() int32 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *WlstRtu_70D3) GetRecordDistance() int64 {
	if m != nil {
		return m.RecordDistance
	}
	return 0
}

func (m *WlstRtu_70D3) GetData_70D0() []*WlstRtu_70D0 {
	if m != nil {
		return m.Data_70D0
	}
	return nil
}

func (m *WlstRtu_70D3) GetData_70D0Max() []*WlstRtu_70D0Max {
	if m != nil {
		return m.Data_70D0Max
	}
	return nil
}

type WlstRtu_70D0Max struct {
	// 记录时间
	DtRecord int64 `protobuf:"varint,1,opt,name=dt_record,json=dtRecord,proto3" json:"dt_record,omitempty"`
	// 记录类型
	RecordType int32 `protobuf:"varint,2,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	// 回路数量
	LoopCount            int32                      `protobuf:"varint,3,opt,name=loop_count,json=loopCount,proto3" json:"loop_count,omitempty"`
	MaxData              []*WlstRtu_70D0Max_MaxData `protobuf:"bytes,4,rep,name=max_data,json=maxData,proto3" json:"max_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *WlstRtu_70D0Max) Reset()         { *m = WlstRtu_70D0Max{} }
func (m *WlstRtu_70D0Max) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_70D0Max) ProtoMessage()    {}
func (*WlstRtu_70D0Max) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{8}
}

func (m *WlstRtu_70D0Max) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_70D0Max.Unmarshal(m, b)
}
func (m *WlstRtu_70D0Max) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_70D0Max.Marshal(b, m, deterministic)
}
func (m *WlstRtu_70D0Max) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_70D0Max.Merge(m, src)
}
func (m *WlstRtu_70D0Max) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_70D0Max.Size(m)
}
func (m *WlstRtu_70D0Max) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_70D0Max.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_70D0Max proto.InternalMessageInfo

func (m *WlstRtu_70D0Max) GetDtRecord() int64 {
	if m != nil {
		return m.DtRecord
	}
	return 0
}

func (m *WlstRtu_70D0Max) GetRecordType() int32 {
	if m != nil {
		return m.RecordType
	}
	return 0
}

func (m *WlstRtu_70D0Max) GetLoopCount() int32 {
	if m != nil {
		return m.LoopCount
	}
	return 0
}

func (m *WlstRtu_70D0Max) GetMaxData() []*WlstRtu_70D0Max_MaxData {
	if m != nil {
		return m.MaxData
	}
	return nil
}

type WlstRtu_70D0Max_MaxData struct {
	// 依次回路最大电流
	CurrentMax float64 `protobuf:"fixed64,1,opt,name=current_max,json=currentMax,proto3" json:"current_max,omitempty"`
	// 回路电流发生时间
	DtRecord             int64    `protobuf:"varint,2,opt,name=dt_record,json=dtRecord,proto3" json:"dt_record,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_70D0Max_MaxData) Reset()         { *m = WlstRtu_70D0Max_MaxData{} }
func (m *WlstRtu_70D0Max_MaxData) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_70D0Max_MaxData) ProtoMessage()    {}
func (*WlstRtu_70D0Max_MaxData) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{8, 0}
}

func (m *WlstRtu_70D0Max_MaxData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_70D0Max_MaxData.Unmarshal(m, b)
}
func (m *WlstRtu_70D0Max_MaxData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_70D0Max_MaxData.Marshal(b, m, deterministic)
}
func (m *WlstRtu_70D0Max_MaxData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_70D0Max_MaxData.Merge(m, src)
}
func (m *WlstRtu_70D0Max_MaxData) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_70D0Max_MaxData.Size(m)
}
func (m *WlstRtu_70D0Max_MaxData) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_70D0Max_MaxData.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_70D0Max_MaxData proto.InternalMessageInfo

func (m *WlstRtu_70D0Max_MaxData) GetCurrentMax() float64 {
	if m != nil {
		return m.CurrentMax
	}
	return 0
}

func (m *WlstRtu_70D0Max_MaxData) GetDtRecord() int64 {
	if m != nil {
		return m.DtRecord
	}
	return 0
}

//事件招测
type WlstRtu_7800 struct {
	// 事件类型(上下行)
	EventType int32 `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	// 分类标识(上下行)
	EventClass int32 `protobuf:"varint,2,opt,name=event_class,json=eventClass,proto3" json:"event_class,omitempty"`
	// 记录条数(上下行)
	DataNum int32 `protobuf:"varint,3,opt,name=data_num,json=dataNum,proto3" json:"data_num,omitempty"`
	// 开始时间(下行)
	DtStart int64 `protobuf:"varint,4,opt,name=dt_start,json=dtStart,proto3" json:"dt_start,omitempty"`
	// 结束时间(下行)
	DtEnd int64 `protobuf:"varint,5,opt,name=dt_end,json=dtEnd,proto3" json:"dt_end,omitempty"`
	// 总包数(上行)
	AllNum int32 `protobuf:"varint,6,opt,name=all_num,json=allNum,proto3" json:"all_num,omitempty"`
	// 当前包(上行)
	CurNum int32 `protobuf:"varint,7,opt,name=cur_num,json=curNum,proto3" json:"cur_num,omitempty"`
	// 原始数据(上行)
	RawData              string   `protobuf:"bytes,8,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7800) Reset()         { *m = WlstRtu_7800{} }
func (m *WlstRtu_7800) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7800) ProtoMessage()    {}
func (*WlstRtu_7800) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{9}
}

func (m *WlstRtu_7800) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7800.Unmarshal(m, b)
}
func (m *WlstRtu_7800) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7800.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7800) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7800.Merge(m, src)
}
func (m *WlstRtu_7800) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7800.Size(m)
}
func (m *WlstRtu_7800) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7800.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7800 proto.InternalMessageInfo

func (m *WlstRtu_7800) GetEventType() int32 {
	if m != nil {
		return m.EventType
	}
	return 0
}

func (m *WlstRtu_7800) GetEventClass() int32 {
	if m != nil {
		return m.EventClass
	}
	return 0
}

func (m *WlstRtu_7800) GetDataNum() int32 {
	if m != nil {
		return m.DataNum
	}
	return 0
}

func (m *WlstRtu_7800) GetDtStart() int64 {
	if m != nil {
		return m.DtStart
	}
	return 0
}

func (m *WlstRtu_7800) GetDtEnd() int64 {
	if m != nil {
		return m.DtEnd
	}
	return 0
}

func (m *WlstRtu_7800) GetAllNum() int32 {
	if m != nil {
		return m.AllNum
	}
	return 0
}

func (m *WlstRtu_7800) GetCurNum() int32 {
	if m != nil {
		return m.CurNum
	}
	return 0
}

func (m *WlstRtu_7800) GetRawData() string {
	if m != nil {
		return m.RawData
	}
	return ""
}

//新版选测
type WlstRtu_7050 struct {
	CmdIdx               int32    `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	DataMark             int32    `protobuf:"varint,2,opt,name=data_mark,json=dataMark,proto3" json:"data_mark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7050) Reset()         { *m = WlstRtu_7050{} }
func (m *WlstRtu_7050) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7050) ProtoMessage()    {}
func (*WlstRtu_7050) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{10}
}

func (m *WlstRtu_7050) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7050.Unmarshal(m, b)
}
func (m *WlstRtu_7050) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7050.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7050) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7050.Merge(m, src)
}
func (m *WlstRtu_7050) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7050.Size(m)
}
func (m *WlstRtu_7050) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7050.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7050 proto.InternalMessageInfo

func (m *WlstRtu_7050) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_7050) GetDataMark() int32 {
	if m != nil {
		return m.DataMark
	}
	return 0
}

type WlstRtu_70D0 struct {
	// 序号 (老版选测也将升级为该结构,若idx==-1表示为老版数据,idx>=0表示新版，idx==-2表示sd卡数据)
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 数据标示
	DataMark *WlstRtu_70D0_DataMark `protobuf:"bytes,2,opt,name=data_mark,json=dataMark,proto3" json:"data_mark,omitempty"`
	// 开关量输入状态,0-断,1-通
	SwitchInStPacked []int32 `protobuf:"varint,3,rep,packed,name=switch_in_st_packed,json=switchInStPacked,proto3" json:"switch_in_st_packed,omitempty"`
	// 开关量输出状态 0-断,1-通
	SwitchOutStPacked []int32 `protobuf:"varint,4,rep,packed,name=switch_out_st_packed,json=switchOutStPacked,proto3" json:"switch_out_st_packed,omitempty"`
	// 终端运行状态 [供电位0-有电,1-无电;开机申请位,0-无,1-开机;停运位,0-正常,1-停运;报警位,0-无警,1-告警;电压超限,0-正常,1-超限;电流超限,0-正常,1-超限;无电流报警,0-正常,1-报警;参数错误,0-正常,1-错误]
	TmlStPacked []int32 `protobuf:"varint,5,rep,packed,name=tml_st_packed,json=tmlStPacked,proto3" json:"tml_st_packed,omitempty"`
	// 温度
	Temperature int32 `protobuf:"varint,6,opt,name=temperature,proto3" json:"temperature,omitempty"`
	// gprs掉线次数
	GprsReset int32 `protobuf:"varint,7,opt,name=gprs_reset,json=gprsReset,proto3" json:"gprs_reset,omitempty"`
	// gprs信号强度
	GprsSignal int32 `protobuf:"varint,8,opt,name=gprs_signal,json=gprsSignal,proto3" json:"gprs_signal,omitempty"`
	// 终端复位次数[当前,昨天,前天,大前天]
	TmlReset []int32 `protobuf:"varint,9,rep,packed,name=tml_reset,json=tmlReset,proto3" json:"tml_reset,omitempty"`
	// 终端参数状态,0-正常,1-错误[状态和地址;工作参数;模拟量显示参数;开关量输入路数和跳变报警;开关量输出路数;开关量输入矢量;开关量输出矢量;模拟量上下限;
	//                            时空光控选择标志;1-3继电器开关灯时间;4-6继电器开关灯时间;7-8继电器开关灯时间;组地址;经纬度计算时间;经纬度和偏移;收费时间;
	//                            1-4端节假日;5-8端节假日;最后时限开关灯时间;模拟量相位;模拟量输入矢量;模拟量校准/线路检测参数;线路状态;终端参数错误]
	TmlArgsStatus []int32 `protobuf:"varint,10,rep,packed,name=tml_args_status,json=tmlArgsStatus,proto3" json:"tml_args_status,omitempty"`
	// 供电电压
	PowerSupply float64 `protobuf:"fixed64,11,opt,name=power_supply,json=powerSupply,proto3" json:"power_supply,omitempty"`
	// 采样板电压(数组长度即表示有多少采样板)
	SamplingVoltage []*WlstRtu_70D0_SamplingVoltage `protobuf:"bytes,12,rep,name=sampling_voltage,json=samplingVoltage,proto3" json:"sampling_voltage,omitempty"`
	// 回路数据(数组长度即表示有多少回路)
	AnalogData []*WlstRtu_70D0_AnalogData `protobuf:"bytes,13,rep,name=analog_data,json=analogData,proto3" json:"analog_data,omitempty"`
	// int型赋值
	SwitchInSt  int64 `protobuf:"varint,14,opt,name=switch_in_st,json=switchInSt,proto3" json:"switch_in_st,omitempty"`
	SwitchOutSt int32 `protobuf:"varint,15,opt,name=switch_out_st,json=switchOutSt,proto3" json:"switch_out_st,omitempty"`
	TmlSt       int32 `protobuf:"varint,16,opt,name=tml_st,json=tmlSt,proto3" json:"tml_st,omitempty"`
	// 满量程
	FullRange int32 `protobuf:"varint,17,opt,name=full_range,json=fullRange,proto3" json:"full_range,omitempty"`
	// 记录时间
	DtRecord int64 `protobuf:"varint,18,opt,name=dt_record,json=dtRecord,proto3" json:"dt_record,omitempty"`
	// 最后一次开关量输出状态变化原因，8个回路8个元素，0-时控，1-光控，2-主台，3-面板，4-最后时限，5-年设置
	SwitchOutReason      []int32  `protobuf:"varint,19,rep,packed,name=switch_out_reason,json=switchOutReason,proto3" json:"switch_out_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_70D0) Reset()         { *m = WlstRtu_70D0{} }
func (m *WlstRtu_70D0) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_70D0) ProtoMessage()    {}
func (*WlstRtu_70D0) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{11}
}

func (m *WlstRtu_70D0) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_70D0.Unmarshal(m, b)
}
func (m *WlstRtu_70D0) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_70D0.Marshal(b, m, deterministic)
}
func (m *WlstRtu_70D0) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_70D0.Merge(m, src)
}
func (m *WlstRtu_70D0) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_70D0.Size(m)
}
func (m *WlstRtu_70D0) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_70D0.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_70D0 proto.InternalMessageInfo

func (m *WlstRtu_70D0) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_70D0) GetDataMark() *WlstRtu_70D0_DataMark {
	if m != nil {
		return m.DataMark
	}
	return nil
}

func (m *WlstRtu_70D0) GetSwitchInStPacked() []int32 {
	if m != nil {
		return m.SwitchInStPacked
	}
	return nil
}

func (m *WlstRtu_70D0) GetSwitchOutStPacked() []int32 {
	if m != nil {
		return m.SwitchOutStPacked
	}
	return nil
}

func (m *WlstRtu_70D0) GetTmlStPacked() []int32 {
	if m != nil {
		return m.TmlStPacked
	}
	return nil
}

func (m *WlstRtu_70D0) GetTemperature() int32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func (m *WlstRtu_70D0) GetGprsReset() int32 {
	if m != nil {
		return m.GprsReset
	}
	return 0
}

func (m *WlstRtu_70D0) GetGprsSignal() int32 {
	if m != nil {
		return m.GprsSignal
	}
	return 0
}

func (m *WlstRtu_70D0) GetTmlReset() []int32 {
	if m != nil {
		return m.TmlReset
	}
	return nil
}

func (m *WlstRtu_70D0) GetTmlArgsStatus() []int32 {
	if m != nil {
		return m.TmlArgsStatus
	}
	return nil
}

func (m *WlstRtu_70D0) GetPowerSupply() float64 {
	if m != nil {
		return m.PowerSupply
	}
	return 0
}

func (m *WlstRtu_70D0) GetSamplingVoltage() []*WlstRtu_70D0_SamplingVoltage {
	if m != nil {
		return m.SamplingVoltage
	}
	return nil
}

func (m *WlstRtu_70D0) GetAnalogData() []*WlstRtu_70D0_AnalogData {
	if m != nil {
		return m.AnalogData
	}
	return nil
}

func (m *WlstRtu_70D0) GetSwitchInSt() int64 {
	if m != nil {
		return m.SwitchInSt
	}
	return 0
}

func (m *WlstRtu_70D0) GetSwitchOutSt() int32 {
	if m != nil {
		return m.SwitchOutSt
	}
	return 0
}

func (m *WlstRtu_70D0) GetTmlSt() int32 {
	if m != nil {
		return m.TmlSt
	}
	return 0
}

func (m *WlstRtu_70D0) GetFullRange() int32 {
	if m != nil {
		return m.FullRange
	}
	return 0
}

func (m *WlstRtu_70D0) GetDtRecord() int64 {
	if m != nil {
		return m.DtRecord
	}
	return 0
}

func (m *WlstRtu_70D0) GetSwitchOutReason() []int32 {
	if m != nil {
		return m.SwitchOutReason
	}
	return nil
}

type WlstRtu_70D0_DataMark struct {
	// 即时选测
	GetRunData int32 `protobuf:"varint,1,opt,name=get_run_data,json=getRunData,proto3" json:"get_run_data,omitempty"`
	// 开关量输出变化原因
	GetSwitchoutReason   int32    `protobuf:"varint,2,opt,name=get_switchout_reason,json=getSwitchoutReason,proto3" json:"get_switchout_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_70D0_DataMark) Reset()         { *m = WlstRtu_70D0_DataMark{} }
func (m *WlstRtu_70D0_DataMark) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_70D0_DataMark) ProtoMessage()    {}
func (*WlstRtu_70D0_DataMark) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{11, 0}
}

func (m *WlstRtu_70D0_DataMark) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_70D0_DataMark.Unmarshal(m, b)
}
func (m *WlstRtu_70D0_DataMark) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_70D0_DataMark.Marshal(b, m, deterministic)
}
func (m *WlstRtu_70D0_DataMark) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_70D0_DataMark.Merge(m, src)
}
func (m *WlstRtu_70D0_DataMark) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_70D0_DataMark.Size(m)
}
func (m *WlstRtu_70D0_DataMark) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_70D0_DataMark.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_70D0_DataMark proto.InternalMessageInfo

func (m *WlstRtu_70D0_DataMark) GetGetRunData() int32 {
	if m != nil {
		return m.GetRunData
	}
	return 0
}

func (m *WlstRtu_70D0_DataMark) GetGetSwitchoutReason() int32 {
	if m != nil {
		return m.GetSwitchoutReason
	}
	return 0
}

// 采样板电压
type WlstRtu_70D0_SamplingVoltage struct {
	VolA                 float64  `protobuf:"fixed64,1,opt,name=vol_a,json=volA,proto3" json:"vol_a,omitempty"`
	VolB                 float64  `protobuf:"fixed64,2,opt,name=vol_b,json=volB,proto3" json:"vol_b,omitempty"`
	VolC                 float64  `protobuf:"fixed64,3,opt,name=vol_c,json=volC,proto3" json:"vol_c,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_70D0_SamplingVoltage) Reset()         { *m = WlstRtu_70D0_SamplingVoltage{} }
func (m *WlstRtu_70D0_SamplingVoltage) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_70D0_SamplingVoltage) ProtoMessage()    {}
func (*WlstRtu_70D0_SamplingVoltage) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{11, 1}
}

func (m *WlstRtu_70D0_SamplingVoltage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_70D0_SamplingVoltage.Unmarshal(m, b)
}
func (m *WlstRtu_70D0_SamplingVoltage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_70D0_SamplingVoltage.Marshal(b, m, deterministic)
}
func (m *WlstRtu_70D0_SamplingVoltage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_70D0_SamplingVoltage.Merge(m, src)
}
func (m *WlstRtu_70D0_SamplingVoltage) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_70D0_SamplingVoltage.Size(m)
}
func (m *WlstRtu_70D0_SamplingVoltage) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_70D0_SamplingVoltage.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_70D0_SamplingVoltage proto.InternalMessageInfo

func (m *WlstRtu_70D0_SamplingVoltage) GetVolA() float64 {
	if m != nil {
		return m.VolA
	}
	return 0
}

func (m *WlstRtu_70D0_SamplingVoltage) GetVolB() float64 {
	if m != nil {
		return m.VolB
	}
	return 0
}

func (m *WlstRtu_70D0_SamplingVoltage) GetVolC() float64 {
	if m != nil {
		return m.VolC
	}
	return 0
}

type WlstRtu_70D0_AnalogData struct {
	Voltage float64 `protobuf:"fixed64,1,opt,name=voltage,proto3" json:"voltage,omitempty"`
	Current float64 `protobuf:"fixed64,2,opt,name=current,proto3" json:"current,omitempty"`
	Power   float64 `protobuf:"fixed64,3,opt,name=power,proto3" json:"power,omitempty"`
	// 电压越限0-正常，3-满量程，当idx=-1时有效
	VoltageStatus int32 `protobuf:"varint,4,opt,name=voltage_status,json=voltageStatus,proto3" json:"voltage_status,omitempty"`
	// 电压越限0-正常，3-满量程，当idx=-1时有效
	CurrentStatus        int32    `protobuf:"varint,5,opt,name=current_status,json=currentStatus,proto3" json:"current_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_70D0_AnalogData) Reset()         { *m = WlstRtu_70D0_AnalogData{} }
func (m *WlstRtu_70D0_AnalogData) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_70D0_AnalogData) ProtoMessage()    {}
func (*WlstRtu_70D0_AnalogData) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{11, 2}
}

func (m *WlstRtu_70D0_AnalogData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_70D0_AnalogData.Unmarshal(m, b)
}
func (m *WlstRtu_70D0_AnalogData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_70D0_AnalogData.Marshal(b, m, deterministic)
}
func (m *WlstRtu_70D0_AnalogData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_70D0_AnalogData.Merge(m, src)
}
func (m *WlstRtu_70D0_AnalogData) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_70D0_AnalogData.Size(m)
}
func (m *WlstRtu_70D0_AnalogData) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_70D0_AnalogData.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_70D0_AnalogData proto.InternalMessageInfo

func (m *WlstRtu_70D0_AnalogData) GetVoltage() float64 {
	if m != nil {
		return m.Voltage
	}
	return 0
}

func (m *WlstRtu_70D0_AnalogData) GetCurrent() float64 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *WlstRtu_70D0_AnalogData) GetPower() float64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *WlstRtu_70D0_AnalogData) GetVoltageStatus() int32 {
	if m != nil {
		return m.VoltageStatus
	}
	return 0
}

func (m *WlstRtu_70D0_AnalogData) GetCurrentStatus() int32 {
	if m != nil {
		return m.CurrentStatus
	}
	return 0
}

// 召测终端参数(旧版召测协议也将升级为该结构)
type WlstRtu_705A struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 指令类型，1-招测基础参数，2-招测互感比值
	CmdType              int32    `protobuf:"varint,2,opt,name=cmd_type,json=cmdType,proto3" json:"cmd_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_705A) Reset()         { *m = WlstRtu_705A{} }
func (m *WlstRtu_705A) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_705A) ProtoMessage()    {}
func (*WlstRtu_705A) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{12}
}

func (m *WlstRtu_705A) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_705A.Unmarshal(m, b)
}
func (m *WlstRtu_705A) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_705A.Marshal(b, m, deterministic)
}
func (m *WlstRtu_705A) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_705A.Merge(m, src)
}
func (m *WlstRtu_705A) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_705A.Size(m)
}
func (m *WlstRtu_705A) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_705A.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_705A proto.InternalMessageInfo

func (m *WlstRtu_705A) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_705A) GetCmdType() int32 {
	if m != nil {
		return m.CmdType
	}
	return 0
}

type WlstRtu_70Da struct {
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	//心跳周期
	KeepAlive int32 `protobuf:"varint,2,opt,name=keep_alive,json=keepAlive,proto3" json:"keep_alive,omitempty"`
	//主报周期
	AlarmCycle int32 `protobuf:"varint,3,opt,name=alarm_cycle,json=alarmCycle,proto3" json:"alarm_cycle,omitempty"`
	//报警延时
	AlarmDelay int32 `protobuf:"varint,4,opt,name=alarm_delay,json=alarmDelay,proto3" json:"alarm_delay,omitempty"`
	//开关量输出路数
	SwitchOutSum int32 `protobuf:"varint,5,opt,name=switch_out_sum,json=switchOutSum,proto3" json:"switch_out_sum,omitempty"`
	//开关量输入路数
	SwitchInSum int32 `protobuf:"varint,6,opt,name=switch_in_sum,json=switchInSum,proto3" json:"switch_in_sum,omitempty"`
	//模拟量输入路数
	AnalogSum int32 `protobuf:"varint,7,opt,name=analog_sum,json=analogSum,proto3" json:"analog_sum,omitempty"`
	//开关量输出开关时间 hhmm-hhmm
	XSwitchingTime []string `protobuf:"bytes,8,rep,name=x_switching_time,json=xSwitchingTime,proto3" json:"x_switching_time,omitempty"`
	//市付费启用时分，hhmm
	CityPayTime string `protobuf:"bytes,9,opt,name=city_pay_time,json=cityPayTime,proto3" json:"city_pay_time,omitempty"`
	//自付费启用时分，hhmm
	SelfPayTime string `protobuf:"bytes,10,opt,name=self_pay_time,json=selfPayTime,proto3" json:"self_pay_time,omitempty"`
	//各个开关量输出路数
	XSwitchOutCount []int32 `protobuf:"varint,11,rep,packed,name=x_switch_out_count,json=xSwitchOutCount,proto3" json:"x_switch_out_count,omitempty"`
	//开关量输入1-16跳变
	SwitchInHopping []int32 `protobuf:"varint,12,rep,packed,name=switch_in_hopping,json=switchInHopping,proto3" json:"switch_in_hopping,omitempty"`
	//电压量程
	VoltageRange int32 `protobuf:"varint,13,opt,name=voltage_range,json=voltageRange,proto3" json:"voltage_range,omitempty"`
	//模拟量回路x电流量程
	XCurrentRange []int32 `protobuf:"varint,14,rep,packed,name=x_current_range,json=xCurrentRange,proto3" json:"x_current_range,omitempty"`
	//开关量输出x矢量
	XSwitchOutVector []int32 `protobuf:"varint,15,rep,packed,name=x_switch_out_vector,json=xSwitchOutVector,proto3" json:"x_switch_out_vector,omitempty"`
	//开关量输入x矢量
	XSwitchInVector []int32 `protobuf:"varint,16,rep,packed,name=x_switch_in_vector,json=xSwitchInVector,proto3" json:"x_switch_in_vector,omitempty"`
	//模拟量x失量
	XAnalogVector []int32 `protobuf:"varint,17,rep,packed,name=x_analog_vector,json=xAnalogVector,proto3" json:"x_analog_vector,omitempty"`
	//电压上限
	UpperVoltageLimit int32 `protobuf:"varint,18,opt,name=upper_voltage_limit,json=upperVoltageLimit,proto3" json:"upper_voltage_limit,omitempty"`
	//电压下限
	LowerVoltageLimit int32 `protobuf:"varint,19,opt,name=lower_voltage_limit,json=lowerVoltageLimit,proto3" json:"lower_voltage_limit,omitempty"`
	//模拟量回路x电流上限
	XUpperCurrentLimit []int32 `protobuf:"varint,20,rep,packed,name=x_upper_current_limit,json=xUpperCurrentLimit,proto3" json:"x_upper_current_limit,omitempty"`
	//模拟量回路x电流下限
	XLowerCurrentLimit []int32 `protobuf:"varint,21,rep,packed,name=x_lower_current_limit,json=xLowerCurrentLimit,proto3" json:"x_lower_current_limit,omitempty"`
	//优先组地址
	GroupId int32 `protobuf:"varint,22,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// 指令类型，1-招测基础参数，2-招测互感比值
	CmdType int32 `protobuf:"varint,23,opt,name=cmd_type,json=cmdType,proto3" json:"cmd_type,omitempty"`
	// ABC三项电能板互感比
	Transformers         []int32  `protobuf:"varint,24,rep,packed,name=transformers,proto3" json:"transformers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_70Da) Reset()         { *m = WlstRtu_70Da{} }
func (m *WlstRtu_70Da) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_70Da) ProtoMessage()    {}
func (*WlstRtu_70Da) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{13}
}

func (m *WlstRtu_70Da) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_70Da.Unmarshal(m, b)
}
func (m *WlstRtu_70Da) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_70Da.Marshal(b, m, deterministic)
}
func (m *WlstRtu_70Da) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_70Da.Merge(m, src)
}
func (m *WlstRtu_70Da) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_70Da.Size(m)
}
func (m *WlstRtu_70Da) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_70Da.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_70Da proto.InternalMessageInfo

func (m *WlstRtu_70Da) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_70Da) GetKeepAlive() int32 {
	if m != nil {
		return m.KeepAlive
	}
	return 0
}

func (m *WlstRtu_70Da) GetAlarmCycle() int32 {
	if m != nil {
		return m.AlarmCycle
	}
	return 0
}

func (m *WlstRtu_70Da) GetAlarmDelay() int32 {
	if m != nil {
		return m.AlarmDelay
	}
	return 0
}

func (m *WlstRtu_70Da) GetSwitchOutSum() int32 {
	if m != nil {
		return m.SwitchOutSum
	}
	return 0
}

func (m *WlstRtu_70Da) GetSwitchInSum() int32 {
	if m != nil {
		return m.SwitchInSum
	}
	return 0
}

func (m *WlstRtu_70Da) GetAnalogSum() int32 {
	if m != nil {
		return m.AnalogSum
	}
	return 0
}

func (m *WlstRtu_70Da) GetXSwitchingTime() []string {
	if m != nil {
		return m.XSwitchingTime
	}
	return nil
}

func (m *WlstRtu_70Da) GetCityPayTime() string {
	if m != nil {
		return m.CityPayTime
	}
	return ""
}

func (m *WlstRtu_70Da) GetSelfPayTime() string {
	if m != nil {
		return m.SelfPayTime
	}
	return ""
}

func (m *WlstRtu_70Da) GetXSwitchOutCount() []int32 {
	if m != nil {
		return m.XSwitchOutCount
	}
	return nil
}

func (m *WlstRtu_70Da) GetSwitchInHopping() []int32 {
	if m != nil {
		return m.SwitchInHopping
	}
	return nil
}

func (m *WlstRtu_70Da) GetVoltageRange() int32 {
	if m != nil {
		return m.VoltageRange
	}
	return 0
}

func (m *WlstRtu_70Da) GetXCurrentRange() []int32 {
	if m != nil {
		return m.XCurrentRange
	}
	return nil
}

func (m *WlstRtu_70Da) GetXSwitchOutVector() []int32 {
	if m != nil {
		return m.XSwitchOutVector
	}
	return nil
}

func (m *WlstRtu_70Da) GetXSwitchInVector() []int32 {
	if m != nil {
		return m.XSwitchInVector
	}
	return nil
}

func (m *WlstRtu_70Da) GetXAnalogVector() []int32 {
	if m != nil {
		return m.XAnalogVector
	}
	return nil
}

func (m *WlstRtu_70Da) GetUpperVoltageLimit() int32 {
	if m != nil {
		return m.UpperVoltageLimit
	}
	return 0
}

func (m *WlstRtu_70Da) GetLowerVoltageLimit() int32 {
	if m != nil {
		return m.LowerVoltageLimit
	}
	return 0
}

func (m *WlstRtu_70Da) GetXUpperCurrentLimit() []int32 {
	if m != nil {
		return m.XUpperCurrentLimit
	}
	return nil
}

func (m *WlstRtu_70Da) GetXLowerCurrentLimit() []int32 {
	if m != nil {
		return m.XLowerCurrentLimit
	}
	return nil
}

func (m *WlstRtu_70Da) GetGroupId() int32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *WlstRtu_70Da) GetCmdType() int32 {
	if m != nil {
		return m.CmdType
	}
	return 0
}

func (m *WlstRtu_70Da) GetTransformers() []int32 {
	if m != nil {
		return m.Transformers
	}
	return nil
}

//远程修改主板通讯参数
type WlstRtu_700A struct {
	ComArgv              []int32  `protobuf:"varint,1,rep,packed,name=com_argv,json=comArgv,proto3" json:"com_argv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_700A) Reset()         { *m = WlstRtu_700A{} }
func (m *WlstRtu_700A) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_700A) ProtoMessage()    {}
func (*WlstRtu_700A) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{14}
}

func (m *WlstRtu_700A) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_700A.Unmarshal(m, b)
}
func (m *WlstRtu_700A) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_700A.Marshal(b, m, deterministic)
}
func (m *WlstRtu_700A) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_700A.Merge(m, src)
}
func (m *WlstRtu_700A) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_700A.Size(m)
}
func (m *WlstRtu_700A) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_700A.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_700A proto.InternalMessageInfo

func (m *WlstRtu_700A) GetComArgv() []int32 {
	if m != nil {
		return m.ComArgv
	}
	return nil
}

//模块ftp升级
type WlstRtu_7010 struct {
	// 复位类型，1-复位终端，2-恢复出厂参数，3-复位通信模块，4-火零不平衡复位
	DataMark int32 `protobuf:"varint,1,opt,name=data_mark,json=dataMark,proto3" json:"data_mark,omitempty"`
	//序号
	CmdIdx int32 `protobuf:"varint,2,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 应答
	Status               int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7010) Reset()         { *m = WlstRtu_7010{} }
func (m *WlstRtu_7010) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7010) ProtoMessage()    {}
func (*WlstRtu_7010) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{15}
}

func (m *WlstRtu_7010) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7010.Unmarshal(m, b)
}
func (m *WlstRtu_7010) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7010.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7010) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7010.Merge(m, src)
}
func (m *WlstRtu_7010) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7010.Size(m)
}
func (m *WlstRtu_7010) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7010.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7010 proto.InternalMessageInfo

func (m *WlstRtu_7010) GetDataMark() int32 {
	if m != nil {
		return m.DataMark
	}
	return 0
}

func (m *WlstRtu_7010) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_7010) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

//模块ftp升级
type WlstRtu_7003 struct {
	//序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	//ftp升级命令数据
	FtpData              []int32  `protobuf:"varint,2,rep,packed,name=ftp_data,json=ftpData,proto3" json:"ftp_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7003) Reset()         { *m = WlstRtu_7003{} }
func (m *WlstRtu_7003) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7003) ProtoMessage()    {}
func (*WlstRtu_7003) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{16}
}

func (m *WlstRtu_7003) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7003.Unmarshal(m, b)
}
func (m *WlstRtu_7003) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7003.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7003) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7003.Merge(m, src)
}
func (m *WlstRtu_7003) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7003.Size(m)
}
func (m *WlstRtu_7003) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7003.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7003 proto.InternalMessageInfo

func (m *WlstRtu_7003) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_7003) GetFtpData() []int32 {
	if m != nil {
		return m.FtpData
	}
	return nil
}

//3006终端升级准备
type WlstRtu_7006 struct {
	//序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	//总数
	AllCount int32 `protobuf:"varint,2,opt,name=all_count,json=allCount,proto3" json:"all_count,omitempty"`
	//cache文件名
	CacheName            string   `protobuf:"bytes,3,opt,name=cache_name,json=cacheName,proto3" json:"cache_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7006) Reset()         { *m = WlstRtu_7006{} }
func (m *WlstRtu_7006) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7006) ProtoMessage()    {}
func (*WlstRtu_7006) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{17}
}

func (m *WlstRtu_7006) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7006.Unmarshal(m, b)
}
func (m *WlstRtu_7006) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7006.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7006) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7006.Merge(m, src)
}
func (m *WlstRtu_7006) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7006.Size(m)
}
func (m *WlstRtu_7006) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7006.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7006 proto.InternalMessageInfo

func (m *WlstRtu_7006) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_7006) GetAllCount() int32 {
	if m != nil {
		return m.AllCount
	}
	return 0
}

func (m *WlstRtu_7006) GetCacheName() string {
	if m != nil {
		return m.CacheName
	}
	return ""
}

//3006终端升级数据包发送状态查询
type WlstRtu_7007 struct {
	//序号
	CmdIdx               int32    `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7007) Reset()         { *m = WlstRtu_7007{} }
func (m *WlstRtu_7007) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7007) ProtoMessage()    {}
func (*WlstRtu_7007) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{18}
}

func (m *WlstRtu_7007) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7007.Unmarshal(m, b)
}
func (m *WlstRtu_7007) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7007.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7007) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7007.Merge(m, src)
}
func (m *WlstRtu_7007) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7007.Size(m)
}
func (m *WlstRtu_7007) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7007.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7007 proto.InternalMessageInfo

func (m *WlstRtu_7007) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

//3006终端数据包状态查询应答
//Wlst_rtu_7083
type WlstRtu_7087 struct {
	//序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	//状态 0-数据包正常，>0数据包异常
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	//失败的数据包编号
	FailedPackages []int32 `protobuf:"varint,3,rep,packed,name=failed_packages,json=failedPackages,proto3" json:"failed_packages,omitempty"`
	//设备传回的失败标识字节数
	BytesCount           int32    `protobuf:"varint,4,opt,name=bytes_count,json=bytesCount,proto3" json:"bytes_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7087) Reset()         { *m = WlstRtu_7087{} }
func (m *WlstRtu_7087) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7087) ProtoMessage()    {}
func (*WlstRtu_7087) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{19}
}

func (m *WlstRtu_7087) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7087.Unmarshal(m, b)
}
func (m *WlstRtu_7087) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7087.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7087) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7087.Merge(m, src)
}
func (m *WlstRtu_7087) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7087.Size(m)
}
func (m *WlstRtu_7087) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7087.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7087 proto.InternalMessageInfo

func (m *WlstRtu_7087) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_7087) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *WlstRtu_7087) GetFailedPackages() []int32 {
	if m != nil {
		return m.FailedPackages
	}
	return nil
}

func (m *WlstRtu_7087) GetBytesCount() int32 {
	if m != nil {
		return m.BytesCount
	}
	return 0
}

// 终端升级上报
type WlstRtu_7081 struct {
	// 序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 状态
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	// 旧版本
	OldVer string `protobuf:"bytes,3,opt,name=old_ver,json=oldVer,proto3" json:"old_ver,omitempty"`
	// 新版本
	NewVer string `protobuf:"bytes,4,opt,name=new_ver,json=newVer,proto3" json:"new_ver,omitempty"`
	// 位置关系
	DataLocation         int32    `protobuf:"varint,5,opt,name=data_location,json=dataLocation,proto3" json:"data_location,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7081) Reset()         { *m = WlstRtu_7081{} }
func (m *WlstRtu_7081) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7081) ProtoMessage()    {}
func (*WlstRtu_7081) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{20}
}

func (m *WlstRtu_7081) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7081.Unmarshal(m, b)
}
func (m *WlstRtu_7081) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7081.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7081) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7081.Merge(m, src)
}
func (m *WlstRtu_7081) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7081.Size(m)
}
func (m *WlstRtu_7081) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7081.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7081 proto.InternalMessageInfo

func (m *WlstRtu_7081) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_7081) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *WlstRtu_7081) GetOldVer() string {
	if m != nil {
		return m.OldVer
	}
	return ""
}

func (m *WlstRtu_7081) GetNewVer() string {
	if m != nil {
		return m.NewVer
	}
	return ""
}

func (m *WlstRtu_7081) GetDataLocation() int32 {
	if m != nil {
		return m.DataLocation
	}
	return 0
}

//3006终端升级发送数据包
type WlstRtu_7008 struct {
	//序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	//数据
	UpdData []string `protobuf:"bytes,2,rep,name=upd_data,json=updData,proto3" json:"upd_data,omitempty"`
	//cache文件名
	CacheName string `protobuf:"bytes,3,opt,name=cache_name,json=cacheName,proto3" json:"cache_name,omitempty"`
	//0-写缓存，1-清缓存
	Clean                int32    `protobuf:"varint,4,opt,name=clean,proto3" json:"clean,omitempty"`
	IntUpdData           []int32  `protobuf:"varint,5,rep,packed,name=int_upd_data,json=intUpdData,proto3" json:"int_upd_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7008) Reset()         { *m = WlstRtu_7008{} }
func (m *WlstRtu_7008) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7008) ProtoMessage()    {}
func (*WlstRtu_7008) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{21}
}

func (m *WlstRtu_7008) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7008.Unmarshal(m, b)
}
func (m *WlstRtu_7008) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7008.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7008) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7008.Merge(m, src)
}
func (m *WlstRtu_7008) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7008.Size(m)
}
func (m *WlstRtu_7008) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7008.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7008 proto.InternalMessageInfo

func (m *WlstRtu_7008) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_7008) GetUpdData() []string {
	if m != nil {
		return m.UpdData
	}
	return nil
}

func (m *WlstRtu_7008) GetCacheName() string {
	if m != nil {
		return m.CacheName
	}
	return ""
}

func (m *WlstRtu_7008) GetClean() int32 {
	if m != nil {
		return m.Clean
	}
	return 0
}

func (m *WlstRtu_7008) GetIntUpdData() []int32 {
	if m != nil {
		return m.IntUpdData
	}
	return nil
}

//wlst_rtu_70e1
type WlstRtu_7060 struct {
	//序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 起始时间,提取月,日
	DtStart int64 `protobuf:"varint,2,opt,name=dt_start,json=dtStart,proto3" json:"dt_start,omitempty"`
	// 天数
	Days                 int32                    `protobuf:"varint,3,opt,name=days,proto3" json:"days,omitempty"`
	YearCtrl             []*WlstRtu_7060_YearCtrl `protobuf:"bytes,4,rep,name=year_ctrl,json=yearCtrl,proto3" json:"year_ctrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *WlstRtu_7060) Reset()         { *m = WlstRtu_7060{} }
func (m *WlstRtu_7060) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7060) ProtoMessage()    {}
func (*WlstRtu_7060) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{22}
}

func (m *WlstRtu_7060) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7060.Unmarshal(m, b)
}
func (m *WlstRtu_7060) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7060.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7060) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7060.Merge(m, src)
}
func (m *WlstRtu_7060) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7060.Size(m)
}
func (m *WlstRtu_7060) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7060.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7060 proto.InternalMessageInfo

func (m *WlstRtu_7060) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_7060) GetDtStart() int64 {
	if m != nil {
		return m.DtStart
	}
	return 0
}

func (m *WlstRtu_7060) GetDays() int32 {
	if m != nil {
		return m.Days
	}
	return 0
}

func (m *WlstRtu_7060) GetYearCtrl() []*WlstRtu_7060_YearCtrl {
	if m != nil {
		return m.YearCtrl
	}
	return nil
}

type WlstRtu_7060_YearCtrl struct {
	// 回路编号
	LoopNo int32 `protobuf:"varint,1,opt,name=loop_no,json=loopNo,proto3" json:"loop_no,omitempty"`
	// 回路时段数
	TimeCount int32 `protobuf:"varint,2,opt,name=time_count,json=timeCount,proto3" json:"time_count,omitempty"`
	// 每段开关灯时间，[第一段开,第一段关,第二段开,第二段关...], 格式:hh*60+mm
	OptTime              []int32  `protobuf:"varint,3,rep,packed,name=opt_time,json=optTime,proto3" json:"opt_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7060_YearCtrl) Reset()         { *m = WlstRtu_7060_YearCtrl{} }
func (m *WlstRtu_7060_YearCtrl) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7060_YearCtrl) ProtoMessage()    {}
func (*WlstRtu_7060_YearCtrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{22, 0}
}

func (m *WlstRtu_7060_YearCtrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7060_YearCtrl.Unmarshal(m, b)
}
func (m *WlstRtu_7060_YearCtrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7060_YearCtrl.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7060_YearCtrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7060_YearCtrl.Merge(m, src)
}
func (m *WlstRtu_7060_YearCtrl) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7060_YearCtrl.Size(m)
}
func (m *WlstRtu_7060_YearCtrl) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7060_YearCtrl.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7060_YearCtrl proto.InternalMessageInfo

func (m *WlstRtu_7060_YearCtrl) GetLoopNo() int32 {
	if m != nil {
		return m.LoopNo
	}
	return 0
}

func (m *WlstRtu_7060_YearCtrl) GetTimeCount() int32 {
	if m != nil {
		return m.TimeCount
	}
	return 0
}

func (m *WlstRtu_7060_YearCtrl) GetOptTime() []int32 {
	if m != nil {
		return m.OptTime
	}
	return nil
}

type WlstRtu_7061 struct {
	//序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	// 起始时间,提取月,日
	DtStart int64 `protobuf:"varint,2,opt,name=dt_start,json=dtStart,proto3" json:"dt_start,omitempty"`
	// 天数
	Days int32 `protobuf:"varint,3,opt,name=days,proto3" json:"days,omitempty"`
	// 回路标示
	LoopNo               []int32  `protobuf:"varint,4,rep,packed,name=loop_no,json=loopNo,proto3" json:"loop_no,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7061) Reset()         { *m = WlstRtu_7061{} }
func (m *WlstRtu_7061) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7061) ProtoMessage()    {}
func (*WlstRtu_7061) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{23}
}

func (m *WlstRtu_7061) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7061.Unmarshal(m, b)
}
func (m *WlstRtu_7061) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7061.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7061) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7061.Merge(m, src)
}
func (m *WlstRtu_7061) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7061.Size(m)
}
func (m *WlstRtu_7061) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7061.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7061 proto.InternalMessageInfo

func (m *WlstRtu_7061) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_7061) GetDtStart() int64 {
	if m != nil {
		return m.DtStart
	}
	return 0
}

func (m *WlstRtu_7061) GetDays() int32 {
	if m != nil {
		return m.Days
	}
	return 0
}

func (m *WlstRtu_7061) GetLoopNo() []int32 {
	if m != nil {
		return m.LoopNo
	}
	return nil
}

type WlstRtu_70E0 struct {
	//序号
	CmdIdx int32 `protobuf:"varint,1,opt,name=cmd_idx,json=cmdIdx,proto3" json:"cmd_idx,omitempty"`
	//状态
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_70E0) Reset()         { *m = WlstRtu_70E0{} }
func (m *WlstRtu_70E0) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_70E0) ProtoMessage()    {}
func (*WlstRtu_70E0) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{24}
}

func (m *WlstRtu_70E0) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_70E0.Unmarshal(m, b)
}
func (m *WlstRtu_70E0) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_70E0.Marshal(b, m, deterministic)
}
func (m *WlstRtu_70E0) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_70E0.Merge(m, src)
}
func (m *WlstRtu_70E0) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_70E0.Size(m)
}
func (m *WlstRtu_70E0) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_70E0.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_70E0 proto.InternalMessageInfo

func (m *WlstRtu_70E0) GetCmdIdx() int32 {
	if m != nil {
		return m.CmdIdx
	}
	return 0
}

func (m *WlstRtu_70E0) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type WlstRtu_7B00 struct {
	//sim卡号码
	Sim string `protobuf:"bytes,1,opt,name=sim,proto3" json:"sim,omitempty"`
	//信号强度
	Signal               int32    `protobuf:"varint,2,opt,name=signal,proto3" json:"signal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_7B00) Reset()         { *m = WlstRtu_7B00{} }
func (m *WlstRtu_7B00) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_7B00) ProtoMessage()    {}
func (*WlstRtu_7B00) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{25}
}

func (m *WlstRtu_7B00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_7B00.Unmarshal(m, b)
}
func (m *WlstRtu_7B00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_7B00.Marshal(b, m, deterministic)
}
func (m *WlstRtu_7B00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_7B00.Merge(m, src)
}
func (m *WlstRtu_7B00) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_7B00.Size(m)
}
func (m *WlstRtu_7B00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_7B00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_7B00 proto.InternalMessageInfo

func (m *WlstRtu_7B00) GetSim() string {
	if m != nil {
		return m.Sim
	}
	return ""
}

func (m *WlstRtu_7B00) GetSignal() int32 {
	if m != nil {
		return m.Signal
	}
	return 0
}

type WlstRtu_1900 struct {
	//终端地址
	Addr int32 `protobuf:"varint,1,opt,name=addr,proto3" json:"addr,omitempty"`
	//终端ip
	TmlIp                int64    `protobuf:"varint,2,opt,name=tml_ip,json=tmlIp,proto3" json:"tml_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_1900) Reset()         { *m = WlstRtu_1900{} }
func (m *WlstRtu_1900) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_1900) ProtoMessage()    {}
func (*WlstRtu_1900) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{26}
}

func (m *WlstRtu_1900) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_1900.Unmarshal(m, b)
}
func (m *WlstRtu_1900) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_1900.Marshal(b, m, deterministic)
}
func (m *WlstRtu_1900) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_1900.Merge(m, src)
}
func (m *WlstRtu_1900) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_1900.Size(m)
}
func (m *WlstRtu_1900) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_1900.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_1900 proto.InternalMessageInfo

func (m *WlstRtu_1900) GetAddr() int32 {
	if m != nil {
		return m.Addr
	}
	return 0
}

func (m *WlstRtu_1900) GetTmlIp() int64 {
	if m != nil {
		return m.TmlIp
	}
	return 0
}

type WlstRtu_4000 struct {
	//工作标识
	WorkMark int32 `protobuf:"varint,1,opt,name=work_mark,json=workMark,proto3" json:"work_mark,omitempty"`
	//心跳周期
	KeepAlive int32 `protobuf:"varint,2,opt,name=keep_alive,json=keepAlive,proto3" json:"keep_alive,omitempty"`
	//主报周期
	AlarmCycle int32 `protobuf:"varint,3,opt,name=alarm_cycle,json=alarmCycle,proto3" json:"alarm_cycle,omitempty"`
	//报警延时
	AlarmDelay int32 `protobuf:"varint,4,opt,name=alarm_delay,json=alarmDelay,proto3" json:"alarm_delay,omitempty"`
	//回路x数量
	XLoopCount           []int32  `protobuf:"varint,5,rep,packed,name=x_loop_count,json=xLoopCount,proto3" json:"x_loop_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_4000) Reset()         { *m = WlstRtu_4000{} }
func (m *WlstRtu_4000) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_4000) ProtoMessage()    {}
func (*WlstRtu_4000) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{27}
}

func (m *WlstRtu_4000) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_4000.Unmarshal(m, b)
}
func (m *WlstRtu_4000) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_4000.Marshal(b, m, deterministic)
}
func (m *WlstRtu_4000) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_4000.Merge(m, src)
}
func (m *WlstRtu_4000) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_4000.Size(m)
}
func (m *WlstRtu_4000) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_4000.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_4000 proto.InternalMessageInfo

func (m *WlstRtu_4000) GetWorkMark() int32 {
	if m != nil {
		return m.WorkMark
	}
	return 0
}

func (m *WlstRtu_4000) GetKeepAlive() int32 {
	if m != nil {
		return m.KeepAlive
	}
	return 0
}

func (m *WlstRtu_4000) GetAlarmCycle() int32 {
	if m != nil {
		return m.AlarmCycle
	}
	return 0
}

func (m *WlstRtu_4000) GetAlarmDelay() int32 {
	if m != nil {
		return m.AlarmDelay
	}
	return 0
}

func (m *WlstRtu_4000) GetXLoopCount() []int32 {
	if m != nil {
		return m.XLoopCount
	}
	return nil
}

type WlstRtu_4101 struct {
	//模拟量输入路数总数
	AnalogSum int32 `protobuf:"varint,1,opt,name=analog_sum,json=analogSum,proto3" json:"analog_sum,omitempty"`
	//电压量程
	VoltageRange int32 `protobuf:"varint,2,opt,name=voltage_range,json=voltageRange,proto3" json:"voltage_range,omitempty"`
	//回路x电流量程
	XCurrentRange        []int32  `protobuf:"varint,3,rep,packed,name=x_current_range,json=xCurrentRange,proto3" json:"x_current_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_4101) Reset()         { *m = WlstRtu_4101{} }
func (m *WlstRtu_4101) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_4101) ProtoMessage()    {}
func (*WlstRtu_4101) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{28}
}

func (m *WlstRtu_4101) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_4101.Unmarshal(m, b)
}
func (m *WlstRtu_4101) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_4101.Marshal(b, m, deterministic)
}
func (m *WlstRtu_4101) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_4101.Merge(m, src)
}
func (m *WlstRtu_4101) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_4101.Size(m)
}
func (m *WlstRtu_4101) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_4101.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_4101 proto.InternalMessageInfo

func (m *WlstRtu_4101) GetAnalogSum() int32 {
	if m != nil {
		return m.AnalogSum
	}
	return 0
}

func (m *WlstRtu_4101) GetVoltageRange() int32 {
	if m != nil {
		return m.VoltageRange
	}
	return 0
}

func (m *WlstRtu_4101) GetXCurrentRange() []int32 {
	if m != nil {
		return m.XCurrentRange
	}
	return nil
}

type WlstRtu_4104 struct {
	//开关量输入路数总数
	SwitchinSum int32 `protobuf:"varint,1,opt,name=switchin_sum,json=switchinSum,proto3" json:"switchin_sum,omitempty"`
	//开关量输入x矢量
	XSwitchVector []int32 `protobuf:"varint,2,rep,packed,name=x_switch_vector,json=xSwitchVector,proto3" json:"x_switch_vector,omitempty"`
	//开关量输入x跳变
	XSwitchHopping       []int32  `protobuf:"varint,3,rep,packed,name=x_switch_hopping,json=xSwitchHopping,proto3" json:"x_switch_hopping,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_4104) Reset()         { *m = WlstRtu_4104{} }
func (m *WlstRtu_4104) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_4104) ProtoMessage()    {}
func (*WlstRtu_4104) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{29}
}

func (m *WlstRtu_4104) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_4104.Unmarshal(m, b)
}
func (m *WlstRtu_4104) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_4104.Marshal(b, m, deterministic)
}
func (m *WlstRtu_4104) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_4104.Merge(m, src)
}
func (m *WlstRtu_4104) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_4104.Size(m)
}
func (m *WlstRtu_4104) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_4104.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_4104 proto.InternalMessageInfo

func (m *WlstRtu_4104) GetSwitchinSum() int32 {
	if m != nil {
		return m.SwitchinSum
	}
	return 0
}

func (m *WlstRtu_4104) GetXSwitchVector() []int32 {
	if m != nil {
		return m.XSwitchVector
	}
	return nil
}

func (m *WlstRtu_4104) GetXSwitchHopping() []int32 {
	if m != nil {
		return m.XSwitchHopping
	}
	return nil
}

type WlstRtu_4110 struct {
	//开关量输入路数总数
	SwitchInSum          int32    `protobuf:"varint,1,opt,name=switch_in_sum,json=switchInSum,proto3" json:"switch_in_sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_4110) Reset()         { *m = WlstRtu_4110{} }
func (m *WlstRtu_4110) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_4110) ProtoMessage()    {}
func (*WlstRtu_4110) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{30}
}

func (m *WlstRtu_4110) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_4110.Unmarshal(m, b)
}
func (m *WlstRtu_4110) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_4110.Marshal(b, m, deterministic)
}
func (m *WlstRtu_4110) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_4110.Merge(m, src)
}
func (m *WlstRtu_4110) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_4110.Size(m)
}
func (m *WlstRtu_4110) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_4110.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_4110 proto.InternalMessageInfo

func (m *WlstRtu_4110) GetSwitchInSum() int32 {
	if m != nil {
		return m.SwitchInSum
	}
	return 0
}

// 设置电能采集版电流互感器比值
type WlstRtu_4111 struct {
	// A,B,C三项互感比，下行不需要/5,如100：5的填充100即可
	Transformers []int32 `protobuf:"varint,1,rep,packed,name=transformers,proto3" json:"transformers,omitempty"`
	// 设置状态，0-失败，1-成功
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_4111) Reset()         { *m = WlstRtu_4111{} }
func (m *WlstRtu_4111) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_4111) ProtoMessage()    {}
func (*WlstRtu_4111) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{31}
}

func (m *WlstRtu_4111) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_4111.Unmarshal(m, b)
}
func (m *WlstRtu_4111) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_4111.Marshal(b, m, deterministic)
}
func (m *WlstRtu_4111) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_4111.Merge(m, src)
}
func (m *WlstRtu_4111) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_4111.Size(m)
}
func (m *WlstRtu_4111) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_4111.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_4111 proto.InternalMessageInfo

func (m *WlstRtu_4111) GetTransformers() []int32 {
	if m != nil {
		return m.Transformers
	}
	return nil
}

func (m *WlstRtu_4111) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type WlstRtu_4200 struct {
	//模拟量x失量
	XAnalogVector []int32 `protobuf:"varint,1,rep,packed,name=x_analog_vector,json=xAnalogVector,proto3" json:"x_analog_vector,omitempty"`
	//开关量输入x矢量
	XSwitchInVector []int32 `protobuf:"varint,2,rep,packed,name=x_switch_in_vector,json=xSwitchInVector,proto3" json:"x_switch_in_vector,omitempty"`
	//开关量输出x矢量
	XSwitchOutVector []int32 `protobuf:"varint,3,rep,packed,name=x_switch_out_vector,json=xSwitchOutVector,proto3" json:"x_switch_out_vector,omitempty"`
	//模拟量输入路数总数
	AnalogSum int32 `protobuf:"varint,4,opt,name=analog_sum,json=analogSum,proto3" json:"analog_sum,omitempty"`
	//开关量输入路数总数
	SwitchInSum int32 `protobuf:"varint,5,opt,name=switch_in_sum,json=switchInSum,proto3" json:"switch_in_sum,omitempty"`
	//开关量输出数量
	SwitchOutSum         int32    `protobuf:"varint,6,opt,name=switch_out_sum,json=switchOutSum,proto3" json:"switch_out_sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_4200) Reset()         { *m = WlstRtu_4200{} }
func (m *WlstRtu_4200) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_4200) ProtoMessage()    {}
func (*WlstRtu_4200) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{32}
}

func (m *WlstRtu_4200) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_4200.Unmarshal(m, b)
}
func (m *WlstRtu_4200) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_4200.Marshal(b, m, deterministic)
}
func (m *WlstRtu_4200) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_4200.Merge(m, src)
}
func (m *WlstRtu_4200) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_4200.Size(m)
}
func (m *WlstRtu_4200) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_4200.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_4200 proto.InternalMessageInfo

func (m *WlstRtu_4200) GetXAnalogVector() []int32 {
	if m != nil {
		return m.XAnalogVector
	}
	return nil
}

func (m *WlstRtu_4200) GetXSwitchInVector() []int32 {
	if m != nil {
		return m.XSwitchInVector
	}
	return nil
}

func (m *WlstRtu_4200) GetXSwitchOutVector() []int32 {
	if m != nil {
		return m.XSwitchOutVector
	}
	return nil
}

func (m *WlstRtu_4200) GetAnalogSum() int32 {
	if m != nil {
		return m.AnalogSum
	}
	return 0
}

func (m *WlstRtu_4200) GetSwitchInSum() int32 {
	if m != nil {
		return m.SwitchInSum
	}
	return 0
}

func (m *WlstRtu_4200) GetSwitchOutSum() int32 {
	if m != nil {
		return m.SwitchOutSum
	}
	return 0
}

type WlstRtu_4401 struct {
	//模拟量输入路数总数
	AnalogSum int32 `protobuf:"varint,1,opt,name=analog_sum,json=analogSum,proto3" json:"analog_sum,omitempty"`
	//电压上限
	UpperVoltageLimit int32 `protobuf:"varint,2,opt,name=upper_voltage_limit,json=upperVoltageLimit,proto3" json:"upper_voltage_limit,omitempty"`
	//电压下限
	LowerVoltageLimit int32 `protobuf:"varint,3,opt,name=lower_voltage_limit,json=lowerVoltageLimit,proto3" json:"lower_voltage_limit,omitempty"`
	//模拟量回路x电流上限
	XUpperCurrentLimit []int32 `protobuf:"varint,4,rep,packed,name=x_upper_current_limit,json=xUpperCurrentLimit,proto3" json:"x_upper_current_limit,omitempty"`
	//模拟量回路x电流下限
	XLowerCurrentLimit []int32 `protobuf:"varint,5,rep,packed,name=x_lower_current_limit,json=xLowerCurrentLimit,proto3" json:"x_lower_current_limit,omitempty"`
	//电压量程
	VoltageRange int32 `protobuf:"varint,6,opt,name=voltage_range,json=voltageRange,proto3" json:"voltage_range,omitempty"`
	//模拟量回路x电流量程
	XCurrentRange        []int32  `protobuf:"varint,7,rep,packed,name=x_current_range,json=xCurrentRange,proto3" json:"x_current_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_4401) Reset()         { *m = WlstRtu_4401{} }
func (m *WlstRtu_4401) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_4401) ProtoMessage()    {}
func (*WlstRtu_4401) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{33}
}

func (m *WlstRtu_4401) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_4401.Unmarshal(m, b)
}
func (m *WlstRtu_4401) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_4401.Marshal(b, m, deterministic)
}
func (m *WlstRtu_4401) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_4401.Merge(m, src)
}
func (m *WlstRtu_4401) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_4401.Size(m)
}
func (m *WlstRtu_4401) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_4401.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_4401 proto.InternalMessageInfo

func (m *WlstRtu_4401) GetAnalogSum() int32 {
	if m != nil {
		return m.AnalogSum
	}
	return 0
}

func (m *WlstRtu_4401) GetUpperVoltageLimit() int32 {
	if m != nil {
		return m.UpperVoltageLimit
	}
	return 0
}

func (m *WlstRtu_4401) GetLowerVoltageLimit() int32 {
	if m != nil {
		return m.LowerVoltageLimit
	}
	return 0
}

func (m *WlstRtu_4401) GetXUpperCurrentLimit() []int32 {
	if m != nil {
		return m.XUpperCurrentLimit
	}
	return nil
}

func (m *WlstRtu_4401) GetXLowerCurrentLimit() []int32 {
	if m != nil {
		return m.XLowerCurrentLimit
	}
	return nil
}

func (m *WlstRtu_4401) GetVoltageRange() int32 {
	if m != nil {
		return m.VoltageRange
	}
	return 0
}

func (m *WlstRtu_4401) GetXCurrentRange() []int32 {
	if m != nil {
		return m.XCurrentRange
	}
	return nil
}

type WlstRtuDa00 struct {
	//心跳周期
	KeepAlive int32 `protobuf:"varint,1,opt,name=keep_alive,json=keepAlive,proto3" json:"keep_alive,omitempty"`
	//主报周期
	AlarmCycle int32 `protobuf:"varint,2,opt,name=alarm_cycle,json=alarmCycle,proto3" json:"alarm_cycle,omitempty"`
	//报警延时
	AlarmDelay int32 `protobuf:"varint,3,opt,name=alarm_delay,json=alarmDelay,proto3" json:"alarm_delay,omitempty"`
	//终端地址
	Addr int32 `protobuf:"varint,4,opt,name=addr,proto3" json:"addr,omitempty"`
	//开关量输出路数
	SwitchOutSum int32 `protobuf:"varint,5,opt,name=switch_out_sum,json=switchOutSum,proto3" json:"switch_out_sum,omitempty"`
	//开关量输入路数
	SwitchInSum int32 `protobuf:"varint,6,opt,name=switch_in_sum,json=switchInSum,proto3" json:"switch_in_sum,omitempty"`
	//模拟量输入路数
	AnalogSum int32 `protobuf:"varint,7,opt,name=analog_sum,json=analogSum,proto3" json:"analog_sum,omitempty"`
	//开关量输出开关时间 hhmm-hhmm
	XSwitchingTime []string `protobuf:"bytes,8,rep,name=x_switching_time,json=xSwitchingTime,proto3" json:"x_switching_time,omitempty"`
	//市付费启用时分，hhmm
	CityPayTime string `protobuf:"bytes,9,opt,name=city_pay_time,json=cityPayTime,proto3" json:"city_pay_time,omitempty"`
	//自付费启用时分，hhmm
	SelfPayTime string `protobuf:"bytes,10,opt,name=self_pay_time,json=selfPayTime,proto3" json:"self_pay_time,omitempty"`
	//各个开关量输出路数
	XSwitchOutCount []int32 `protobuf:"varint,11,rep,packed,name=x_switch_out_count,json=xSwitchOutCount,proto3" json:"x_switch_out_count,omitempty"`
	//开关量输入1-16跳变
	SwitchInHopping int32 `protobuf:"varint,12,opt,name=switch_in_hopping,json=switchInHopping,proto3" json:"switch_in_hopping,omitempty"`
	//电压量程
	VoltageRange int32 `protobuf:"varint,13,opt,name=voltage_range,json=voltageRange,proto3" json:"voltage_range,omitempty"`
	//模拟量回路x电流量程
	XCurrentRange []int32 `protobuf:"varint,14,rep,packed,name=x_current_range,json=xCurrentRange,proto3" json:"x_current_range,omitempty"`
	//开关量输出x矢量
	XSwitchOutVector []int32 `protobuf:"varint,15,rep,packed,name=x_switch_out_vector,json=xSwitchOutVector,proto3" json:"x_switch_out_vector,omitempty"`
	//开关量输入x矢量
	XSwitchInVector []int32 `protobuf:"varint,16,rep,packed,name=x_switch_in_vector,json=xSwitchInVector,proto3" json:"x_switch_in_vector,omitempty"`
	//模拟量x失量
	XAnalogVector []int32 `protobuf:"varint,17,rep,packed,name=x_analog_vector,json=xAnalogVector,proto3" json:"x_analog_vector,omitempty"`
	//电压上限
	UpperVoltageLimit int32 `protobuf:"varint,18,opt,name=upper_voltage_limit,json=upperVoltageLimit,proto3" json:"upper_voltage_limit,omitempty"`
	//电压下限
	LowerVoltageLimit int32 `protobuf:"varint,19,opt,name=lower_voltage_limit,json=lowerVoltageLimit,proto3" json:"lower_voltage_limit,omitempty"`
	//模拟量回路x电流上限
	XUpperCurrentLimit []int32 `protobuf:"varint,20,rep,packed,name=x_upper_current_limit,json=xUpperCurrentLimit,proto3" json:"x_upper_current_limit,omitempty"`
	//模拟量回路x电流下限
	XLowerCurrentLimit []int32 `protobuf:"varint,21,rep,packed,name=x_lower_current_limit,json=xLowerCurrentLimit,proto3" json:"x_lower_current_limit,omitempty"`
	//优先组地址
	GroupId              int32    `protobuf:"varint,22,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtuDa00) Reset()         { *m = WlstRtuDa00{} }
func (m *WlstRtuDa00) String() string { return proto.CompactTextString(m) }
func (*WlstRtuDa00) ProtoMessage()    {}
func (*WlstRtuDa00) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{34}
}

func (m *WlstRtuDa00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtuDa00.Unmarshal(m, b)
}
func (m *WlstRtuDa00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtuDa00.Marshal(b, m, deterministic)
}
func (m *WlstRtuDa00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtuDa00.Merge(m, src)
}
func (m *WlstRtuDa00) XXX_Size() int {
	return xxx_messageInfo_WlstRtuDa00.Size(m)
}
func (m *WlstRtuDa00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtuDa00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtuDa00 proto.InternalMessageInfo

func (m *WlstRtuDa00) GetKeepAlive() int32 {
	if m != nil {
		return m.KeepAlive
	}
	return 0
}

func (m *WlstRtuDa00) GetAlarmCycle() int32 {
	if m != nil {
		return m.AlarmCycle
	}
	return 0
}

func (m *WlstRtuDa00) GetAlarmDelay() int32 {
	if m != nil {
		return m.AlarmDelay
	}
	return 0
}

func (m *WlstRtuDa00) GetAddr() int32 {
	if m != nil {
		return m.Addr
	}
	return 0
}

func (m *WlstRtuDa00) GetSwitchOutSum() int32 {
	if m != nil {
		return m.SwitchOutSum
	}
	return 0
}

func (m *WlstRtuDa00) GetSwitchInSum() int32 {
	if m != nil {
		return m.SwitchInSum
	}
	return 0
}

func (m *WlstRtuDa00) GetAnalogSum() int32 {
	if m != nil {
		return m.AnalogSum
	}
	return 0
}

func (m *WlstRtuDa00) GetXSwitchingTime() []string {
	if m != nil {
		return m.XSwitchingTime
	}
	return nil
}

func (m *WlstRtuDa00) GetCityPayTime() string {
	if m != nil {
		return m.CityPayTime
	}
	return ""
}

func (m *WlstRtuDa00) GetSelfPayTime() string {
	if m != nil {
		return m.SelfPayTime
	}
	return ""
}

func (m *WlstRtuDa00) GetXSwitchOutCount() []int32 {
	if m != nil {
		return m.XSwitchOutCount
	}
	return nil
}

func (m *WlstRtuDa00) GetSwitchInHopping() int32 {
	if m != nil {
		return m.SwitchInHopping
	}
	return 0
}

func (m *WlstRtuDa00) GetVoltageRange() int32 {
	if m != nil {
		return m.VoltageRange
	}
	return 0
}

func (m *WlstRtuDa00) GetXCurrentRange() []int32 {
	if m != nil {
		return m.XCurrentRange
	}
	return nil
}

func (m *WlstRtuDa00) GetXSwitchOutVector() []int32 {
	if m != nil {
		return m.XSwitchOutVector
	}
	return nil
}

func (m *WlstRtuDa00) GetXSwitchInVector() []int32 {
	if m != nil {
		return m.XSwitchInVector
	}
	return nil
}

func (m *WlstRtuDa00) GetXAnalogVector() []int32 {
	if m != nil {
		return m.XAnalogVector
	}
	return nil
}

func (m *WlstRtuDa00) GetUpperVoltageLimit() int32 {
	if m != nil {
		return m.UpperVoltageLimit
	}
	return 0
}

func (m *WlstRtuDa00) GetLowerVoltageLimit() int32 {
	if m != nil {
		return m.LowerVoltageLimit
	}
	return 0
}

func (m *WlstRtuDa00) GetXUpperCurrentLimit() []int32 {
	if m != nil {
		return m.XUpperCurrentLimit
	}
	return nil
}

func (m *WlstRtuDa00) GetXLowerCurrentLimit() []int32 {
	if m != nil {
		return m.XLowerCurrentLimit
	}
	return nil
}

func (m *WlstRtuDa00) GetGroupId() int32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

type WlstRtuDf00 struct {
	//开关量输出开关时间 hhmm-hhmm
	XSwitchingTime []string `protobuf:"bytes,8,rep,name=x_switching_time,json=xSwitchingTime,proto3" json:"x_switching_time,omitempty"`
	//各个开关量输出路数
	XSwitchOutCount []int32 `protobuf:"varint,11,rep,packed,name=x_switch_out_count,json=xSwitchOutCount,proto3" json:"x_switch_out_count,omitempty"`
	//开关量输出x矢量
	XSwitchOutVector     []int32  `protobuf:"varint,15,rep,packed,name=x_switch_out_vector,json=xSwitchOutVector,proto3" json:"x_switch_out_vector,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtuDf00) Reset()         { *m = WlstRtuDf00{} }
func (m *WlstRtuDf00) String() string { return proto.CompactTextString(m) }
func (*WlstRtuDf00) ProtoMessage()    {}
func (*WlstRtuDf00) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{35}
}

func (m *WlstRtuDf00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtuDf00.Unmarshal(m, b)
}
func (m *WlstRtuDf00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtuDf00.Marshal(b, m, deterministic)
}
func (m *WlstRtuDf00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtuDf00.Merge(m, src)
}
func (m *WlstRtuDf00) XXX_Size() int {
	return xxx_messageInfo_WlstRtuDf00.Size(m)
}
func (m *WlstRtuDf00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtuDf00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtuDf00 proto.InternalMessageInfo

func (m *WlstRtuDf00) GetXSwitchingTime() []string {
	if m != nil {
		return m.XSwitchingTime
	}
	return nil
}

func (m *WlstRtuDf00) GetXSwitchOutCount() []int32 {
	if m != nil {
		return m.XSwitchOutCount
	}
	return nil
}

func (m *WlstRtuDf00) GetXSwitchOutVector() []int32 {
	if m != nil {
		return m.XSwitchOutVector
	}
	return nil
}

type WlstRtu_6100 struct {
	//模拟量x电压矢量
	XVoltagePhase        []int32  `protobuf:"varint,1,rep,packed,name=x_voltage_phase,json=xVoltagePhase,proto3" json:"x_voltage_phase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_6100) Reset()         { *m = WlstRtu_6100{} }
func (m *WlstRtu_6100) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_6100) ProtoMessage()    {}
func (*WlstRtu_6100) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{36}
}

func (m *WlstRtu_6100) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_6100.Unmarshal(m, b)
}
func (m *WlstRtu_6100) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_6100.Marshal(b, m, deterministic)
}
func (m *WlstRtu_6100) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_6100.Merge(m, src)
}
func (m *WlstRtu_6100) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_6100.Size(m)
}
func (m *WlstRtu_6100) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_6100.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_6100 proto.InternalMessageInfo

func (m *WlstRtu_6100) GetXVoltagePhase() []int32 {
	if m != nil {
		return m.XVoltagePhase
	}
	return nil
}

//Wlst_rtu_af00
type WlstRtuA000 struct {
	//模拟量回路x电压  需要*电压量程
	XAnalogVoltage []float64 `protobuf:"fixed64,1,rep,packed,name=x_analog_voltage,json=xAnalogVoltage,proto3" json:"x_analog_voltage,omitempty"`
	//模拟量回路x电流  需要*电流量程
	XAnalogCurrent []float64 `protobuf:"fixed64,2,rep,packed,name=x_analog_current,json=xAnalogCurrent,proto3" json:"x_analog_current,omitempty"`
	//模拟量回路x功率  需要 *电压量程*电流量程
	XAnalogPower []float64 `protobuf:"fixed64,3,rep,packed,name=x_analog_power,json=xAnalogPower,proto3" json:"x_analog_power,omitempty"`
	//开关量输入x状态
	SwitchInSt int64 `protobuf:"varint,4,opt,name=switch_in_st,json=switchInSt,proto3" json:"switch_in_st,omitempty"`
	//开关量输出状态
	SwitchOutSt int32 `protobuf:"varint,5,opt,name=switch_out_st,json=switchOutSt,proto3" json:"switch_out_st,omitempty"`
	//终端状态
	TmlSt int32 `protobuf:"varint,6,opt,name=tml_st,json=tmlSt,proto3" json:"tml_st,omitempty"`
	//模拟量回路x电流越限状态
	XCurrentStatus []int32 `protobuf:"varint,7,rep,packed,name=x_current_status,json=xCurrentStatus,proto3" json:"x_current_status,omitempty"`
	//模拟量回路x电压越限状态
	XVoltageStatus       []int32  `protobuf:"varint,8,rep,packed,name=x_voltage_status,json=xVoltageStatus,proto3" json:"x_voltage_status,omitempty"`
	FullRange            int32    `protobuf:"varint,9,opt,name=full_range,json=fullRange,proto3" json:"full_range,omitempty"`
	Temperature          int32    `protobuf:"varint,10,opt,name=temperature,proto3" json:"temperature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtuA000) Reset()         { *m = WlstRtuA000{} }
func (m *WlstRtuA000) String() string { return proto.CompactTextString(m) }
func (*WlstRtuA000) ProtoMessage()    {}
func (*WlstRtuA000) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{37}
}

func (m *WlstRtuA000) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtuA000.Unmarshal(m, b)
}
func (m *WlstRtuA000) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtuA000.Marshal(b, m, deterministic)
}
func (m *WlstRtuA000) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtuA000.Merge(m, src)
}
func (m *WlstRtuA000) XXX_Size() int {
	return xxx_messageInfo_WlstRtuA000.Size(m)
}
func (m *WlstRtuA000) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtuA000.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtuA000 proto.InternalMessageInfo

func (m *WlstRtuA000) GetXAnalogVoltage() []float64 {
	if m != nil {
		return m.XAnalogVoltage
	}
	return nil
}

func (m *WlstRtuA000) GetXAnalogCurrent() []float64 {
	if m != nil {
		return m.XAnalogCurrent
	}
	return nil
}

func (m *WlstRtuA000) GetXAnalogPower() []float64 {
	if m != nil {
		return m.XAnalogPower
	}
	return nil
}

func (m *WlstRtuA000) GetSwitchInSt() int64 {
	if m != nil {
		return m.SwitchInSt
	}
	return 0
}

func (m *WlstRtuA000) GetSwitchOutSt() int32 {
	if m != nil {
		return m.SwitchOutSt
	}
	return 0
}

func (m *WlstRtuA000) GetTmlSt() int32 {
	if m != nil {
		return m.TmlSt
	}
	return 0
}

func (m *WlstRtuA000) GetXCurrentStatus() []int32 {
	if m != nil {
		return m.XCurrentStatus
	}
	return nil
}

func (m *WlstRtuA000) GetXVoltageStatus() []int32 {
	if m != nil {
		return m.XVoltageStatus
	}
	return nil
}

func (m *WlstRtuA000) GetFullRange() int32 {
	if m != nil {
		return m.FullRange
	}
	return 0
}

func (m *WlstRtuA000) GetTemperature() int32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

//Wlst_rtu_2210
type WlstRtuA200 struct {
	//开关量输出
	KNo int32 `protobuf:"varint,1,opt,name=k_no,json=kNo,proto3" json:"k_no,omitempty"`
	//操作
	Operation            int32    `protobuf:"varint,2,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtuA200) Reset()         { *m = WlstRtuA200{} }
func (m *WlstRtuA200) String() string { return proto.CompactTextString(m) }
func (*WlstRtuA200) ProtoMessage()    {}
func (*WlstRtuA200) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{38}
}

func (m *WlstRtuA200) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtuA200.Unmarshal(m, b)
}
func (m *WlstRtuA200) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtuA200.Marshal(b, m, deterministic)
}
func (m *WlstRtuA200) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtuA200.Merge(m, src)
}
func (m *WlstRtuA200) XXX_Size() int {
	return xxx_messageInfo_WlstRtuA200.Size(m)
}
func (m *WlstRtuA200) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtuA200.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtuA200 proto.InternalMessageInfo

func (m *WlstRtuA200) GetKNo() int32 {
	if m != nil {
		return m.KNo
	}
	return 0
}

func (m *WlstRtuA200) GetOperation() int32 {
	if m != nil {
		return m.Operation
	}
	return 0
}

type WlstRtu_4B00 struct {
	//kx操作，0-关，1-开，2-不变
	Operation            []int32  `protobuf:"varint,1,rep,packed,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_4B00) Reset()         { *m = WlstRtu_4B00{} }
func (m *WlstRtu_4B00) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_4B00) ProtoMessage()    {}
func (*WlstRtu_4B00) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{39}
}

func (m *WlstRtu_4B00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_4B00.Unmarshal(m, b)
}
func (m *WlstRtu_4B00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_4B00.Marshal(b, m, deterministic)
}
func (m *WlstRtu_4B00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_4B00.Merge(m, src)
}
func (m *WlstRtu_4B00) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_4B00.Size(m)
}
func (m *WlstRtu_4B00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_4B00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_4B00 proto.InternalMessageInfo

func (m *WlstRtu_4B00) GetOperation() []int32 {
	if m != nil {
		return m.Operation
	}
	return nil
}

//Wlst_rtu_1200
type WlstRtu_9300 struct {
	//yyyy-mm-dd hh:mm:ss w 格式
	TmlDate              string   `protobuf:"bytes,1,opt,name=tml_date,json=tmlDate,proto3" json:"tml_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_9300) Reset()         { *m = WlstRtu_9300{} }
func (m *WlstRtu_9300) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_9300) ProtoMessage()    {}
func (*WlstRtu_9300) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{40}
}

func (m *WlstRtu_9300) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_9300.Unmarshal(m, b)
}
func (m *WlstRtu_9300) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_9300.Marshal(b, m, deterministic)
}
func (m *WlstRtu_9300) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_9300.Merge(m, src)
}
func (m *WlstRtu_9300) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_9300.Size(m)
}
func (m *WlstRtu_9300) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_9300.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_9300 proto.InternalMessageInfo

func (m *WlstRtu_9300) GetTmlDate() string {
	if m != nil {
		return m.TmlDate
	}
	return ""
}

//Wlst_rtu_3100_5800_6800_d900_e900
type WlstRtuB200 struct {
	//周日~周六k1开关时间 hhmm-hhmm
	XK1OptTime []string `protobuf:"bytes,1,rep,name=x_k1_opt_time,json=xK1OptTime,proto3" json:"x_k1_opt_time,omitempty"`
	//周日~周六k3开关时间 hhmm-hhmm
	XK2OptTime []string `protobuf:"bytes,2,rep,name=x_k2_opt_time,json=xK2OptTime,proto3" json:"x_k2_opt_time,omitempty"`
	//周日~周六k3开关时间 hhmm-hhmm
	XK3OptTime []string `protobuf:"bytes,3,rep,name=x_k3_opt_time,json=xK3OptTime,proto3" json:"x_k3_opt_time,omitempty"`
	//周日~周六市付费启用时分，hhmm
	XCityPayTime []string `protobuf:"bytes,4,rep,name=x_city_pay_time,json=xCityPayTime,proto3" json:"x_city_pay_time,omitempty"`
	//周日~周六自付费启用时分，hhmm
	XSelfPayTime []string `protobuf:"bytes,5,rep,name=x_self_pay_time,json=xSelfPayTime,proto3" json:"x_self_pay_time,omitempty"`
	//周日~周六k4开关时间 hhmm-hhmm
	XK4OptTime []string `protobuf:"bytes,6,rep,name=x_k4_opt_time,json=xK4OptTime,proto3" json:"x_k4_opt_time,omitempty"`
	//周日~周六k5开关时间 hhmm-hhmm
	XK5OptTime []string `protobuf:"bytes,7,rep,name=x_k5_opt_time,json=xK5OptTime,proto3" json:"x_k5_opt_time,omitempty"`
	//周日~周六k6开关时间 hhmm-hhmm
	XK6OptTime []string `protobuf:"bytes,8,rep,name=x_k6_opt_time,json=xK6OptTime,proto3" json:"x_k6_opt_time,omitempty"`
	//周日~周六k7开关时间 hhmm-hhmm
	XK7OptTime []string `protobuf:"bytes,9,rep,name=x_k7_opt_time,json=xK7OptTime,proto3" json:"x_k7_opt_time,omitempty"`
	//周日~周六k8开关时间 hhmm-hhmm
	XK8OptTime           []string `protobuf:"bytes,10,rep,name=x_k8_opt_time,json=xK8OptTime,proto3" json:"x_k8_opt_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtuB200) Reset()         { *m = WlstRtuB200{} }
func (m *WlstRtuB200) String() string { return proto.CompactTextString(m) }
func (*WlstRtuB200) ProtoMessage()    {}
func (*WlstRtuB200) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{41}
}

func (m *WlstRtuB200) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtuB200.Unmarshal(m, b)
}
func (m *WlstRtuB200) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtuB200.Marshal(b, m, deterministic)
}
func (m *WlstRtuB200) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtuB200.Merge(m, src)
}
func (m *WlstRtuB200) XXX_Size() int {
	return xxx_messageInfo_WlstRtuB200.Size(m)
}
func (m *WlstRtuB200) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtuB200.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtuB200 proto.InternalMessageInfo

func (m *WlstRtuB200) GetXK1OptTime() []string {
	if m != nil {
		return m.XK1OptTime
	}
	return nil
}

func (m *WlstRtuB200) GetXK2OptTime() []string {
	if m != nil {
		return m.XK2OptTime
	}
	return nil
}

func (m *WlstRtuB200) GetXK3OptTime() []string {
	if m != nil {
		return m.XK3OptTime
	}
	return nil
}

func (m *WlstRtuB200) GetXCityPayTime() []string {
	if m != nil {
		return m.XCityPayTime
	}
	return nil
}

func (m *WlstRtuB200) GetXSelfPayTime() []string {
	if m != nil {
		return m.XSelfPayTime
	}
	return nil
}

func (m *WlstRtuB200) GetXK4OptTime() []string {
	if m != nil {
		return m.XK4OptTime
	}
	return nil
}

func (m *WlstRtuB200) GetXK5OptTime() []string {
	if m != nil {
		return m.XK5OptTime
	}
	return nil
}

func (m *WlstRtuB200) GetXK6OptTime() []string {
	if m != nil {
		return m.XK6OptTime
	}
	return nil
}

func (m *WlstRtuB200) GetXK7OptTime() []string {
	if m != nil {
		return m.XK7OptTime
	}
	return nil
}

func (m *WlstRtuB200) GetXK8OptTime() []string {
	if m != nil {
		return m.XK8OptTime
	}
	return nil
}

//Wlst_rtu_4600_6500_c700
type WlstRtuE600 struct {
	//时间段1-4(或5-8)起始日期 mmdd-mmdd
	XHolidays []string `protobuf:"bytes,1,rep,name=x_holidays,json=xHolidays,proto3" json:"x_holidays,omitempty"`
	//K1时间段1-4(或5-8)开关时间 hhmm-hhmm
	XK1Time []string `protobuf:"bytes,2,rep,name=x_k1_time,json=xK1Time,proto3" json:"x_k1_time,omitempty"`
	//K2时间段1-4(或5-8)开关时间 hhmm-hhmm
	XK2Time []string `protobuf:"bytes,3,rep,name=x_k2_time,json=xK2Time,proto3" json:"x_k2_time,omitempty"`
	//K3时间段1-4(或5-8)开关时间 hhmm-hhmm
	XK3Time []string `protobuf:"bytes,4,rep,name=x_k3_time,json=xK3Time,proto3" json:"x_k3_time,omitempty"`
	//K4时间段1-4(或5-8)开关时间 hhmm-hhmm
	XK4Time []string `protobuf:"bytes,5,rep,name=x_k4_time,json=xK4Time,proto3" json:"x_k4_time,omitempty"`
	//K5时间段1-4(或5-8)开关时间 hhmm-hhmm
	XK5Time []string `protobuf:"bytes,6,rep,name=x_k5_time,json=xK5Time,proto3" json:"x_k5_time,omitempty"`
	//K6时间段1-4(或5-8)开关时间 hhmm-hhmm
	XK6Time []string `protobuf:"bytes,7,rep,name=x_k6_time,json=xK6Time,proto3" json:"x_k6_time,omitempty"`
	//K7时间段1-4(或5-8)开关时间 hhmm-hhmm
	XK7Time []string `protobuf:"bytes,10,rep,name=x_k7_time,json=xK7Time,proto3" json:"x_k7_time,omitempty"`
	//K8时间段1-4(或5-8)开关时间 hhmm-hhmm
	XK8Time []string `protobuf:"bytes,11,rep,name=x_k8_time,json=xK8Time,proto3" json:"x_k8_time,omitempty"`
	//时间段1-4(或5-8)市付
	XCityPayTime []string `protobuf:"bytes,8,rep,name=x_city_pay_time,json=xCityPayTime,proto3" json:"x_city_pay_time,omitempty"`
	//时间段1-4(或5-8)自付
	XSelfPayTime         []string `protobuf:"bytes,9,rep,name=x_self_pay_time,json=xSelfPayTime,proto3" json:"x_self_pay_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtuE600) Reset()         { *m = WlstRtuE600{} }
func (m *WlstRtuE600) String() string { return proto.CompactTextString(m) }
func (*WlstRtuE600) ProtoMessage()    {}
func (*WlstRtuE600) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{42}
}

func (m *WlstRtuE600) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtuE600.Unmarshal(m, b)
}
func (m *WlstRtuE600) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtuE600.Marshal(b, m, deterministic)
}
func (m *WlstRtuE600) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtuE600.Merge(m, src)
}
func (m *WlstRtuE600) XXX_Size() int {
	return xxx_messageInfo_WlstRtuE600.Size(m)
}
func (m *WlstRtuE600) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtuE600.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtuE600 proto.InternalMessageInfo

func (m *WlstRtuE600) GetXHolidays() []string {
	if m != nil {
		return m.XHolidays
	}
	return nil
}

func (m *WlstRtuE600) GetXK1Time() []string {
	if m != nil {
		return m.XK1Time
	}
	return nil
}

func (m *WlstRtuE600) GetXK2Time() []string {
	if m != nil {
		return m.XK2Time
	}
	return nil
}

func (m *WlstRtuE600) GetXK3Time() []string {
	if m != nil {
		return m.XK3Time
	}
	return nil
}

func (m *WlstRtuE600) GetXK4Time() []string {
	if m != nil {
		return m.XK4Time
	}
	return nil
}

func (m *WlstRtuE600) GetXK5Time() []string {
	if m != nil {
		return m.XK5Time
	}
	return nil
}

func (m *WlstRtuE600) GetXK6Time() []string {
	if m != nil {
		return m.XK6Time
	}
	return nil
}

func (m *WlstRtuE600) GetXK7Time() []string {
	if m != nil {
		return m.XK7Time
	}
	return nil
}

func (m *WlstRtuE600) GetXK8Time() []string {
	if m != nil {
		return m.XK8Time
	}
	return nil
}

func (m *WlstRtuE600) GetXCityPayTime() []string {
	if m != nil {
		return m.XCityPayTime
	}
	return nil
}

func (m *WlstRtuE600) GetXSelfPayTime() []string {
	if m != nil {
		return m.XSelfPayTime
	}
	return nil
}

//Wlst_rtu_4c00_cc00
type WlstRtu_9800 struct {
	//4c00和cc00时表示：设置档位，1-1档，2-2档，3-3档，4-旁路，5-返回状态。9800时表示：终端开机申请状态1-参数正常，0-参数错误，2-时钟错误
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtu_9800) Reset()         { *m = WlstRtu_9800{} }
func (m *WlstRtu_9800) String() string { return proto.CompactTextString(m) }
func (*WlstRtu_9800) ProtoMessage()    {}
func (*WlstRtu_9800) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{43}
}

func (m *WlstRtu_9800) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtu_9800.Unmarshal(m, b)
}
func (m *WlstRtu_9800) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtu_9800.Marshal(b, m, deterministic)
}
func (m *WlstRtu_9800) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtu_9800.Merge(m, src)
}
func (m *WlstRtu_9800) XXX_Size() int {
	return xxx_messageInfo_WlstRtu_9800.Size(m)
}
func (m *WlstRtu_9800) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtu_9800.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtu_9800 proto.InternalMessageInfo

func (m *WlstRtu_9800) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

//Wlst_rtu_ab00
type WlstRtuDc00 struct {
	//ab00-》序列号,dc00-》版本字符串
	Ver                  string   `protobuf:"bytes,1,opt,name=ver,proto3" json:"ver,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstRtuDc00) Reset()         { *m = WlstRtuDc00{} }
func (m *WlstRtuDc00) String() string { return proto.CompactTextString(m) }
func (*WlstRtuDc00) ProtoMessage()    {}
func (*WlstRtuDc00) Descriptor() ([]byte, []int) {
	return fileDescriptor_25d30f1c467c939f, []int{44}
}

func (m *WlstRtuDc00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstRtuDc00.Unmarshal(m, b)
}
func (m *WlstRtuDc00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstRtuDc00.Marshal(b, m, deterministic)
}
func (m *WlstRtuDc00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstRtuDc00.Merge(m, src)
}
func (m *WlstRtuDc00) XXX_Size() int {
	return xxx_messageInfo_WlstRtuDc00.Size(m)
}
func (m *WlstRtuDc00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstRtuDc00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstRtuDc00 proto.InternalMessageInfo

func (m *WlstRtuDc00) GetVer() string {
	if m != nil {
		return m.Ver
	}
	return ""
}

func init() {
	proto.RegisterType((*WlstRtuAns)(nil), "wlst.pb2.Wlst_rtu_ans")
	proto.RegisterType((*WlstRtu_7094)(nil), "wlst.pb2.Wlst_rtu_7094")
	proto.RegisterType((*WlstRtu_7094_Alarm_LN)(nil), "wlst.pb2.Wlst_rtu_7094.Alarm_LN")
	proto.RegisterType((*WlstRtu_7021)(nil), "wlst.pb2.Wlst_rtu_7021")
	proto.RegisterType((*WlstRtu_7021_Args_LN)(nil), "wlst.pb2.Wlst_rtu_7021.Args_LN")
	proto.RegisterType((*WlstRtu_7021_Args_WC)(nil), "wlst.pb2.Wlst_rtu_7021.Args_WC")
	proto.RegisterType((*WlstRtu_7023)(nil), "wlst.pb2.Wlst_rtu_7023")
	proto.RegisterType((*WlstRtu_7023_Args_Control)(nil), "wlst.pb2.Wlst_rtu_7023.Args_Control")
	proto.RegisterType((*WlstRtu_705B)(nil), "wlst.pb2.Wlst_rtu_705b")
	proto.RegisterType((*WlstRtu_70A0)(nil), "wlst.pb2.Wlst_rtu_70a0")
	proto.RegisterType((*WlstRtu_70A0_ElectricEnergy)(nil), "wlst.pb2.Wlst_rtu_70a0.Electric_energy")
	proto.RegisterType((*WlstRtu_70A0_GpsArgs)(nil), "wlst.pb2.Wlst_rtu_70a0.Gps_args")
	proto.RegisterType((*WlstRtu_7053)(nil), "wlst.pb2.Wlst_rtu_7053")
	proto.RegisterType((*WlstRtu_70D3)(nil), "wlst.pb2.Wlst_rtu_70d3")
	proto.RegisterType((*WlstRtu_70D0Max)(nil), "wlst.pb2.Wlst_rtu_70d0_max")
	proto.RegisterType((*WlstRtu_70D0Max_MaxData)(nil), "wlst.pb2.Wlst_rtu_70d0_max.Max_data")
	proto.RegisterType((*WlstRtu_7800)(nil), "wlst.pb2.Wlst_rtu_7800")
	proto.RegisterType((*WlstRtu_7050)(nil), "wlst.pb2.Wlst_rtu_7050")
	proto.RegisterType((*WlstRtu_70D0)(nil), "wlst.pb2.Wlst_rtu_70d0")
	proto.RegisterType((*WlstRtu_70D0_DataMark)(nil), "wlst.pb2.Wlst_rtu_70d0.Data_mark")
	proto.RegisterType((*WlstRtu_70D0_SamplingVoltage)(nil), "wlst.pb2.Wlst_rtu_70d0.Sampling_voltage")
	proto.RegisterType((*WlstRtu_70D0_AnalogData)(nil), "wlst.pb2.Wlst_rtu_70d0.Analog_data")
	proto.RegisterType((*WlstRtu_705A)(nil), "wlst.pb2.Wlst_rtu_705a")
	proto.RegisterType((*WlstRtu_70Da)(nil), "wlst.pb2.Wlst_rtu_70da")
	proto.RegisterType((*WlstRtu_700A)(nil), "wlst.pb2.Wlst_rtu_700a")
	proto.RegisterType((*WlstRtu_7010)(nil), "wlst.pb2.Wlst_rtu_7010")
	proto.RegisterType((*WlstRtu_7003)(nil), "wlst.pb2.Wlst_rtu_7003")
	proto.RegisterType((*WlstRtu_7006)(nil), "wlst.pb2.Wlst_rtu_7006")
	proto.RegisterType((*WlstRtu_7007)(nil), "wlst.pb2.Wlst_rtu_7007")
	proto.RegisterType((*WlstRtu_7087)(nil), "wlst.pb2.Wlst_rtu_7087")
	proto.RegisterType((*WlstRtu_7081)(nil), "wlst.pb2.Wlst_rtu_7081")
	proto.RegisterType((*WlstRtu_7008)(nil), "wlst.pb2.Wlst_rtu_7008")
	proto.RegisterType((*WlstRtu_7060)(nil), "wlst.pb2.Wlst_rtu_7060")
	proto.RegisterType((*WlstRtu_7060_YearCtrl)(nil), "wlst.pb2.Wlst_rtu_7060.YearCtrl")
	proto.RegisterType((*WlstRtu_7061)(nil), "wlst.pb2.Wlst_rtu_7061")
	proto.RegisterType((*WlstRtu_70E0)(nil), "wlst.pb2.Wlst_rtu_70e0")
	proto.RegisterType((*WlstRtu_7B00)(nil), "wlst.pb2.Wlst_rtu_7b00")
	proto.RegisterType((*WlstRtu_1900)(nil), "wlst.pb2.Wlst_rtu_1900")
	proto.RegisterType((*WlstRtu_4000)(nil), "wlst.pb2.Wlst_rtu_4000")
	proto.RegisterType((*WlstRtu_4101)(nil), "wlst.pb2.Wlst_rtu_4101")
	proto.RegisterType((*WlstRtu_4104)(nil), "wlst.pb2.Wlst_rtu_4104")
	proto.RegisterType((*WlstRtu_4110)(nil), "wlst.pb2.Wlst_rtu_4110")
	proto.RegisterType((*WlstRtu_4111)(nil), "wlst.pb2.Wlst_rtu_4111")
	proto.RegisterType((*WlstRtu_4200)(nil), "wlst.pb2.Wlst_rtu_4200")
	proto.RegisterType((*WlstRtu_4401)(nil), "wlst.pb2.Wlst_rtu_4401")
	proto.RegisterType((*WlstRtuDa00)(nil), "wlst.pb2.Wlst_rtu_da00")
	proto.RegisterType((*WlstRtuDf00)(nil), "wlst.pb2.Wlst_rtu_df00")
	proto.RegisterType((*WlstRtu_6100)(nil), "wlst.pb2.Wlst_rtu_6100")
	proto.RegisterType((*WlstRtuA000)(nil), "wlst.pb2.Wlst_rtu_a000")
	proto.RegisterType((*WlstRtuA200)(nil), "wlst.pb2.Wlst_rtu_a200")
	proto.RegisterType((*WlstRtu_4B00)(nil), "wlst.pb2.Wlst_rtu_4b00")
	proto.RegisterType((*WlstRtu_9300)(nil), "wlst.pb2.Wlst_rtu_9300")
	proto.RegisterType((*WlstRtuB200)(nil), "wlst.pb2.Wlst_rtu_b200")
	proto.RegisterType((*WlstRtuE600)(nil), "wlst.pb2.Wlst_rtu_e600")
	proto.RegisterType((*WlstRtu_9800)(nil), "wlst.pb2.Wlst_rtu_9800")
	proto.RegisterType((*WlstRtuDc00)(nil), "wlst.pb2.Wlst_rtu_dc00")
}

func init() { proto.RegisterFile("protocol_rtu.proto", fileDescriptor_25d30f1c467c939f) }

var fileDescriptor_25d30f1c467c939f = []byte{
	// 3353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5a, 0xcd, 0x6f, 0x1b, 0x49,
	0x76, 0x47, 0x93, 0xe2, 0x57, 0x91, 0xfa, 0x6a, 0xdb, 0x63, 0x8e, 0x66, 0x0c, 0xdb, 0x3d, 0x9e,
	0xb1, 0xe2, 0x04, 0x4a, 0x93, 0xd4, 0x97, 0x27, 0x48, 0x26, 0xb6, 0xec, 0x89, 0x0d, 0xf9, 0x2b,
	0xad, 0x19, 0x0f, 0x72, 0x08, 0x1a, 0x25, 0x76, 0x89, 0x22, 0xd4, 0xec, 0xee, 0x34, 0x8b, 0x12,
	0x79, 0x4a, 0x80, 0x04, 0x41, 0x30, 0x08, 0x92, 0x63, 0x4e, 0xd9, 0xdb, 0x00, 0x7b, 0x5c, 0x60,
	0xff, 0x8e, 0xbd, 0xec, 0x79, 0xef, 0x83, 0xb9, 0xed, 0x65, 0x0e, 0x8b, 0xbd, 0x2c, 0xde, 0xab,
	0xaa, 0xee, 0x2a, 0x4a, 0xa4, 0x2c, 0x63, 0xb1, 0x87, 0xc5, 0xdc, 0xd4, 0xef, 0xfd, 0xaa, 0xea,
	0xd5, 0xab, 0xf7, 0x4d, 0x11, 0x3b, 0x49, 0x63, 0x1e, 0x77, 0xe3, 0xd0, 0x4f, 0xf9, 0x68, 0x03,
	0x3f, 0xec, 0xea, 0x59, 0x38, 0xe4, 0x1b, 0xc9, 0x61, 0xdb, 0xf9, 0xb9, 0x45, 0x1a, 0xdf, 0x84,
	0x43, 0x0e, 0x4c, 0x9f, 0x46, 0x43, 0xfb, 0x26, 0xa9, 0x74, 0x07, 0x81, 0xdf, 0x0f, 0xc6, 0x4d,
	0xeb, 0x8e, 0xb5, 0x5e, 0xf2, 0xca, 0xdd, 0x41, 0xf0, 0x3c, 0x18, 0xdb, 0xb7, 0x49, 0x2d, 0xa0,
	0x9c, 0xfa, 0x03, 0x9a, 0x9e, 0x34, 0x0b, 0x77, 0x8a, 0xeb, 0xa5, 0xc7, 0x85, 0x15, 0xcb, 0xab,
	0x02, 0xf1, 0x25, 0x4d, 0x4f, 0xec, 0xbb, 0x84, 0x20, 0x20, 0x89, 0xfb, 0x11, 0x6f, 0x16, 0x33,
	0x04, 0x2e, 0x7b, 0x03, 0x44, 0x7b, 0x8d, 0x94, 0x87, 0x9c, 0xf2, 0xd1, 0xb0, 0xb9, 0x90, 0xb1,
	0x25, 0xc5, 0xbe, 0x4d, 0xea, 0xe2, 0x2f, 0xbf, 0x1b, 0x07, 0xac, 0x59, 0xc2, 0xc3, 0x89, 0x20,
	0xed, 0xc5, 0x01, 0x73, 0xbe, 0x2b, 0x90, 0xc5, 0x4c, 0xd4, 0x1d, 0xf7, 0xe1, 0xe6, 0x6c, 0x59,
	0x6f, 0x11, 0x42, 0x43, 0x9a, 0x0e, 0x7c, 0x3e, 0x49, 0x58, 0xb3, 0x80, 0xbc, 0x1a, 0x52, 0xbe,
	0x9a, 0x24, 0xcc, 0xfe, 0x9c, 0x54, 0xf0, 0x23, 0x8c, 0x9a, 0xc5, 0x3b, 0xd6, 0x7a, 0xbd, 0x7d,
	0x67, 0x43, 0x29, 0x64, 0xc3, 0x38, 0x61, 0xe3, 0x11, 0xee, 0xf2, 0xe2, 0x95, 0xa7, 0x16, 0xd8,
	0x1d, 0x72, 0x7d, 0x78, 0xd6, 0xe7, 0xdd, 0x63, 0x3f, 0x1e, 0x71, 0x7f, 0xc8, 0xfd, 0x84, 0x76,
	0x4f, 0x58, 0xa0, 0x5d, 0x68, 0x55, 0xf0, 0x5f, 0x8f, 0xf8, 0x01, 0x7f, 0x83, 0xcc, 0xb5, 0x13,
	0x52, 0x55, 0x3b, 0x81, 0xd0, 0x61, 0x1c, 0x27, 0x7e, 0x14, 0x2b, 0xa1, 0xe1, 0xf3, 0x55, 0x6c,
	0xdf, 0x25, 0x0d, 0x21, 0xb4, 0x54, 0x91, 0x10, 0xbb, 0x8e, 0xb4, 0x03, 0xa1, 0xa3, 0x4f, 0xc8,
	0xa2, 0x80, 0x74, 0x47, 0x69, 0xca, 0x50, 0xcb, 0xd6, 0xba, 0xe5, 0x89, 0x75, 0x7b, 0x82, 0xe6,
	0x7c, 0x5f, 0x32, 0xf4, 0xd4, 0x6e, 0xcd, 0xd6, 0xd3, 0x47, 0xf2, 0x4d, 0x35, 0x35, 0xe1, 0x7b,
	0xa2, 0x96, 0x76, 0x48, 0x99, 0xa6, 0xbd, 0x21, 0x2a, 0xa9, 0xb8, 0x5e, 0x6f, 0xdf, 0xbe, 0x50,
	0x49, 0xed, 0xd6, 0xc6, 0xa3, 0xb4, 0x37, 0x04, 0x1d, 0x49, 0xf8, 0xf4, 0x4b, 0x2e, 0x4c, 0xbf,
	0x24, 0x1c, 0x8b, 0x2a, 0xc0, 0x63, 0xc5, 0x43, 0x57, 0x81, 0xa0, 0x1f, 0x7b, 0xd6, 0x6d, 0x96,
	0xdf, 0xe1, 0xd8, 0x6f, 0xf6, 0x3c, 0x09, 0x5f, 0xfb, 0x77, 0x8b, 0x54, 0xa4, 0x28, 0xb3, 0x95,
	0x7c, 0x8b, 0x90, 0x43, 0x3a, 0x64, 0xfe, 0x29, 0x0d, 0x47, 0x99, 0x65, 0x00, 0xe5, 0x2d, 0x10,
	0x40, 0x74, 0xa1, 0x60, 0xc1, 0x2f, 0x0a, 0xd1, 0x91, 0x94, 0x01, 0x0e, 0x53, 0x46, 0x4f, 0x24,
	0x40, 0xde, 0x0d, 0x49, 0x08, 0x58, 0xfb, 0xa1, 0x20, 0xa5, 0xf8, 0x66, 0xcf, 0xbe, 0x46, 0x4a,
	0x61, 0xcb, 0x8f, 0x23, 0x29, 0xc3, 0x42, 0xd8, 0x7a, 0x1d, 0xd9, 0x37, 0x48, 0x19, 0x88, 0x47,
	0x47, 0xf2, 0xf4, 0x52, 0xd8, 0x7a, 0x7d, 0x74, 0x84, 0xd8, 0x36, 0x60, 0x8b, 0x12, 0xdb, 0x96,
	0xd8, 0x36, 0x62, 0x17, 0x24, 0xb6, 0xad, 0xb0, 0x1d, 0xc0, 0x96, 0x24, 0xb6, 0x23, 0xb1, 0x1d,
	0xc4, 0x96, 0x25, 0xb6, 0xa3, 0xb0, 0x9b, 0x80, 0xad, 0x48, 0xec, 0xa6, 0xc4, 0x6e, 0x22, 0xb6,
	0x2a, 0xb1, 0x9b, 0x0a, 0xbb, 0x05, 0xd8, 0x9a, 0xc4, 0x6e, 0x49, 0xec, 0x16, 0x62, 0x89, 0xc4,
	0x6e, 0x29, 0xec, 0x36, 0x60, 0xeb, 0x12, 0xbb, 0x2d, 0xb1, 0xdb, 0x88, 0x6d, 0x48, 0xec, 0xb6,
	0xc2, 0xee, 0x00, 0x76, 0x51, 0x62, 0x77, 0x24, 0x76, 0x07, 0xb1, 0x4b, 0x12, 0xbb, 0xa3, 0xb0,
	0xbb, 0x80, 0x5d, 0x96, 0xd8, 0x5d, 0x89, 0xdd, 0x45, 0xec, 0x8a, 0xc4, 0xee, 0xbe, 0x3e, 0x3a,
	0x72, 0x7e, 0xb4, 0x4c, 0x4b, 0xef, 0xbc, 0xa7, 0xa5, 0x7f, 0x49, 0xea, 0x60, 0x43, 0xdd, 0x38,
	0xe2, 0x69, 0x1c, 0x4a, 0x73, 0xbf, 0x77, 0xb1, 0xdd, 0x75, 0x84, 0xdd, 0xed, 0x09, 0xac, 0xa7,
	0x2f, 0xbc, 0xd4, 0xf0, 0xd7, 0x9e, 0x92, 0x86, 0xbe, 0x7a, 0xb6, 0x99, 0x7e, 0x4c, 0x6a, 0x71,
	0xc2, 0x52, 0xca, 0xfb, 0x71, 0xa4, 0xac, 0x34, 0x23, 0x38, 0xdf, 0x9b, 0xf7, 0xde, 0x3a, 0x9c,
	0x7d, 0xef, 0x0f, 0x49, 0x15, 0x18, 0xda, 0xb5, 0x01, 0x88, 0xb7, 0xbe, 0x4b, 0x1a, 0xc7, 0x34,
	0x0d, 0xce, 0x68, 0xca, 0xfc, 0x53, 0x96, 0xa2, 0xe1, 0xd5, 0xbc, 0xba, 0xa2, 0xbd, 0x65, 0xa9,
	0xfd, 0x17, 0x64, 0x25, 0x49, 0xe3, 0x60, 0xd4, 0x85, 0x63, 0xfd, 0x43, 0xca, 0xbb, 0xc7, 0x78,
	0xab, 0x9a, 0xb7, 0x9c, 0xd3, 0x1f, 0x03, 0xd9, 0xbe, 0x4f, 0x34, 0x92, 0x1f, 0x50, 0x2e, 0x3c,
	0xbb, 0xe6, 0x2d, 0xe5, 0xe4, 0x27, 0x94, 0x33, 0xfb, 0x2f, 0xc9, 0x6a, 0x3f, 0x1a, 0x72, 0x1a,
	0x86, 0x34, 0x87, 0x96, 0x11, 0xba, 0xa2, 0x33, 0x00, 0xec, 0xfc, 0xb6, 0x62, 0xdc, 0x94, 0xba,
	0xef, 0x75, 0xd3, 0x8f, 0x49, 0xed, 0x28, 0x65, 0xff, 0x32, 0x62, 0x51, 0x77, 0x82, 0xd7, 0x2c,
	0x78, 0x39, 0xc1, 0xde, 0x21, 0x05, 0xc6, 0x30, 0x7e, 0xd7, 0xdb, 0xf7, 0x2f, 0x7c, 0x74, 0xea,
	0x6e, 0x3c, 0x0d, 0x59, 0x97, 0xa7, 0xfd, 0xae, 0xcf, 0x22, 0x96, 0xf6, 0x26, 0x5e, 0x81, 0x31,
	0xfb, 0x0e, 0xa9, 0x73, 0x36, 0xc0, 0x57, 0x19, 0xa5, 0x2a, 0x90, 0xe9, 0x24, 0x7b, 0x8d, 0x54,
	0x8f, 0x47, 0x83, 0x7e, 0xd0, 0xe7, 0x13, 0xe9, 0x95, 0xd9, 0x37, 0xa8, 0x7f, 0x40, 0xfb, 0x91,
	0x7f, 0x1a, 0x87, 0x9c, 0xf6, 0x18, 0xfa, 0xa7, 0xe5, 0xd5, 0x81, 0xf6, 0x56, 0x90, 0x20, 0xdc,
	0x1f, 0x52, 0xce, 0x59, 0x3a, 0xf1, 0x93, 0xf8, 0x8c, 0xa5, 0xd2, 0x5b, 0x1b, 0x92, 0xf8, 0x06,
	0x68, 0x70, 0xb9, 0x30, 0x8e, 0x7a, 0x7d, 0x3e, 0x0a, 0x18, 0x3a, 0xae, 0xe5, 0xe5, 0x04, 0x90,
	0x00, 0xd4, 0x89, 0x4c, 0x82, 0xcc, 0xec, 0x1b, 0xd2, 0x60, 0x2f, 0x19, 0x82, 0x01, 0xa3, 0x13,
	0xcf, 0x4a, 0x83, 0xd4, 0xdd, 0xf8, 0x87, 0x64, 0xe8, 0x03, 0xce, 0x53, 0x0b, 0xec, 0x16, 0xb9,
	0x26, 0xd3, 0x60, 0x3f, 0xd2, 0xb2, 0x60, 0x23, 0xcb, 0x82, 0x2b, 0x82, 0xfd, 0x3c, 0x52, 0x49,
	0x70, 0x66, 0xe6, 0x5c, 0x9c, 0x93, 0x39, 0xed, 0xcf, 0xc8, 0x22, 0x1f, 0x84, 0x1a, 0x7a, 0x29,
	0x43, 0xd7, 0xf9, 0x20, 0xcc, 0x70, 0xb7, 0x49, 0x0d, 0x70, 0x29, 0x1b, 0x32, 0xde, 0x5c, 0xce,
	0xab, 0x13, 0x3e, 0x08, 0x3d, 0xa0, 0x41, 0xe0, 0x47, 0x57, 0xeb, 0xc6, 0xa3, 0x88, 0xcb, 0x30,
	0x82, 0x59, 0x68, 0x0f, 0x08, 0x6b, 0xff, 0x56, 0x20, 0xcb, 0x53, 0x6f, 0x6c, 0x37, 0x49, 0x45,
	0x3d, 0x8e, 0x85, 0x46, 0xa3, 0x3e, 0x81, 0xa3, 0x32, 0x70, 0x41, 0x70, 0xe4, 0x27, 0xbc, 0x2a,
	0x3e, 0x95, 0x7f, 0x44, 0xbb, 0x3c, 0x4e, 0xa5, 0xb5, 0xd5, 0x91, 0xf6, 0x25, 0x92, 0x30, 0xcf,
	0x77, 0x79, 0xff, 0x94, 0xc9, 0x47, 0x5d, 0x10, 0x10, 0x41, 0x13, 0x6f, 0xfa, 0x29, 0x59, 0x4a,
	0x99, 0x01, 0x2a, 0x21, 0x68, 0x51, 0x51, 0x05, 0x0c, 0xca, 0x01, 0x01, 0x12, 0x12, 0xa3, 0x8d,
	0x15, 0x3c, 0xb9, 0xfd, 0x53, 0x71, 0x8b, 0xfb, 0x64, 0x39, 0xdb, 0x4b, 0xc2, 0x2a, 0x08, 0xcb,
	0x8e, 0x10, 0xc0, 0xb5, 0xff, 0xb0, 0x48, 0x55, 0x3d, 0x34, 0x78, 0x53, 0x2f, 0x19, 0x0a, 0x6f,
	0x12, 0x7e, 0x06, 0x4f, 0x8f, 0xde, 0xf4, 0x21, 0x9a, 0x94, 0xe1, 0x68, 0x21, 0xe5, 0x19, 0x2b,
	0x8e, 0x04, 0xab, 0x28, 0x59, 0x71, 0x84, 0xac, 0xfb, 0x64, 0x39, 0x8c, 0xbb, 0xc2, 0xe5, 0xb3,
	0x1a, 0x10, 0x10, 0x4b, 0x8a, 0x2c, 0x6a, 0x1c, 0xe7, 0x17, 0x53, 0xc1, 0xad, 0x33, 0xaf, 0x24,
	0xad, 0xa7, 0xac, 0x1b, 0xa7, 0x86, 0xd7, 0x13, 0x41, 0x52, 0xf2, 0x04, 0x60, 0x6a, 0x34, 0x15,
	0xa5, 0x52, 0xd1, 0xab, 0x04, 0xfc, 0x00, 0x3e, 0xe1, 0x15, 0xe4, 0x5a, 0x61, 0x11, 0x42, 0x18,
	0xb9, 0x1f, 0xda, 0x84, 0xd0, 0x1c, 0x42, 0x82, 0xfe, 0x90, 0xd3, 0xa8, 0x2b, 0x7c, 0xbc, 0x08,
	0x9a, 0x03, 0xf2, 0x13, 0x49, 0x75, 0xfe, 0xa7, 0x68, 0x88, 0x1c, 0xcc, 0x11, 0x39, 0x3f, 0x96,
	0xc7, 0x9c, 0x86, 0xaa, 0xc8, 0x93, 0x32, 0x03, 0x09, 0x2c, 0x55, 0x42, 0x60, 0xb9, 0x50, 0x63,
	0x4d, 0x50, 0x60, 0x87, 0x4f, 0xc8, 0xa2, 0x64, 0x1b, 0x6a, 0x94, 0xdb, 0x1e, 0x64, 0xc5, 0xb4,
	0xae, 0x99, 0xd2, 0x5c, 0xcd, 0x94, 0xe7, 0x6b, 0xa6, 0xf2, 0x4e, 0x9a, 0xa9, 0x5e, 0xa4, 0x19,
	0x7b, 0x53, 0xa6, 0xdd, 0x1d, 0x37, 0x70, 0x9b, 0x35, 0x0c, 0xb1, 0x37, 0x2f, 0x0c, 0x32, 0x81,
	0x2b, 0xf2, 0x31, 0xfc, 0x65, 0x7f, 0x41, 0x16, 0xb3, 0x55, 0xfe, 0x80, 0x8e, 0x9b, 0x04, 0x57,
	0x7e, 0x34, 0x63, 0x25, 0x40, 0xbc, 0xba, 0x5a, 0xfd, 0x92, 0x8e, 0x9d, 0xdf, 0x5b, 0x64, 0xf5,
	0x1c, 0x04, 0x6b, 0x00, 0xee, 0x0b, 0x09, 0xf1, 0x59, 0x8a, 0x5e, 0x35, 0xe0, 0x1e, 0x7e, 0x5f,
	0x6e, 0x4b, 0x66, 0x00, 0x29, 0x4e, 0x05, 0x10, 0xfb, 0x0b, 0x52, 0x1d, 0xd0, 0x31, 0x64, 0x33,
	0x2a, 0x73, 0xc9, 0xbd, 0x39, 0xe2, 0x6e, 0xbc, 0x94, 0x58, 0xaf, 0x32, 0xa0, 0xe3, 0x27, 0x94,
	0xd3, 0xb5, 0x67, 0xa4, 0xaa, 0x88, 0x20, 0x8c, 0x0c, 0x28, 0x78, 0x7d, 0x0b, 0x03, 0x37, 0x91,
	0xa4, 0x97, 0xd3, 0x57, 0x29, 0x98, 0x57, 0x71, 0x7e, 0x30, 0x3c, 0x68, 0xd7, 0x75, 0x41, 0x76,
	0x76, 0x0a, 0xbb, 0x69, 0xfe, 0x5c, 0x43, 0x0a, 0x5e, 0xed, 0x36, 0xa9, 0x0b, 0x76, 0x37, 0xa4,
	0x43, 0xd5, 0x78, 0x88, 0x15, 0x7b, 0x40, 0x41, 0x6b, 0x81, 0x07, 0x89, 0x46, 0x03, 0xe5, 0xd7,
	0xf0, 0xfd, 0x6a, 0x34, 0x30, 0x0c, 0x69, 0xc1, 0x34, 0xa4, 0x1b, 0xa4, 0x1c, 0x70, 0x9f, 0x45,
	0x81, 0x74, 0x9b, 0x52, 0xc0, 0x9f, 0x46, 0x01, 0xf8, 0x06, 0x0d, 0x43, 0xdc, 0x4b, 0xe4, 0xc4,
	0x32, 0x0d, 0x43, 0xd8, 0xea, 0x26, 0x46, 0x55, 0x64, 0x54, 0xa4, 0xd3, 0x8c, 0x52, 0x79, 0x46,
	0x4a, 0xcf, 0x84, 0x6e, 0xab, 0x58, 0x29, 0x54, 0x52, 0x7a, 0x06, 0x5a, 0x73, 0x9e, 0x9a, 0xc1,
	0xc2, 0xbd, 0xbc, 0x02, 0x94, 0xfd, 0x6b, 0x56, 0x01, 0x42, 0xef, 0xea, 0x7c, 0x5b, 0x33, 0x3d,
	0x78, 0xce, 0x3e, 0x7f, 0x37, 0xbd, 0x4f, 0xbd, 0x7d, 0x77, 0xc6, 0x4b, 0x6f, 0x3c, 0x51, 0x40,
	0xad, 0x4d, 0x9e, 0x91, 0x39, 0x8b, 0xef, 0x91, 0x39, 0x17, 0xae, 0x94, 0x39, 0x4b, 0x17, 0x67,
	0xce, 0xa9, 0x2a, 0xa6, 0x7c, 0xbe, 0x8a, 0xb9, 0x45, 0x48, 0x2f, 0x49, 0x87, 0x32, 0xb9, 0x8a,
	0xa7, 0xa9, 0x01, 0x45, 0x64, 0xd6, 0xdb, 0xa4, 0x8e, 0xec, 0x61, 0xbf, 0x17, 0xd1, 0x50, 0xd6,
	0x28, 0xb8, 0xe2, 0x00, 0x29, 0x66, 0x6e, 0xae, 0x5d, 0x90, 0x9b, 0x1f, 0x90, 0x65, 0x00, 0x40,
	0xe2, 0x51, 0x41, 0x8d, 0x64, 0x30, 0xb8, 0x05, 0x14, 0xcd, 0x32, 0xb2, 0x65, 0x09, 0x76, 0x38,
	0x4a, 0x92, 0x70, 0x82, 0x95, 0x8b, 0x25, 0x13, 0xec, 0x01, 0x92, 0xec, 0x03, 0xb2, 0x32, 0xa4,
	0x83, 0x24, 0xec, 0x47, 0xbd, 0xac, 0xba, 0x6a, 0xa0, 0x4b, 0xae, 0xcf, 0x7a, 0xa8, 0x83, 0x29,
	0xbc, 0xb7, 0xac, 0x76, 0x50, 0xb5, 0xd8, 0x13, 0x52, 0xa7, 0x11, 0x0d, 0xe3, 0x9e, 0x30, 0xc3,
	0x45, 0xdc, 0xef, 0x93, 0x59, 0xfb, 0x3d, 0xca, 0xa1, 0x1e, 0x11, 0xeb, 0xc0, 0x16, 0xec, 0x3b,
	0xa4, 0xa1, 0x3f, 0x3e, 0xb6, 0x3e, 0x45, 0x8f, 0xe4, 0x2f, 0x6e, 0x3b, 0x64, 0xd1, 0x78, 0x6b,
	0xd9, 0x07, 0xd5, 0xb5, 0x07, 0x06, 0xc7, 0x12, 0x4f, 0xab, 0xda, 0x21, 0x7c, 0x4f, 0x78, 0xa7,
	0xa3, 0x51, 0x18, 0xfa, 0x29, 0x8d, 0x7a, 0xac, 0xb9, 0x2a, 0xde, 0x09, 0x28, 0x1e, 0x10, 0xcc,
	0x98, 0x61, 0x4f, 0x85, 0xbf, 0x0d, 0xb2, 0xaa, 0x1d, 0x9b, 0x32, 0x3a, 0x8c, 0xa3, 0xe6, 0xb5,
	0xec, 0x11, 0x96, 0xb3, 0xe3, 0x3d, 0x64, 0xad, 0xf9, 0xa4, 0x96, 0x19, 0x37, 0xdc, 0xaa, 0xc7,
	0xb8, 0x9f, 0x8e, 0x22, 0xa1, 0x1c, 0x4b, 0x9a, 0x00, 0xe3, 0xde, 0x28, 0xc2, 0x7b, 0xbb, 0xe4,
	0x3a, 0x20, 0xc4, 0x2e, 0xda, 0x09, 0xc2, 0x0f, 0xed, 0x1e, 0xe3, 0x07, 0x8a, 0x25, 0x0f, 0xf8,
	0x47, 0xb2, 0x32, 0xfd, 0x28, 0xd0, 0x1b, 0x9e, 0xc6, 0xa1, 0x4f, 0x65, 0x40, 0x5c, 0x38, 0x8d,
	0xc3, 0x47, 0x8a, 0x78, 0x88, 0x7b, 0x09, 0xe2, 0x63, 0x45, 0xec, 0xca, 0x01, 0x09, 0x10, 0xf7,
	0xd6, 0xbe, 0xb3, 0x48, 0x5d, 0x7b, 0x98, 0xe9, 0xfa, 0xce, 0x9a, 0x59, 0xdf, 0x59, 0x79, 0x7d,
	0x77, 0x9d, 0x94, 0x44, 0x41, 0x26, 0x36, 0x16, 0x1f, 0x50, 0xaf, 0xc9, 0xa5, 0x66, 0x52, 0x5e,
	0x94, 0x54, 0x69, 0xbb, 0x9f, 0x92, 0x25, 0x15, 0xd6, 0x25, 0x4c, 0x24, 0xe6, 0x45, 0x49, 0x95,
	0x15, 0xd0, 0x9e, 0x19, 0xd3, 0xe8, 0xfb, 0xf4, 0x3c, 0xce, 0xaf, 0xcd, 0xce, 0x29, 0xa0, 0x73,
	0xa7, 0x65, 0x27, 0x8c, 0x25, 0x3e, 0x0d, 0xfb, 0xa7, 0xd9, 0x4c, 0x04, 0x28, 0x8f, 0x80, 0x90,
	0xcf, 0x44, 0xba, 0x93, 0x6e, 0x68, 0xce, 0x44, 0xf6, 0x80, 0x92, 0x03, 0x02, 0x16, 0xd2, 0x89,
	0x6a, 0x7b, 0x91, 0xf4, 0x04, 0x28, 0xf6, 0x3d, 0xb2, 0xa4, 0xdb, 0xf4, 0x68, 0x20, 0xef, 0xdd,
	0xc8, 0x8d, 0x7a, 0x34, 0xd0, 0x2c, 0x1f, 0x7c, 0x23, 0xcb, 0x0e, 0xf5, 0xcc, 0x39, 0x46, 0x03,
	0x1c, 0xec, 0x89, 0x17, 0x1c, 0x66, 0x59, 0xa2, 0x26, 0x28, 0xc0, 0x5e, 0x27, 0x2b, 0x63, 0x69,
	0x64, 0x60, 0x37, 0xbc, 0x3f, 0x80, 0xc2, 0xa4, 0x08, 0x5d, 0xe8, 0xf8, 0x40, 0x91, 0xbf, 0xea,
	0x0f, 0x18, 0x1c, 0xd6, 0xed, 0xf3, 0x89, 0x9f, 0xd0, 0x89, 0x80, 0xd5, 0x44, 0xf7, 0x0b, 0xc4,
	0x37, 0x74, 0xa2, 0x30, 0x43, 0x16, 0x1e, 0xe5, 0x18, 0x22, 0x30, 0x40, 0x54, 0x98, 0xbf, 0x26,
	0xb6, 0x3a, 0x11, 0x2f, 0x27, 0xaa, 0x83, 0x7a, 0xee, 0x38, 0xf2, 0xdc, 0xd7, 0x23, 0x2e, 0xea,
	0x84, 0xdc, 0xd1, 0xfa, 0x91, 0x7f, 0x1c, 0x27, 0x49, 0x3f, 0xea, 0x69, 0x6d, 0xd3, 0xb2, 0xba,
	0xed, 0x33, 0xc1, 0x82, 0x72, 0x4f, 0x99, 0x96, 0xf0, 0x6b, 0x31, 0x43, 0x69, 0xa8, 0x40, 0x85,
	0xae, 0xfd, 0x80, 0x2c, 0x8f, 0xd5, 0x4c, 0x50, 0xc2, 0xf2, 0x3e, 0x69, 0x71, 0x2c, 0x27, 0x83,
	0x02, 0xdb, 0x22, 0xd7, 0x0c, 0x89, 0x4f, 0x19, 0x36, 0x2a, 0x79, 0xcf, 0xb4, 0x92, 0x8b, 0xfc,
	0x16, 0x79, 0xc6, 0x25, 0xa1, 0x63, 0x15, 0x2b, 0x56, 0xce, 0x5d, 0xf2, 0x79, 0x24, 0x17, 0xa0,
	0x3c, 0xf2, 0xa1, 0x24, 0x7a, 0x55, 0x93, 0x47, 0x38, 0xa1, 0xc4, 0x6e, 0x90, 0x6b, 0xa3, 0x24,
	0x61, 0xa9, 0xf2, 0x72, 0x3f, 0xec, 0x0f, 0xfa, 0x1c, 0x03, 0x54, 0xc9, 0x5b, 0x45, 0x96, 0x8c,
	0xc1, 0x2f, 0x80, 0x01, 0xf8, 0x10, 0x13, 0x80, 0x89, 0xbf, 0x26, 0xf0, 0xc8, 0x32, 0xf0, 0x5b,
	0xe4, 0xc6, 0xd8, 0x17, 0x27, 0x28, 0x0d, 0x89, 0x15, 0xd7, 0x33, 0x89, 0xec, 0xf1, 0xd7, 0xc0,
	0x97, 0x6a, 0xd2, 0x96, 0x89, 0x83, 0xcc, 0x65, 0x37, 0xb4, 0x65, 0x2f, 0x80, 0x6f, 0x2c, 0x83,
	0xbe, 0x29, 0x8d, 0x47, 0x89, 0xdf, 0x0f, 0x9a, 0x1f, 0xc8, 0xbe, 0x09, 0xbe, 0x9f, 0x07, 0x86,
	0xb3, 0xde, 0x34, 0x07, 0x14, 0x9f, 0x91, 0x06, 0x4f, 0x69, 0x34, 0x3c, 0x8a, 0xd3, 0x01, 0x4b,
	0x87, 0xcd, 0x66, 0x76, 0x86, 0x41, 0x77, 0x1e, 0x18, 0x3e, 0xed, 0x52, 0xdc, 0x33, 0x1e, 0x40,
	0xe6, 0x3c, 0x6d, 0x5a, 0xb0, 0xc8, 0xab, 0x74, 0xe3, 0xc1, 0xa3, 0xb4, 0x77, 0xea, 0xfc, 0xb3,
	0x81, 0x6d, 0xb9, 0x66, 0x01, 0x64, 0x99, 0x05, 0x90, 0x1e, 0x1c, 0x0a, 0x46, 0x70, 0xf8, 0x20,
	0x1b, 0xd9, 0x0b, 0xc7, 0x97, 0x5f, 0x53, 0x41, 0xca, 0xed, 0xcc, 0x0d, 0x52, 0x47, 0x3c, 0x11,
	0x99, 0xa1, 0x20, 0x64, 0x3c, 0xe2, 0x09, 0x56, 0x6f, 0x81, 0xb9, 0xc9, 0xf6, 0xdc, 0xea, 0x0d,
	0x8a, 0x46, 0xe1, 0x5e, 0xb2, 0x7a, 0xa3, 0x61, 0x28, 0x7c, 0xea, 0x16, 0x21, 0x5d, 0xda, 0x3d,
	0x66, 0x7e, 0x44, 0x07, 0x4c, 0xce, 0xb1, 0x6a, 0x48, 0x79, 0x45, 0x07, 0xcc, 0x59, 0x37, 0x4f,
	0xd9, 0x99, 0x79, 0x8a, 0xf3, 0xad, 0xd9, 0x7b, 0xee, 0xce, 0x86, 0x6a, 0x7a, 0x29, 0xe8, 0x7a,
	0x81, 0xd6, 0xe8, 0x88, 0xf6, 0x43, 0x16, 0x60, 0xd9, 0x45, 0x7b, 0x6c, 0x28, 0x4a, 0x3b, 0x6f,
	0x49, 0x90, 0xdf, 0x48, 0x2a, 0x4e, 0x92, 0x27, 0x9c, 0x0d, 0x8d, 0xfe, 0x93, 0x20, 0x09, 0x6f,
	0xe5, 0xfc, 0xdf, 0x94, 0x30, 0xad, 0xab, 0x0b, 0x73, 0x93, 0x54, 0xe2, 0x30, 0xd0, 0xa6, 0x7b,
	0xe5, 0x38, 0x0c, 0xde, 0xb2, 0x14, 0x18, 0x11, 0x3b, 0x43, 0x86, 0x98, 0xe7, 0x95, 0x23, 0x76,
	0xf6, 0x56, 0x8c, 0x14, 0xd0, 0x48, 0x54, 0x53, 0xae, 0x22, 0x35, 0x10, 0x5f, 0x48, 0x9a, 0xf3,
	0x33, 0x53, 0x32, 0x77, 0x77, 0xee, 0xe3, 0x8f, 0x92, 0x20, 0x7f, 0xfc, 0x9a, 0x57, 0x19, 0x25,
	0x01, 0xd6, 0x04, 0xf3, 0x5f, 0x0d, 0x32, 0x6d, 0x37, 0x64, 0x34, 0x52, 0xa3, 0x6f, 0xfc, 0xb0,
	0xef, 0x91, 0x46, 0x3f, 0xe2, 0x7e, 0xb6, 0x67, 0x5e, 0xd4, 0x92, 0x7e, 0xc4, 0xbf, 0x16, 0x5b,
	0x3b, 0xbf, 0x33, 0x05, 0xdc, 0x9e, 0x3f, 0x36, 0xcc, 0xfa, 0x97, 0x82, 0xd9, 0xbf, 0xd8, 0x64,
	0x21, 0xa0, 0x13, 0x65, 0xf8, 0xf8, 0xb7, 0xfd, 0xb7, 0xa4, 0x36, 0x61, 0x34, 0xf5, 0xbb, 0x3c,
	0x0d, 0x65, 0x9f, 0x77, 0xf1, 0xd4, 0x6c, 0xdb, 0xdd, 0xf8, 0x27, 0x46, 0xd3, 0x3d, 0x9e, 0x86,
	0x5e, 0x75, 0x22, 0xff, 0x5a, 0xa3, 0xa4, 0xaa, 0xa8, 0x73, 0x7f, 0xa3, 0x80, 0x74, 0x63, 0x18,
	0x7b, 0x0d, 0x28, 0xca, 0xda, 0xab, 0x71, 0xc2, 0x45, 0x46, 0xca, 0xbb, 0x86, 0x4a, 0x9c, 0x70,
	0xc8, 0x48, 0x0e, 0x37, 0xaf, 0xde, 0xfa, 0xa3, 0x5d, 0xfd, 0xa3, 0x5c, 0x5e, 0xed, 0xd7, 0x3b,
	0x21, 0xb3, 0xf3, 0xf7, 0xc6, 0xa9, 0xcc, 0xbd, 0xb2, 0xad, 0x3a, 0x0f, 0xf5, 0x1d, 0x0e, 0x5d,
	0xd7, 0x5e, 0x21, 0xc5, 0x61, 0x7f, 0x80, 0xab, 0x6b, 0x1e, 0xfc, 0x89, 0x4b, 0x45, 0x93, 0xa1,
	0x96, 0xe2, 0x97, 0xf3, 0xb9, 0xb6, 0xb4, 0xf5, 0xd0, 0x75, 0x41, 0x7c, 0x1a, 0x04, 0xa9, 0xfa,
	0xdd, 0x05, 0xfe, 0x56, 0x45, 0x73, 0x3f, 0x91, 0x77, 0x85, 0xa2, 0xf9, 0x79, 0xe2, 0xfc, 0x52,
	0x37, 0x95, 0x4d, 0xd7, 0xc5, 0x38, 0x79, 0x16, 0xa7, 0x27, 0x46, 0x9c, 0x04, 0x02, 0xc6, 0xc9,
	0x3f, 0x41, 0xad, 0xd4, 0x80, 0xbc, 0x93, 0x0d, 0x1a, 0x34, 0x03, 0x1f, 0xbf, 0x50, 0xd3, 0x06,
	0xe7, 0x5f, 0x75, 0xa1, 0x5b, 0x6e, 0x6b, 0xaa, 0x30, 0xb2, 0xa6, 0x0b, 0xa3, 0x73, 0x55, 0x44,
	0xe1, 0xdd, 0xaa, 0x88, 0xe2, 0x8c, 0x2a, 0xc2, 0xf9, 0x6f, 0xcb, 0x94, 0x60, 0x13, 0x1a, 0x33,
	0x55, 0x79, 0x69, 0x32, 0xd4, 0x15, 0x0d, 0xa4, 0xc0, 0x03, 0x64, 0x1d, 0x21, 0xcb, 0x82, 0x82,
	0x76, 0x80, 0x28, 0x22, 0x64, 0x59, 0xf0, 0x57, 0x79, 0x29, 0x97, 0x95, 0x49, 0xb9, 0x34, 0xaa,
	0x9c, 0x93, 0x55, 0x92, 0xd3, 0x31, 0xa4, 0x69, 0xb9, 0xe7, 0x8b, 0x49, 0xeb, 0x5c, 0x31, 0xe9,
	0xbc, 0x36, 0x17, 0xb5, 0xce, 0xa5, 0x61, 0xeb, 0xe2, 0x34, 0x3c, 0xd3, 0x84, 0xff, 0x4b, 0xff,
	0x85, 0x7a, 0xb3, 0xed, 0xba, 0x17, 0x15, 0x42, 0xd6, 0xac, 0x42, 0xe8, 0xe2, 0x2a, 0xab, 0x30,
	0xbb, 0xca, 0x9a, 0x51, 0xc9, 0x15, 0xe7, 0x54, 0x72, 0xa6, 0x99, 0x2c, 0x4c, 0x9b, 0xc9, 0x39,
	0xad, 0x95, 0xce, 0x97, 0xe0, 0xe7, 0x8b, 0xf9, 0xf2, 0xf9, 0x62, 0xde, 0xf9, 0x95, 0xa1, 0x8a,
	0xcd, 0xcb, 0x2d, 0x74, 0x46, 0x19, 0x58, 0xb8, 0x62, 0x19, 0x58, 0xbc, 0x72, 0x19, 0xb8, 0xf0,
	0x7e, 0x65, 0x60, 0x69, 0x6e, 0x19, 0x78, 0xce, 0xdf, 0xca, 0xef, 0xe6, 0x6f, 0x95, 0x59, 0xfe,
	0xf6, 0x9f, 0x7a, 0x3b, 0x17, 0x50, 0x31, 0xd3, 0xd3, 0x22, 0x91, 0x75, 0x49, 0x24, 0x2a, 0x5c,
	0x16, 0x89, 0x8a, 0xe7, 0x22, 0x91, 0x0a, 0xa2, 0x0b, 0x5a, 0x10, 0xfd, 0xa9, 0x93, 0xcb, 0x3b,
	0xb9, 0x07, 0x17, 0x77, 0x72, 0x70, 0x91, 0x9f, 0xba, 0xb8, 0x3f, 0xd7, 0x2e, 0xce, 0xf9, 0x7f,
	0x3d, 0xf1, 0x05, 0x47, 0xae, 0x7b, 0x05, 0x53, 0xbd, 0xb2, 0x89, 0x5d, 0xfd, 0x95, 0x9d, 0xbf,
	0xd1, 0xc4, 0xdb, 0x6e, 0xa9, 0x14, 0xa4, 0xb4, 0x9c, 0x1c, 0xd3, 0x21, 0x33, 0x52, 0x90, 0xd4,
	0xf2, 0x1b, 0x60, 0x38, 0xff, 0xab, 0xff, 0x90, 0x45, 0xa1, 0x18, 0xc2, 0x34, 0xac, 0x6c, 0x20,
	0x1b, 0x96, 0x15, 0xd7, 0x2d, 0x99, 0x86, 0xa5, 0x11, 0xc8, 0xb9, 0x99, 0x8e, 0xce, 0x07, 0x68,
	0xd3, 0x68, 0xa9, 0x6a, 0x7b, 0x9d, 0x2c, 0x65, 0x68, 0x35, 0x54, 0x53, 0xd8, 0x86, 0xc4, 0x8a,
	0x1f, 0x3a, 0xa7, 0xc7, 0xa6, 0x0b, 0x97, 0x8f, 0x4d, 0x4b, 0xf3, 0xc6, 0xa6, 0x65, 0x7d, 0x6c,
	0x8a, 0x42, 0x4f, 0xcd, 0xe5, 0x2a, 0x5a, 0xa5, 0xb1, 0xa7, 0x0f, 0xe7, 0x04, 0x7a, 0x6a, 0xd8,
	0x57, 0xd5, 0xd0, 0x6f, 0x8d, 0x89, 0x9f, 0x39, 0x92, 0xad, 0x4d, 0x8f, 0x64, 0xa7, 0x66, 0xef,
	0xe4, 0xdc, 0xec, 0xdd, 0xa8, 0xab, 0x29, 0x54, 0x14, 0xab, 0x64, 0xe1, 0x24, 0x6f, 0x19, 0x8a,
	0x27, 0x97, 0xfe, 0xb3, 0x48, 0x4b, 0x4f, 0xc4, 0x50, 0x57, 0xdf, 0xd1, 0xe1, 0xb9, 0x29, 0x68,
	0x4b, 0xf4, 0x31, 0xc3, 0xc3, 0x8e, 0xeb, 0x82, 0x3f, 0x80, 0xe6, 0xf0, 0x5f, 0x35, 0x44, 0x3d,
	0x5e, 0xe1, 0x83, 0x10, 0xff, 0x43, 0xe3, 0x47, 0x3d, 0xd1, 0x1f, 0x82, 0x84, 0x77, 0xc9, 0xe2,
	0xd8, 0x3f, 0x69, 0xf9, 0x59, 0x93, 0x62, 0xa1, 0x33, 0x90, 0xf1, 0x7e, 0xeb, 0xb5, 0xe8, 0x51,
	0x24, 0xa4, 0x9d, 0x43, 0x0a, 0x0a, 0xd2, 0x36, 0x21, 0x1d, 0xdf, 0x68, 0x75, 0x10, 0xd2, 0x51,
	0x90, 0x4f, 0x31, 0x5e, 0x1a, 0xb1, 0x7f, 0x01, 0x41, 0x8d, 0xf1, 0x9e, 0x16, 0xfc, 0x11, 0x66,
	0x86, 0xff, 0x92, 0x84, 0x1d, 0x68, 0xf1, 0x5f, 0x1c, 0xb8, 0x99, 0x1f, 0x58, 0x56, 0x07, 0x6e,
	0x9a, 0x32, 0x6d, 0xe5, 0x90, 0x8a, 0x82, 0x6c, 0x99, 0x90, 0xed, 0x1c, 0x52, 0x55, 0x90, 0x6d,
	0x13, 0xb2, 0x93, 0x43, 0x6a, 0x0a, 0xb2, 0x63, 0x42, 0x76, 0x73, 0x08, 0x51, 0x90, 0x5d, 0x09,
	0x71, 0x7e, 0xa3, 0xeb, 0x9d, 0x6d, 0x8b, 0x82, 0x60, 0xec, 0x1f, 0xc7, 0x61, 0x1f, 0x3b, 0x37,
	0xa1, 0xf4, 0xda, 0xf8, 0x99, 0x24, 0xd8, 0x6b, 0xa4, 0x86, 0xcf, 0xa2, 0xe9, 0xbb, 0x32, 0xde,
	0x6f, 0xe1, 0x79, 0x82, 0xd7, 0xd6, 0x15, 0x5d, 0x19, 0xef, 0xb7, 0x35, 0x5e, 0x47, 0xd7, 0x6f,
	0x65, 0xbc, 0xdf, 0xd1, 0x78, 0x9b, 0xba, 0x52, 0x2b, 0xe3, 0xfd, 0x4d, 0x8d, 0xb7, 0xa5, 0xeb,
	0xb2, 0x32, 0xde, 0xdf, 0xd2, 0x78, 0xdb, 0xba, 0x12, 0x2b, 0xe3, 0xfd, 0x6d, 0x8d, 0xb7, 0xa3,
	0xdf, 0xbb, 0x32, 0xde, 0xdf, 0xd1, 0x78, 0xbb, 0x82, 0x57, 0x57, 0xbc, 0xdd, 0x59, 0xd6, 0x50,
	0x7d, 0x37, 0x6b, 0xa8, 0x9d, 0xb7, 0x06, 0xe7, 0xbe, 0xee, 0x02, 0xbb, 0xae, 0xab, 0xd5, 0xfc,
	0x96, 0x51, 0xf3, 0xdf, 0xd5, 0xd3, 0x41, 0x57, 0xb4, 0xad, 0xa7, 0x2c, 0x55, 0x6d, 0xeb, 0x29,
	0x4b, 0x1f, 0x17, 0x9e, 0x59, 0x87, 0x65, 0xfc, 0xc7, 0xdb, 0xce, 0x1f, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x73, 0x6f, 0x34, 0xea, 0x8e, 0x2b, 0x00, 0x00,
}
