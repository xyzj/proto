// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol_esu.proto

package wlst_pb2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//Wlst_esu_9100_9900_9d00_a500
type WlstEsu_9000 struct {
	//1-成功，0-失败
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstEsu_9000) Reset()         { *m = WlstEsu_9000{} }
func (m *WlstEsu_9000) String() string { return proto.CompactTextString(m) }
func (*WlstEsu_9000) ProtoMessage()    {}
func (*WlstEsu_9000) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdb47e59a3bfe786, []int{0}
}

func (m *WlstEsu_9000) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstEsu_9000.Unmarshal(m, b)
}
func (m *WlstEsu_9000) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstEsu_9000.Marshal(b, m, deterministic)
}
func (m *WlstEsu_9000) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstEsu_9000.Merge(m, src)
}
func (m *WlstEsu_9000) XXX_Size() int {
	return xxx_messageInfo_WlstEsu_9000.Size(m)
}
func (m *WlstEsu_9000) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstEsu_9000.DiscardUnknown(m)
}

var xxx_messageInfo_WlstEsu_9000 proto.InternalMessageInfo

func (m *WlstEsu_9000) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type WlstEsu_9400 struct {
	//二进制转int
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstEsu_9400) Reset()         { *m = WlstEsu_9400{} }
func (m *WlstEsu_9400) String() string { return proto.CompactTextString(m) }
func (*WlstEsu_9400) ProtoMessage()    {}
func (*WlstEsu_9400) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdb47e59a3bfe786, []int{1}
}

func (m *WlstEsu_9400) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstEsu_9400.Unmarshal(m, b)
}
func (m *WlstEsu_9400) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstEsu_9400.Marshal(b, m, deterministic)
}
func (m *WlstEsu_9400) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstEsu_9400.Merge(m, src)
}
func (m *WlstEsu_9400) XXX_Size() int {
	return xxx_messageInfo_WlstEsu_9400.Size(m)
}
func (m *WlstEsu_9400) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstEsu_9400.DiscardUnknown(m)
}

var xxx_messageInfo_WlstEsu_9400 proto.InternalMessageInfo

func (m *WlstEsu_9400) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

//Wlst_esu_1100
type WlstEsu_9200 struct {
	//预热时间，2-30,默认10
	WarmupTime int32 `protobuf:"varint,1,opt,name=warmup_time,json=warmupTime,proto3" json:"warmup_time,omitempty"`
	//开机时间，hh*60+mm
	OnTime int32 `protobuf:"varint,2,opt,name=on_time,json=onTime,proto3" json:"on_time,omitempty"`
	//开机时间，hh*60+mm
	OffTime int32 `protobuf:"varint,3,opt,name=off_time,json=offTime,proto3" json:"off_time,omitempty"`
	//风机启动温度
	FanStartTemperature int32 `protobuf:"varint,4,opt,name=fan_start_temperature,json=fanStartTemperature,proto3" json:"fan_start_temperature,omitempty"`
	//退出节能温度
	StopSaver int32 `protobuf:"varint,5,opt,name=stop_saver,json=stopSaver,proto3" json:"stop_saver,omitempty"`
	//强制保护温度
	ProtectionTemperature int32 `protobuf:"varint,6,opt,name=protection_temperature,json=protectionTemperature,proto3" json:"protection_temperature,omitempty"`
	//输入过压门限值
	InputOvervoltage int32 `protobuf:"varint,7,opt,name=input_overvoltage,json=inputOvervoltage,proto3" json:"input_overvoltage,omitempty"`
	//输入欠压门限值
	InputUndervoltage int32 `protobuf:"varint,8,opt,name=input_undervoltage,json=inputUndervoltage,proto3" json:"input_undervoltage,omitempty"`
	//输出过载门限值
	OutputOverload int32 `protobuf:"varint,9,opt,name=output_overload,json=outputOverload,proto3" json:"output_overload,omitempty"`
	//供电相数
	PhaseCount           int32    `protobuf:"varint,10,opt,name=phase_count,json=phaseCount,proto3" json:"phase_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstEsu_9200) Reset()         { *m = WlstEsu_9200{} }
func (m *WlstEsu_9200) String() string { return proto.CompactTextString(m) }
func (*WlstEsu_9200) ProtoMessage()    {}
func (*WlstEsu_9200) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdb47e59a3bfe786, []int{2}
}

func (m *WlstEsu_9200) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstEsu_9200.Unmarshal(m, b)
}
func (m *WlstEsu_9200) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstEsu_9200.Marshal(b, m, deterministic)
}
func (m *WlstEsu_9200) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstEsu_9200.Merge(m, src)
}
func (m *WlstEsu_9200) XXX_Size() int {
	return xxx_messageInfo_WlstEsu_9200.Size(m)
}
func (m *WlstEsu_9200) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstEsu_9200.DiscardUnknown(m)
}

var xxx_messageInfo_WlstEsu_9200 proto.InternalMessageInfo

func (m *WlstEsu_9200) GetWarmupTime() int32 {
	if m != nil {
		return m.WarmupTime
	}
	return 0
}

func (m *WlstEsu_9200) GetOnTime() int32 {
	if m != nil {
		return m.OnTime
	}
	return 0
}

func (m *WlstEsu_9200) GetOffTime() int32 {
	if m != nil {
		return m.OffTime
	}
	return 0
}

func (m *WlstEsu_9200) GetFanStartTemperature() int32 {
	if m != nil {
		return m.FanStartTemperature
	}
	return 0
}

func (m *WlstEsu_9200) GetStopSaver() int32 {
	if m != nil {
		return m.StopSaver
	}
	return 0
}

func (m *WlstEsu_9200) GetProtectionTemperature() int32 {
	if m != nil {
		return m.ProtectionTemperature
	}
	return 0
}

func (m *WlstEsu_9200) GetInputOvervoltage() int32 {
	if m != nil {
		return m.InputOvervoltage
	}
	return 0
}

func (m *WlstEsu_9200) GetInputUndervoltage() int32 {
	if m != nil {
		return m.InputUndervoltage
	}
	return 0
}

func (m *WlstEsu_9200) GetOutputOverload() int32 {
	if m != nil {
		return m.OutputOverload
	}
	return 0
}

func (m *WlstEsu_9200) GetPhaseCount() int32 {
	if m != nil {
		return m.PhaseCount
	}
	return 0
}

//Wlst_esu_9300
type WlstEsu_9F00 struct {
	//时间,yyyy-mm-dd hh:mm:ss
	DateTime string `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	//温度  （1字节）
	Temperature int32 `protobuf:"varint,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	//A相输入电压
	APhaseInputVoltage float64 `protobuf:"fixed64,3,opt,name=a_phase_input_voltage,json=aPhaseInputVoltage,proto3" json:"a_phase_input_voltage,omitempty"`
	//B相输入电压
	BPhaseInputVoltage float64 `protobuf:"fixed64,4,opt,name=b_phase_input_voltage,json=bPhaseInputVoltage,proto3" json:"b_phase_input_voltage,omitempty"`
	//C相输入电压
	CPhaseInputVoltage float64 `protobuf:"fixed64,5,opt,name=c_phase_input_voltage,json=cPhaseInputVoltage,proto3" json:"c_phase_input_voltage,omitempty"`
	//A相输出电压
	APhaseOutputVoltage float64 `protobuf:"fixed64,6,opt,name=a_phase_output_voltage,json=aPhaseOutputVoltage,proto3" json:"a_phase_output_voltage,omitempty"`
	//B相输出电压
	BPhaseOutputVoltage float64 `protobuf:"fixed64,7,opt,name=b_phase_output_voltage,json=bPhaseOutputVoltage,proto3" json:"b_phase_output_voltage,omitempty"`
	//C相输出电压
	CPhaseOutputVoltage float64 `protobuf:"fixed64,8,opt,name=c_phase_output_voltage,json=cPhaseOutputVoltage,proto3" json:"c_phase_output_voltage,omitempty"`
	//A相输出电流
	APhaseOutputCurrent float64 `protobuf:"fixed64,9,opt,name=a_phase_output_current,json=aPhaseOutputCurrent,proto3" json:"a_phase_output_current,omitempty"`
	//B相输出电流
	BPhaseOutputCurrent float64 `protobuf:"fixed64,10,opt,name=b_phase_output_current,json=bPhaseOutputCurrent,proto3" json:"b_phase_output_current,omitempty"`
	//C相输出电流
	CPhaseOutputCurrent float64 `protobuf:"fixed64,11,opt,name=c_phase_output_current,json=cPhaseOutputCurrent,proto3" json:"c_phase_output_current,omitempty"`
	//A相输出功率
	APhaseOutputPower float64 `protobuf:"fixed64,12,opt,name=a_phase_output_power,json=aPhaseOutputPower,proto3" json:"a_phase_output_power,omitempty"`
	//B相输出功率
	BPhaseOutputPower float64 `protobuf:"fixed64,13,opt,name=b_phase_output_power,json=bPhaseOutputPower,proto3" json:"b_phase_output_power,omitempty"`
	//C相输出功率
	CPhaseOutputPower float64 `protobuf:"fixed64,14,opt,name=c_phase_output_power,json=cPhaseOutputPower,proto3" json:"c_phase_output_power,omitempty"`
	//风机状态（1字节）
	FanStatus int32 `protobuf:"varint,15,opt,name=fan_status,json=fanStatus,proto3" json:"fan_status,omitempty"`
	//节电器工作状态（1字节）
	SaverStatus int32 `protobuf:"varint,16,opt,name=saver_status,json=saverStatus,proto3" json:"saver_status,omitempty"`
	//开机运行时间，hh*60+mm
	RunTime int32 `protobuf:"varint,17,opt,name=run_time,json=runTime,proto3" json:"run_time,omitempty"`
	//节能运行时间，hh*60+mm
	SaverTime int32 `protobuf:"varint,18,opt,name=saver_time,json=saverTime,proto3" json:"saver_time,omitempty"`
	//当前目标调压值
	AdjustValue float64 `protobuf:"fixed64,19,opt,name=adjust_value,json=adjustValue,proto3" json:"adjust_value,omitempty"`
	//现存故障
	ExistingFault int32 `protobuf:"varint,20,opt,name=existing_fault,json=existingFault,proto3" json:"existing_fault,omitempty"`
	//今天复位次数(1字节)
	ResetDay0 int32 `protobuf:"varint,21,opt,name=reset_day0,json=resetDay0,proto3" json:"reset_day0,omitempty"`
	//昨天复位次数(1字节)
	ResetDay1 int32 `protobuf:"varint,22,opt,name=reset_day1,json=resetDay1,proto3" json:"reset_day1,omitempty"`
	//前天复位次数(1字节)
	ResetDay2 int32 `protobuf:"varint,23,opt,name=reset_day2,json=resetDay2,proto3" json:"reset_day2,omitempty"`
	//大前天复位次数(1字节)
	ResetDay3 int32 `protobuf:"varint,24,opt,name=reset_day3,json=resetDay3,proto3" json:"reset_day3,omitempty"`
	//参数状态(4字节=>%d)
	ArgsStatus int64 `protobuf:"varint,25,opt,name=args_status,json=argsStatus,proto3" json:"args_status,omitempty"`
	//节能模式（1字节）接触器=1，IGBT=0
	SaverMode int32 `protobuf:"varint,26,opt,name=saver_mode,json=saverMode,proto3" json:"saver_mode,omitempty"`
	//当前调压档位值（1字节）
	AdjustStalls int32 `protobuf:"varint,27,opt,name=adjust_stalls,json=adjustStalls,proto3" json:"adjust_stalls,omitempty"`
	//调压等待时间（1字节）
	AdjustTime int32 `protobuf:"varint,28,opt,name=adjust_time,json=adjustTime,proto3" json:"adjust_time,omitempty"`
	//a相电压调节位置（1字节）
	AdjustA int32 `protobuf:"varint,29,opt,name=adjust_a,json=adjustA,proto3" json:"adjust_a,omitempty"`
	//b相电压调节位置（1字节）
	AdjustB int32 `protobuf:"varint,30,opt,name=adjust_b,json=adjustB,proto3" json:"adjust_b,omitempty"`
	//C相电压调节位置（1字节）
	AdjustC int32 `protobuf:"varint,31,opt,name=adjust_c,json=adjustC,proto3" json:"adjust_c,omitempty"`
	//IGBT状态（1字节）
	IgbtStatus int32 `protobuf:"varint,32,opt,name=igbt_status,json=igbtStatus,proto3" json:"igbt_status,omitempty"`
	//IGBT温度（1字节）
	IgbtTemperature int32 `protobuf:"varint,33,opt,name=igbt_temperature,json=igbtTemperature,proto3" json:"igbt_temperature,omitempty"`
	//事件记录序号（1字节）
	EventNo int32 `protobuf:"varint,34,opt,name=event_no,json=eventNo,proto3" json:"event_no,omitempty"`
	//开关量输出状态（1字节）
	SwitchOutStatus int32 `protobuf:"varint,35,opt,name=switch_out_status,json=switchOutStatus,proto3" json:"switch_out_status,omitempty"`
	//开关量输入状态（1字节）
	SwitchInStatus int32 `protobuf:"varint,36,opt,name=switch_in_status,json=switchInStatus,proto3" json:"switch_in_status,omitempty"`
	//投运/停运状态(1字节)
	RunStatus            int32    `protobuf:"varint,37,opt,name=run_status,json=runStatus,proto3" json:"run_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstEsu_9F00) Reset()         { *m = WlstEsu_9F00{} }
func (m *WlstEsu_9F00) String() string { return proto.CompactTextString(m) }
func (*WlstEsu_9F00) ProtoMessage()    {}
func (*WlstEsu_9F00) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdb47e59a3bfe786, []int{3}
}

func (m *WlstEsu_9F00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstEsu_9F00.Unmarshal(m, b)
}
func (m *WlstEsu_9F00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstEsu_9F00.Marshal(b, m, deterministic)
}
func (m *WlstEsu_9F00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstEsu_9F00.Merge(m, src)
}
func (m *WlstEsu_9F00) XXX_Size() int {
	return xxx_messageInfo_WlstEsu_9F00.Size(m)
}
func (m *WlstEsu_9F00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstEsu_9F00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstEsu_9F00 proto.InternalMessageInfo

func (m *WlstEsu_9F00) GetDateTime() string {
	if m != nil {
		return m.DateTime
	}
	return ""
}

func (m *WlstEsu_9F00) GetTemperature() int32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func (m *WlstEsu_9F00) GetAPhaseInputVoltage() float64 {
	if m != nil {
		return m.APhaseInputVoltage
	}
	return 0
}

func (m *WlstEsu_9F00) GetBPhaseInputVoltage() float64 {
	if m != nil {
		return m.BPhaseInputVoltage
	}
	return 0
}

func (m *WlstEsu_9F00) GetCPhaseInputVoltage() float64 {
	if m != nil {
		return m.CPhaseInputVoltage
	}
	return 0
}

func (m *WlstEsu_9F00) GetAPhaseOutputVoltage() float64 {
	if m != nil {
		return m.APhaseOutputVoltage
	}
	return 0
}

func (m *WlstEsu_9F00) GetBPhaseOutputVoltage() float64 {
	if m != nil {
		return m.BPhaseOutputVoltage
	}
	return 0
}

func (m *WlstEsu_9F00) GetCPhaseOutputVoltage() float64 {
	if m != nil {
		return m.CPhaseOutputVoltage
	}
	return 0
}

func (m *WlstEsu_9F00) GetAPhaseOutputCurrent() float64 {
	if m != nil {
		return m.APhaseOutputCurrent
	}
	return 0
}

func (m *WlstEsu_9F00) GetBPhaseOutputCurrent() float64 {
	if m != nil {
		return m.BPhaseOutputCurrent
	}
	return 0
}

func (m *WlstEsu_9F00) GetCPhaseOutputCurrent() float64 {
	if m != nil {
		return m.CPhaseOutputCurrent
	}
	return 0
}

func (m *WlstEsu_9F00) GetAPhaseOutputPower() float64 {
	if m != nil {
		return m.APhaseOutputPower
	}
	return 0
}

func (m *WlstEsu_9F00) GetBPhaseOutputPower() float64 {
	if m != nil {
		return m.BPhaseOutputPower
	}
	return 0
}

func (m *WlstEsu_9F00) GetCPhaseOutputPower() float64 {
	if m != nil {
		return m.CPhaseOutputPower
	}
	return 0
}

func (m *WlstEsu_9F00) GetFanStatus() int32 {
	if m != nil {
		return m.FanStatus
	}
	return 0
}

func (m *WlstEsu_9F00) GetSaverStatus() int32 {
	if m != nil {
		return m.SaverStatus
	}
	return 0
}

func (m *WlstEsu_9F00) GetRunTime() int32 {
	if m != nil {
		return m.RunTime
	}
	return 0
}

func (m *WlstEsu_9F00) GetSaverTime() int32 {
	if m != nil {
		return m.SaverTime
	}
	return 0
}

func (m *WlstEsu_9F00) GetAdjustValue() float64 {
	if m != nil {
		return m.AdjustValue
	}
	return 0
}

func (m *WlstEsu_9F00) GetExistingFault() int32 {
	if m != nil {
		return m.ExistingFault
	}
	return 0
}

func (m *WlstEsu_9F00) GetResetDay0() int32 {
	if m != nil {
		return m.ResetDay0
	}
	return 0
}

func (m *WlstEsu_9F00) GetResetDay1() int32 {
	if m != nil {
		return m.ResetDay1
	}
	return 0
}

func (m *WlstEsu_9F00) GetResetDay2() int32 {
	if m != nil {
		return m.ResetDay2
	}
	return 0
}

func (m *WlstEsu_9F00) GetResetDay3() int32 {
	if m != nil {
		return m.ResetDay3
	}
	return 0
}

func (m *WlstEsu_9F00) GetArgsStatus() int64 {
	if m != nil {
		return m.ArgsStatus
	}
	return 0
}

func (m *WlstEsu_9F00) GetSaverMode() int32 {
	if m != nil {
		return m.SaverMode
	}
	return 0
}

func (m *WlstEsu_9F00) GetAdjustStalls() int32 {
	if m != nil {
		return m.AdjustStalls
	}
	return 0
}

func (m *WlstEsu_9F00) GetAdjustTime() int32 {
	if m != nil {
		return m.AdjustTime
	}
	return 0
}

func (m *WlstEsu_9F00) GetAdjustA() int32 {
	if m != nil {
		return m.AdjustA
	}
	return 0
}

func (m *WlstEsu_9F00) GetAdjustB() int32 {
	if m != nil {
		return m.AdjustB
	}
	return 0
}

func (m *WlstEsu_9F00) GetAdjustC() int32 {
	if m != nil {
		return m.AdjustC
	}
	return 0
}

func (m *WlstEsu_9F00) GetIgbtStatus() int32 {
	if m != nil {
		return m.IgbtStatus
	}
	return 0
}

func (m *WlstEsu_9F00) GetIgbtTemperature() int32 {
	if m != nil {
		return m.IgbtTemperature
	}
	return 0
}

func (m *WlstEsu_9F00) GetEventNo() int32 {
	if m != nil {
		return m.EventNo
	}
	return 0
}

func (m *WlstEsu_9F00) GetSwitchOutStatus() int32 {
	if m != nil {
		return m.SwitchOutStatus
	}
	return 0
}

func (m *WlstEsu_9F00) GetSwitchInStatus() int32 {
	if m != nil {
		return m.SwitchInStatus
	}
	return 0
}

func (m *WlstEsu_9F00) GetRunStatus() int32 {
	if m != nil {
		return m.RunStatus
	}
	return 0
}

type WlstEsu_1600 struct {
	//时间 yyyy-mm-dd hh:mm:ss
	DateTime             string   `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstEsu_1600) Reset()         { *m = WlstEsu_1600{} }
func (m *WlstEsu_1600) String() string { return proto.CompactTextString(m) }
func (*WlstEsu_1600) ProtoMessage()    {}
func (*WlstEsu_1600) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdb47e59a3bfe786, []int{4}
}

func (m *WlstEsu_1600) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstEsu_1600.Unmarshal(m, b)
}
func (m *WlstEsu_1600) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstEsu_1600.Marshal(b, m, deterministic)
}
func (m *WlstEsu_1600) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstEsu_1600.Merge(m, src)
}
func (m *WlstEsu_1600) XXX_Size() int {
	return xxx_messageInfo_WlstEsu_1600.Size(m)
}
func (m *WlstEsu_1600) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstEsu_1600.DiscardUnknown(m)
}

var xxx_messageInfo_WlstEsu_1600 proto.InternalMessageInfo

func (m *WlstEsu_1600) GetDateTime() string {
	if m != nil {
		return m.DateTime
	}
	return ""
}

//Wlst_esu_1400
type WlstEsu_9500 struct {
	//调压时间x，hh*60+mm
	XAdjustTime []int32 `protobuf:"varint,1,rep,packed,name=x_adjust_time,json=xAdjustTime,proto3" json:"x_adjust_time,omitempty"`
	//调压值x
	XAdjustValue         []int32  `protobuf:"varint,2,rep,packed,name=x_adjust_value,json=xAdjustValue,proto3" json:"x_adjust_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstEsu_9500) Reset()         { *m = WlstEsu_9500{} }
func (m *WlstEsu_9500) String() string { return proto.CompactTextString(m) }
func (*WlstEsu_9500) ProtoMessage()    {}
func (*WlstEsu_9500) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdb47e59a3bfe786, []int{5}
}

func (m *WlstEsu_9500) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstEsu_9500.Unmarshal(m, b)
}
func (m *WlstEsu_9500) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstEsu_9500.Marshal(b, m, deterministic)
}
func (m *WlstEsu_9500) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstEsu_9500.Merge(m, src)
}
func (m *WlstEsu_9500) XXX_Size() int {
	return xxx_messageInfo_WlstEsu_9500.Size(m)
}
func (m *WlstEsu_9500) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstEsu_9500.DiscardUnknown(m)
}

var xxx_messageInfo_WlstEsu_9500 proto.InternalMessageInfo

func (m *WlstEsu_9500) GetXAdjustTime() []int32 {
	if m != nil {
		return m.XAdjustTime
	}
	return nil
}

func (m *WlstEsu_9500) GetXAdjustValue() []int32 {
	if m != nil {
		return m.XAdjustValue
	}
	return nil
}

//Wlst_esu_1700_1a00
type WlstEsu_9700 struct {
	//记录序号
	No int32 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	//时间（yyyy-mm-dd hh:mm:ss）
	DateTime string `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	//目标调压值（2字节）
	AdjustValue float64 `protobuf:"fixed64,3,opt,name=adjust_value,json=adjustValue,proto3" json:"adjust_value,omitempty"`
	//A相输入电压
	APhaseInputVoltage float64 `protobuf:"fixed64,4,opt,name=a_phase_input_voltage,json=aPhaseInputVoltage,proto3" json:"a_phase_input_voltage,omitempty"`
	//B相输入电压
	BPhaseInputVoltage float64 `protobuf:"fixed64,5,opt,name=b_phase_input_voltage,json=bPhaseInputVoltage,proto3" json:"b_phase_input_voltage,omitempty"`
	//C相输入电压
	CPhaseInputVoltage float64 `protobuf:"fixed64,6,opt,name=c_phase_input_voltage,json=cPhaseInputVoltage,proto3" json:"c_phase_input_voltage,omitempty"`
	//A相输出电压
	APhaseOutputVoltage float64 `protobuf:"fixed64,7,opt,name=a_phase_output_voltage,json=aPhaseOutputVoltage,proto3" json:"a_phase_output_voltage,omitempty"`
	//B相输出电压
	BPhaseOutputVoltage float64 `protobuf:"fixed64,8,opt,name=b_phase_output_voltage,json=bPhaseOutputVoltage,proto3" json:"b_phase_output_voltage,omitempty"`
	//C相输出电压
	CPhaseOutputVoltage float64 `protobuf:"fixed64,9,opt,name=c_phase_output_voltage,json=cPhaseOutputVoltage,proto3" json:"c_phase_output_voltage,omitempty"`
	//A相输出电流
	APhaseOutputCurrent float64 `protobuf:"fixed64,10,opt,name=a_phase_output_current,json=aPhaseOutputCurrent,proto3" json:"a_phase_output_current,omitempty"`
	//B相输出电流
	BPhaseOutputCurrent float64 `protobuf:"fixed64,11,opt,name=b_phase_output_current,json=bPhaseOutputCurrent,proto3" json:"b_phase_output_current,omitempty"`
	//C相输出电流
	CPhaseOutputCurrent float64 `protobuf:"fixed64,12,opt,name=c_phase_output_current,json=cPhaseOutputCurrent,proto3" json:"c_phase_output_current,omitempty"`
	//节能运行时间，hh*60+mm
	SaverTime int32 `protobuf:"varint,13,opt,name=saver_time,json=saverTime,proto3" json:"saver_time,omitempty"`
	//节电器工作状态（1字节）
	SaverStatus int32 `protobuf:"varint,14,opt,name=saver_status,json=saverStatus,proto3" json:"saver_status,omitempty"`
	//温度  （1字节）
	Temperature int32 `protobuf:"varint,15,opt,name=temperature,proto3" json:"temperature,omitempty"`
	//事件类型（1字节）
	EventType int32 `protobuf:"varint,16,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	//信息码（1字节）
	InfoNumber int32 `protobuf:"varint,17,opt,name=info_number,json=infoNumber,proto3" json:"info_number,omitempty"`
	//开机运行时间，hh*60+mm
	RunTime              int32    `protobuf:"varint,18,opt,name=run_time,json=runTime,proto3" json:"run_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstEsu_9700) Reset()         { *m = WlstEsu_9700{} }
func (m *WlstEsu_9700) String() string { return proto.CompactTextString(m) }
func (*WlstEsu_9700) ProtoMessage()    {}
func (*WlstEsu_9700) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdb47e59a3bfe786, []int{6}
}

func (m *WlstEsu_9700) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstEsu_9700.Unmarshal(m, b)
}
func (m *WlstEsu_9700) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstEsu_9700.Marshal(b, m, deterministic)
}
func (m *WlstEsu_9700) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstEsu_9700.Merge(m, src)
}
func (m *WlstEsu_9700) XXX_Size() int {
	return xxx_messageInfo_WlstEsu_9700.Size(m)
}
func (m *WlstEsu_9700) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstEsu_9700.DiscardUnknown(m)
}

var xxx_messageInfo_WlstEsu_9700 proto.InternalMessageInfo

func (m *WlstEsu_9700) GetNo() int32 {
	if m != nil {
		return m.No
	}
	return 0
}

func (m *WlstEsu_9700) GetDateTime() string {
	if m != nil {
		return m.DateTime
	}
	return ""
}

func (m *WlstEsu_9700) GetAdjustValue() float64 {
	if m != nil {
		return m.AdjustValue
	}
	return 0
}

func (m *WlstEsu_9700) GetAPhaseInputVoltage() float64 {
	if m != nil {
		return m.APhaseInputVoltage
	}
	return 0
}

func (m *WlstEsu_9700) GetBPhaseInputVoltage() float64 {
	if m != nil {
		return m.BPhaseInputVoltage
	}
	return 0
}

func (m *WlstEsu_9700) GetCPhaseInputVoltage() float64 {
	if m != nil {
		return m.CPhaseInputVoltage
	}
	return 0
}

func (m *WlstEsu_9700) GetAPhaseOutputVoltage() float64 {
	if m != nil {
		return m.APhaseOutputVoltage
	}
	return 0
}

func (m *WlstEsu_9700) GetBPhaseOutputVoltage() float64 {
	if m != nil {
		return m.BPhaseOutputVoltage
	}
	return 0
}

func (m *WlstEsu_9700) GetCPhaseOutputVoltage() float64 {
	if m != nil {
		return m.CPhaseOutputVoltage
	}
	return 0
}

func (m *WlstEsu_9700) GetAPhaseOutputCurrent() float64 {
	if m != nil {
		return m.APhaseOutputCurrent
	}
	return 0
}

func (m *WlstEsu_9700) GetBPhaseOutputCurrent() float64 {
	if m != nil {
		return m.BPhaseOutputCurrent
	}
	return 0
}

func (m *WlstEsu_9700) GetCPhaseOutputCurrent() float64 {
	if m != nil {
		return m.CPhaseOutputCurrent
	}
	return 0
}

func (m *WlstEsu_9700) GetSaverTime() int32 {
	if m != nil {
		return m.SaverTime
	}
	return 0
}

func (m *WlstEsu_9700) GetSaverStatus() int32 {
	if m != nil {
		return m.SaverStatus
	}
	return 0
}

func (m *WlstEsu_9700) GetTemperature() int32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func (m *WlstEsu_9700) GetEventType() int32 {
	if m != nil {
		return m.EventType
	}
	return 0
}

func (m *WlstEsu_9700) GetInfoNumber() int32 {
	if m != nil {
		return m.InfoNumber
	}
	return 0
}

func (m *WlstEsu_9700) GetRunTime() int32 {
	if m != nil {
		return m.RunTime
	}
	return 0
}

type WlstEsu_1800 struct {
	//目标调压值（2字节）
	AdjustValue          int32    `protobuf:"varint,1,opt,name=adjust_value,json=adjustValue,proto3" json:"adjust_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstEsu_1800) Reset()         { *m = WlstEsu_1800{} }
func (m *WlstEsu_1800) String() string { return proto.CompactTextString(m) }
func (*WlstEsu_1800) ProtoMessage()    {}
func (*WlstEsu_1800) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdb47e59a3bfe786, []int{7}
}

func (m *WlstEsu_1800) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstEsu_1800.Unmarshal(m, b)
}
func (m *WlstEsu_1800) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstEsu_1800.Marshal(b, m, deterministic)
}
func (m *WlstEsu_1800) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstEsu_1800.Merge(m, src)
}
func (m *WlstEsu_1800) XXX_Size() int {
	return xxx_messageInfo_WlstEsu_1800.Size(m)
}
func (m *WlstEsu_1800) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstEsu_1800.DiscardUnknown(m)
}

var xxx_messageInfo_WlstEsu_1800 proto.InternalMessageInfo

func (m *WlstEsu_1800) GetAdjustValue() int32 {
	if m != nil {
		return m.AdjustValue
	}
	return 0
}

//Wlst_esu_2500
type WlstEsu_1900 struct {
	//1900->手动开关机，0-关机，1-开机.2500->0-停运，1-投运
	ManualControl        int32    `protobuf:"varint,1,opt,name=manual_control,json=manualControl,proto3" json:"manual_control,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstEsu_1900) Reset()         { *m = WlstEsu_1900{} }
func (m *WlstEsu_1900) String() string { return proto.CompactTextString(m) }
func (*WlstEsu_1900) ProtoMessage()    {}
func (*WlstEsu_1900) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdb47e59a3bfe786, []int{8}
}

func (m *WlstEsu_1900) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstEsu_1900.Unmarshal(m, b)
}
func (m *WlstEsu_1900) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstEsu_1900.Marshal(b, m, deterministic)
}
func (m *WlstEsu_1900) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstEsu_1900.Merge(m, src)
}
func (m *WlstEsu_1900) XXX_Size() int {
	return xxx_messageInfo_WlstEsu_1900.Size(m)
}
func (m *WlstEsu_1900) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstEsu_1900.DiscardUnknown(m)
}

var xxx_messageInfo_WlstEsu_1900 proto.InternalMessageInfo

func (m *WlstEsu_1900) GetManualControl() int32 {
	if m != nil {
		return m.ManualControl
	}
	return 0
}

type WlstEsu_9A00 struct {
	//记录序号
	No int32 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	//时间（yyyy-mm-dd）
	DateTime string `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	//开机运行时间，hh*60+mm
	RunTime int32 `protobuf:"varint,3,opt,name=run_time,json=runTime,proto3" json:"run_time,omitempty"`
	//节能运行时间，hh*60+mm
	SaverTime            int32    `protobuf:"varint,4,opt,name=saver_time,json=saverTime,proto3" json:"saver_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstEsu_9A00) Reset()         { *m = WlstEsu_9A00{} }
func (m *WlstEsu_9A00) String() string { return proto.CompactTextString(m) }
func (*WlstEsu_9A00) ProtoMessage()    {}
func (*WlstEsu_9A00) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdb47e59a3bfe786, []int{9}
}

func (m *WlstEsu_9A00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstEsu_9A00.Unmarshal(m, b)
}
func (m *WlstEsu_9A00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstEsu_9A00.Marshal(b, m, deterministic)
}
func (m *WlstEsu_9A00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstEsu_9A00.Merge(m, src)
}
func (m *WlstEsu_9A00) XXX_Size() int {
	return xxx_messageInfo_WlstEsu_9A00.Size(m)
}
func (m *WlstEsu_9A00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstEsu_9A00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstEsu_9A00 proto.InternalMessageInfo

func (m *WlstEsu_9A00) GetNo() int32 {
	if m != nil {
		return m.No
	}
	return 0
}

func (m *WlstEsu_9A00) GetDateTime() string {
	if m != nil {
		return m.DateTime
	}
	return ""
}

func (m *WlstEsu_9A00) GetRunTime() int32 {
	if m != nil {
		return m.RunTime
	}
	return 0
}

func (m *WlstEsu_9A00) GetSaverTime() int32 {
	if m != nil {
		return m.SaverTime
	}
	return 0
}

//Wlst_esu_1d00
type WlstEsu_9E00 struct {
	//预热时间，2-30,默认10
	WarmupTime int32 `protobuf:"varint,1,opt,name=warmup_time,json=warmupTime,proto3" json:"warmup_time,omitempty"`
	//开机时间，hh*60+mm
	OnTime int32 `protobuf:"varint,2,opt,name=on_time,json=onTime,proto3" json:"on_time,omitempty"`
	//关机时间，hh*60+mm
	OffTime int32 `protobuf:"varint,3,opt,name=off_time,json=offTime,proto3" json:"off_time,omitempty"`
	//A相变比
	TransformerA int32 `protobuf:"varint,4,opt,name=transformer_a,json=transformerA,proto3" json:"transformer_a,omitempty"`
	//B相变比
	TransformerB int32 `protobuf:"varint,5,opt,name=transformer_b,json=transformerB,proto3" json:"transformer_b,omitempty"`
	//C相变比
	TransformerC int32 `protobuf:"varint,6,opt,name=transformer_c,json=transformerC,proto3" json:"transformer_c,omitempty"`
	//时间模式
	TimeMode int32 `protobuf:"varint,7,opt,name=time_mode,json=timeMode,proto3" json:"time_mode,omitempty"`
	//运行模式
	RunMode int32 `protobuf:"varint,8,opt,name=run_mode,json=runMode,proto3" json:"run_mode,omitempty"`
	//风机启动温度
	FanStartTemperature int32 `protobuf:"varint,9,opt,name=fan_start_temperature,json=fanStartTemperature,proto3" json:"fan_start_temperature,omitempty"`
	//风机关闭温度
	FanStopTemperature int32 `protobuf:"varint,10,opt,name=fan_stop_temperature,json=fanStopTemperature,proto3" json:"fan_stop_temperature,omitempty"`
	//节能停止温度
	SaverStopTemperature int32 `protobuf:"varint,11,opt,name=saver_stop_temperature,json=saverStopTemperature,proto3" json:"saver_stop_temperature,omitempty"`
	//节能恢复温度
	SaverRecoverTemperature int32 `protobuf:"varint,12,opt,name=saver_recover_temperature,json=saverRecoverTemperature,proto3" json:"saver_recover_temperature,omitempty"`
	//强制保护温度
	ProtectionTemperature int32 `protobuf:"varint,13,opt,name=protection_temperature,json=protectionTemperature,proto3" json:"protection_temperature,omitempty"`
	//输入过压门限值
	InputOvervoltage int32 `protobuf:"varint,14,opt,name=input_overvoltage,json=inputOvervoltage,proto3" json:"input_overvoltage,omitempty"`
	//输入欠压门限值
	InputUndervoltage int32 `protobuf:"varint,15,opt,name=input_undervoltage,json=inputUndervoltage,proto3" json:"input_undervoltage,omitempty"`
	//输出过载门限值
	OutputOverload int32 `protobuf:"varint,16,opt,name=output_overload,json=outputOverload,proto3" json:"output_overload,omitempty"`
	//输出欠压门限值
	OutputUndervoltage int32 `protobuf:"varint,17,opt,name=output_undervoltage,json=outputUndervoltage,proto3" json:"output_undervoltage,omitempty"`
	//调压速度
	AdjustSpeed int32 `protobuf:"varint,18,opt,name=adjust_speed,json=adjustSpeed,proto3" json:"adjust_speed,omitempty"`
	//供电相数
	PhaseCount int32 `protobuf:"varint,19,opt,name=phase_count,json=phaseCount,proto3" json:"phase_count,omitempty"`
	//通信模式 1=通过照明终端实现与主站通信， 0=带地址
	CommunicateMode int32 `protobuf:"varint,20,opt,name=communicate_mode,json=communicateMode,proto3" json:"communicate_mode,omitempty"`
	//工作模式（1字节）通用模式=1 ，特殊模式=0
	WorkMode int32 `protobuf:"varint,21,opt,name=work_mode,json=workMode,proto3" json:"work_mode,omitempty"`
	//主动报警（1字节）主动报警=1，禁止主动报警=0
	AlarmOn int32 `protobuf:"varint,22,opt,name=alarm_on,json=alarmOn,proto3" json:"alarm_on,omitempty"`
	//报警延时
	AlarmDelay int32 `protobuf:"varint,23,opt,name=alarm_delay,json=alarmDelay,proto3" json:"alarm_delay,omitempty"`
	//节能模式（1字节）接触器=1，IGBT=0
	SaverMode            int32    `protobuf:"varint,24,opt,name=saver_mode,json=saverMode,proto3" json:"saver_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WlstEsu_9E00) Reset()         { *m = WlstEsu_9E00{} }
func (m *WlstEsu_9E00) String() string { return proto.CompactTextString(m) }
func (*WlstEsu_9E00) ProtoMessage()    {}
func (*WlstEsu_9E00) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdb47e59a3bfe786, []int{10}
}

func (m *WlstEsu_9E00) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WlstEsu_9E00.Unmarshal(m, b)
}
func (m *WlstEsu_9E00) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WlstEsu_9E00.Marshal(b, m, deterministic)
}
func (m *WlstEsu_9E00) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WlstEsu_9E00.Merge(m, src)
}
func (m *WlstEsu_9E00) XXX_Size() int {
	return xxx_messageInfo_WlstEsu_9E00.Size(m)
}
func (m *WlstEsu_9E00) XXX_DiscardUnknown() {
	xxx_messageInfo_WlstEsu_9E00.DiscardUnknown(m)
}

var xxx_messageInfo_WlstEsu_9E00 proto.InternalMessageInfo

func (m *WlstEsu_9E00) GetWarmupTime() int32 {
	if m != nil {
		return m.WarmupTime
	}
	return 0
}

func (m *WlstEsu_9E00) GetOnTime() int32 {
	if m != nil {
		return m.OnTime
	}
	return 0
}

func (m *WlstEsu_9E00) GetOffTime() int32 {
	if m != nil {
		return m.OffTime
	}
	return 0
}

func (m *WlstEsu_9E00) GetTransformerA() int32 {
	if m != nil {
		return m.TransformerA
	}
	return 0
}

func (m *WlstEsu_9E00) GetTransformerB() int32 {
	if m != nil {
		return m.TransformerB
	}
	return 0
}

func (m *WlstEsu_9E00) GetTransformerC() int32 {
	if m != nil {
		return m.TransformerC
	}
	return 0
}

func (m *WlstEsu_9E00) GetTimeMode() int32 {
	if m != nil {
		return m.TimeMode
	}
	return 0
}

func (m *WlstEsu_9E00) GetRunMode() int32 {
	if m != nil {
		return m.RunMode
	}
	return 0
}

func (m *WlstEsu_9E00) GetFanStartTemperature() int32 {
	if m != nil {
		return m.FanStartTemperature
	}
	return 0
}

func (m *WlstEsu_9E00) GetFanStopTemperature() int32 {
	if m != nil {
		return m.FanStopTemperature
	}
	return 0
}

func (m *WlstEsu_9E00) GetSaverStopTemperature() int32 {
	if m != nil {
		return m.SaverStopTemperature
	}
	return 0
}

func (m *WlstEsu_9E00) GetSaverRecoverTemperature() int32 {
	if m != nil {
		return m.SaverRecoverTemperature
	}
	return 0
}

func (m *WlstEsu_9E00) GetProtectionTemperature() int32 {
	if m != nil {
		return m.ProtectionTemperature
	}
	return 0
}

func (m *WlstEsu_9E00) GetInputOvervoltage() int32 {
	if m != nil {
		return m.InputOvervoltage
	}
	return 0
}

func (m *WlstEsu_9E00) GetInputUndervoltage() int32 {
	if m != nil {
		return m.InputUndervoltage
	}
	return 0
}

func (m *WlstEsu_9E00) GetOutputOverload() int32 {
	if m != nil {
		return m.OutputOverload
	}
	return 0
}

func (m *WlstEsu_9E00) GetOutputUndervoltage() int32 {
	if m != nil {
		return m.OutputUndervoltage
	}
	return 0
}

func (m *WlstEsu_9E00) GetAdjustSpeed() int32 {
	if m != nil {
		return m.AdjustSpeed
	}
	return 0
}

func (m *WlstEsu_9E00) GetPhaseCount() int32 {
	if m != nil {
		return m.PhaseCount
	}
	return 0
}

func (m *WlstEsu_9E00) GetCommunicateMode() int32 {
	if m != nil {
		return m.CommunicateMode
	}
	return 0
}

func (m *WlstEsu_9E00) GetWorkMode() int32 {
	if m != nil {
		return m.WorkMode
	}
	return 0
}

func (m *WlstEsu_9E00) GetAlarmOn() int32 {
	if m != nil {
		return m.AlarmOn
	}
	return 0
}

func (m *WlstEsu_9E00) GetAlarmDelay() int32 {
	if m != nil {
		return m.AlarmDelay
	}
	return 0
}

func (m *WlstEsu_9E00) GetSaverMode() int32 {
	if m != nil {
		return m.SaverMode
	}
	return 0
}

func init() {
	proto.RegisterType((*WlstEsu_9000)(nil), "wlst.pb2.Wlst_esu_9000")
	proto.RegisterType((*WlstEsu_9400)(nil), "wlst.pb2.Wlst_esu_9400")
	proto.RegisterType((*WlstEsu_9200)(nil), "wlst.pb2.Wlst_esu_9200")
	proto.RegisterType((*WlstEsu_9F00)(nil), "wlst.pb2.Wlst_esu_9f00")
	proto.RegisterType((*WlstEsu_1600)(nil), "wlst.pb2.Wlst_esu_1600")
	proto.RegisterType((*WlstEsu_9500)(nil), "wlst.pb2.Wlst_esu_9500")
	proto.RegisterType((*WlstEsu_9700)(nil), "wlst.pb2.Wlst_esu_9700")
	proto.RegisterType((*WlstEsu_1800)(nil), "wlst.pb2.Wlst_esu_1800")
	proto.RegisterType((*WlstEsu_1900)(nil), "wlst.pb2.Wlst_esu_1900")
	proto.RegisterType((*WlstEsu_9A00)(nil), "wlst.pb2.Wlst_esu_9a00")
	proto.RegisterType((*WlstEsu_9E00)(nil), "wlst.pb2.Wlst_esu_9e00")
}

func init() { proto.RegisterFile("protocol_esu.proto", fileDescriptor_cdb47e59a3bfe786) }

var fileDescriptor_cdb47e59a3bfe786 = []byte{
	// 1277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x4b, 0x73, 0xdb, 0xb6,
	0x13, 0x1f, 0xc9, 0x0f, 0x49, 0xab, 0xa7, 0xe9, 0x47, 0xe8, 0x7f, 0xfe, 0x6e, 0x1c, 0xa5, 0x69,
	0xdc, 0x57, 0x42, 0xcb, 0x49, 0xda, 0xf4, 0x16, 0x3b, 0xd3, 0x69, 0x0e, 0x8d, 0x33, 0x72, 0x9a,
	0x1e, 0x39, 0x20, 0x05, 0x39, 0x6a, 0x29, 0x82, 0x43, 0x82, 0x72, 0xfc, 0x3d, 0xfa, 0x35, 0x7a,
	0xee, 0x27, 0xeb, 0xbd, 0x83, 0x5d, 0xd0, 0x02, 0x29, 0x3a, 0x1d, 0x69, 0xa6, 0x47, 0xfe, 0x1e,
	0x00, 0xb8, 0xc0, 0xee, 0x02, 0x60, 0x45, 0xb1, 0x90, 0xc2, 0x17, 0x81, 0xcb, 0x93, 0xf4, 0x31,
	0x7e, 0x58, 0xf5, 0xab, 0x20, 0x91, 0x8f, 0x23, 0x6f, 0xd0, 0x7f, 0x04, 0xed, 0x5f, 0x83, 0x44,
	0x2a, 0xce, 0x7d, 0xe1, 0x38, 0x8e, 0xb5, 0x07, 0x9b, 0x89, 0x64, 0x32, 0x4d, 0xec, 0xca, 0x61,
	0xe5, 0x68, 0x63, 0xa8, 0xbf, 0xf2, 0xc2, 0xa7, 0x9f, 0x10, 0xfe, 0xb1, 0x66, 0x2a, 0x07, 0x8e,
	0x63, 0xdd, 0x83, 0xe6, 0x15, 0x8b, 0xa7, 0x69, 0xe4, 0xca, 0xc9, 0x94, 0x6b, 0x39, 0x10, 0xf4,
	0x6e, 0x32, 0xe5, 0xd6, 0x1d, 0xa8, 0x89, 0x90, 0xc8, 0x2a, 0x8d, 0x25, 0x42, 0x24, 0xf6, 0xa1,
	0x2e, 0xc6, 0x63, 0x62, 0xd6, 0x90, 0xa9, 0x89, 0xf1, 0x18, 0xa9, 0x01, 0xec, 0x8e, 0x59, 0xe8,
	0x26, 0x92, 0xc5, 0xd2, 0x95, 0x7c, 0x1a, 0xf1, 0x98, 0xc9, 0x34, 0xe6, 0xf6, 0x3a, 0xea, 0xb6,
	0xc7, 0x2c, 0xbc, 0x50, 0xdc, 0xbb, 0x39, 0x65, 0x1d, 0x00, 0x24, 0x52, 0x44, 0x6e, 0xc2, 0x66,
	0x3c, 0xb6, 0x37, 0x50, 0xd8, 0x50, 0xc8, 0x85, 0x02, 0xac, 0x67, 0xb0, 0xa7, 0xc2, 0xc3, 0x7d,
	0x39, 0x51, 0xcb, 0x31, 0xc6, 0xdc, 0x44, 0xe9, 0xee, 0x9c, 0x35, 0x47, 0xfd, 0x1a, 0xb6, 0x26,
	0x61, 0x94, 0x4a, 0x57, 0xcc, 0x78, 0x3c, 0x13, 0x81, 0x64, 0x97, 0xdc, 0xae, 0xa1, 0xa3, 0x87,
	0xc4, 0xf9, 0x1c, 0xb7, 0xbe, 0x05, 0x8b, 0xc4, 0x69, 0x38, 0x9a, 0xab, 0xeb, 0xa8, 0xa6, 0x61,
	0x7e, 0x31, 0x08, 0xeb, 0x11, 0x74, 0x45, 0x2a, 0xb3, 0xc1, 0x03, 0xc1, 0x46, 0x76, 0x03, 0xb5,
	0x1d, 0x82, 0xcf, 0x35, 0xaa, 0x62, 0x1c, 0x7d, 0x60, 0x09, 0x77, 0x7d, 0x91, 0x86, 0xd2, 0x06,
	0x8a, 0x31, 0x42, 0x67, 0x0a, 0xe9, 0xff, 0xd9, 0x34, 0xb7, 0x65, 0xec, 0x38, 0xd6, 0x5d, 0x68,
	0x8c, 0x98, 0xe4, 0xf3, 0x4d, 0x69, 0x0c, 0xeb, 0x0a, 0xc0, 0xf0, 0x1e, 0x42, 0xd3, 0x0c, 0x00,
	0x6d, 0x8b, 0x09, 0x59, 0xc7, 0xb0, 0xcb, 0x5c, 0x9a, 0x93, 0xfe, 0x28, 0xfb, 0x19, 0xb5, 0x51,
	0x95, 0xa1, 0xc5, 0xde, 0x2a, 0xee, 0xb5, 0xa2, 0xde, 0xeb, 0xbf, 0x39, 0x86, 0x5d, 0xaf, 0xd4,
	0xb2, 0x4e, 0x16, 0xaf, 0xd4, 0xe2, 0x97, 0x5a, 0x36, 0xc8, 0xe2, 0x2f, 0x5a, 0x4e, 0x60, 0x2f,
	0x5b, 0x98, 0x8e, 0x5d, 0xe6, 0xd9, 0x44, 0xcf, 0x36, 0xad, 0xec, 0x1c, 0x39, 0xc3, 0xe4, 0x95,
	0x9b, 0x6a, 0x64, 0xf2, 0xca, 0x4d, 0x7e, 0xb9, 0xa9, 0x4e, 0x26, 0xbf, 0xdc, 0x54, 0x58, 0x9e,
	0x9f, 0xc6, 0x31, 0x0f, 0x25, 0xee, 0x6c, 0x61, 0x79, 0x67, 0x44, 0x95, 0x2c, 0x2f, 0x33, 0xc1,
	0xe2, 0xf2, 0x0c, 0x93, 0x5f, 0x6e, 0x6a, 0x2e, 0x2e, 0x2f, 0x33, 0x3d, 0x81, 0x9d, 0xc2, 0xf2,
	0x22, 0x71, 0xc5, 0x63, 0xbb, 0x85, 0x96, 0x2d, 0x73, 0x71, 0x6f, 0x15, 0xa1, 0x0c, 0x5e, 0x99,
	0xa1, 0x4d, 0x06, 0xaf, 0xcc, 0xe0, 0x97, 0x19, 0x3a, 0x64, 0xf0, 0x17, 0x0c, 0x07, 0x00, 0x3a,
	0xd5, 0x55, 0xb5, 0xe9, 0x52, 0xda, 0x52, 0x7e, 0xcb, 0x34, 0xb1, 0xee, 0x43, 0x0b, 0x13, 0x3a,
	0x13, 0xf4, 0xe8, 0xac, 0x22, 0xa6, 0x25, 0xfb, 0x50, 0x8f, 0x53, 0x5d, 0x61, 0xb6, 0xa8, 0x8e,
	0xc4, 0x29, 0x95, 0x18, 0x55, 0x13, 0xd0, 0x8d, 0xa4, 0xa5, 0x6b, 0x82, 0x42, 0x90, 0xbe, 0x0f,
	0x2d, 0x36, 0xfa, 0x2d, 0x4d, 0xa4, 0x3b, 0x63, 0x41, 0xca, 0xed, 0x6d, 0x5c, 0x64, 0x93, 0xb0,
	0xf7, 0x0a, 0xb2, 0x1e, 0x42, 0x87, 0x7f, 0x9c, 0x24, 0x72, 0x12, 0x5e, 0xba, 0x63, 0x96, 0x06,
	0xd2, 0xde, 0xc1, 0x51, 0xda, 0x19, 0xfa, 0xa3, 0x02, 0xd5, 0x44, 0x31, 0x4f, 0xb8, 0x74, 0x47,
	0xec, 0xda, 0xb1, 0x77, 0x69, 0x22, 0x44, 0x5e, 0xb1, 0x6b, 0x27, 0x47, 0x1f, 0xdb, 0x7b, 0x79,
	0xfa, 0x38, 0x47, 0x0f, 0xec, 0x3b, 0x79, 0x7a, 0x90, 0xa3, 0x4f, 0x6c, 0x3b, 0x4f, 0x9f, 0xa8,
	0xea, 0xc0, 0xe2, 0xcb, 0x24, 0x8b, 0xd0, 0xfe, 0x61, 0xe5, 0x68, 0x6d, 0x08, 0x0a, 0xd2, 0x01,
	0xba, 0x89, 0xc2, 0x54, 0x8c, 0xb8, 0xfd, 0x3f, 0x23, 0x0a, 0x3f, 0x8b, 0x11, 0xb7, 0x1e, 0x40,
	0x5b, 0x47, 0x21, 0x91, 0x2c, 0x08, 0x12, 0xfb, 0x2e, 0x2a, 0x74, 0x68, 0x2e, 0x10, 0xc3, 0x49,
	0x48, 0x84, 0xa1, 0xfc, 0x3f, 0x95, 0x20, 0x82, 0xb2, 0x6a, 0xae, 0x05, 0xcc, 0x3e, 0xa0, 0x5d,
	0xa0, 0xef, 0x97, 0x06, 0xe5, 0xd9, 0x9f, 0x99, 0xd4, 0xa9, 0x41, 0xf9, 0xf6, 0x3d, 0x93, 0x3a,
	0x53, 0x33, 0x4e, 0x2e, 0x3d, 0x99, 0xfd, 0xd6, 0x21, 0xcd, 0xa8, 0x20, 0xfd, 0x5b, 0x5f, 0x42,
	0x0f, 0x05, 0x66, 0x29, 0xbb, 0x8f, 0xaa, 0xae, 0xc2, 0xcd, 0x2a, 0xbe, 0x0f, 0x75, 0x3e, 0xe3,
	0xa1, 0x74, 0x43, 0x61, 0xf7, 0x69, 0x1a, 0xfc, 0x7e, 0x23, 0xac, 0xaf, 0x60, 0x2b, 0xb9, 0x9a,
	0x48, 0xff, 0x83, 0x3a, 0xaf, 0xd9, 0x64, 0x0f, 0x68, 0x18, 0x22, 0xce, 0xd3, 0x6c, 0xc6, 0x23,
	0xe8, 0x69, 0xed, 0xe4, 0xe6, 0xc4, 0x7e, 0x4e, 0x15, 0x9b, 0xf0, 0xd7, 0xe1, 0x3c, 0xe4, 0xea,
	0x4c, 0x6a, 0xcd, 0x43, 0xbd, 0x65, 0xa9, 0xa6, 0xfb, 0xdf, 0x18, 0xe5, 0xfa, 0xf8, 0xf9, 0xbf,
	0x94, 0xeb, 0x3e, 0x33, 0x8b, 0xfb, 0x33, 0xc7, 0xb1, 0xbe, 0x80, 0xf6, 0x47, 0xd7, 0xdc, 0x8e,
	0xca, 0xe1, 0xda, 0xd1, 0xc6, 0x69, 0xb5, 0x57, 0x19, 0x36, 0x3f, 0xbe, 0x9c, 0xef, 0xc9, 0x11,
	0x74, 0x6e, 0x74, 0x74, 0xc2, 0xab, 0x37, 0xc2, 0x96, 0x16, 0xe2, 0x31, 0xef, 0xff, 0xbd, 0x61,
	0xce, 0xf1, 0x9d, 0xe3, 0x58, 0x1d, 0xa8, 0x86, 0x42, 0xb7, 0xf3, 0x6a, 0x28, 0xf2, 0x2b, 0xac,
	0x16, 0x1a, 0x4a, 0x31, 0x91, 0xd6, 0x16, 0x13, 0xe9, 0xd6, 0x8e, 0xb2, 0xbe, 0x7c, 0x47, 0xd9,
	0x58, 0xbe, 0xa3, 0x6c, 0xae, 0xd0, 0x51, 0x6a, 0xab, 0x74, 0x94, 0xfa, 0x2a, 0x1d, 0xa5, 0xb1,
	0x4a, 0x47, 0x81, 0x55, 0x3a, 0x4a, 0x73, 0x95, 0x8e, 0xd2, 0xba, 0xbd, 0xa3, 0xe4, 0x2b, 0x6c,
	0xbb, 0xa4, 0xc2, 0xe6, 0xca, 0x77, 0x67, 0xb1, 0x7c, 0x17, 0x2e, 0x23, 0xdd, 0xc5, 0xcb, 0xc8,
	0x01, 0x00, 0x65, 0xaf, 0xbc, 0x8e, 0xb8, 0xee, 0x00, 0x0d, 0x44, 0xde, 0x5d, 0x47, 0x1c, 0x0b,
	0x45, 0x38, 0x16, 0x6e, 0x98, 0x4e, 0x3d, 0x1e, 0xeb, 0x16, 0x00, 0x0a, 0x7a, 0x83, 0x48, 0xae,
	0x41, 0x58, 0xb9, 0x06, 0xd1, 0x1f, 0x98, 0x89, 0xf8, 0xbd, 0xe3, 0x2c, 0x9c, 0x64, 0x4a, 0x00,
	0xf3, 0x24, 0xf7, 0x9f, 0x9b, 0x9e, 0x17, 0x8e, 0xa3, 0x7a, 0xc4, 0x94, 0x85, 0x29, 0x0b, 0x5c,
	0x5f, 0x84, 0x32, 0x16, 0x81, 0x76, 0xb5, 0x09, 0x3d, 0x23, 0xb0, 0x3f, 0x33, 0x53, 0x8c, 0x2d,
	0x9b, 0x62, 0xe6, 0x4f, 0xac, 0x7d, 0xaa, 0xcb, 0xad, 0x17, 0xf6, 0xa0, 0xff, 0x57, 0xcd, 0x9c,
	0x98, 0xff, 0x57, 0x77, 0xf6, 0x07, 0xd0, 0x96, 0x31, 0x0b, 0x93, 0xb1, 0x88, 0xa7, 0x3c, 0x76,
	0x99, 0x5e, 0x48, 0xcb, 0x00, 0x5f, 0x16, 0x45, 0x9e, 0xbe, 0xa7, 0x9b, 0xa2, 0xd3, 0xa2, 0xc8,
	0xd7, 0x37, 0x74, 0x53, 0x74, 0xa6, 0x82, 0xa5, 0x56, 0x41, 0x3d, 0x8d, 0x2e, 0xe4, 0x75, 0x05,
	0x60, 0x4b, 0xd3, 0xc1, 0x42, 0xae, 0x7e, 0x13, 0x2c, 0xa4, 0x6e, 0x7d, 0x5a, 0x34, 0x6e, 0x7f,
	0x5a, 0x38, 0xb0, 0x43, 0x1e, 0x11, 0xe5, 0x2c, 0x74, 0x11, 0xb7, 0xd0, 0x22, 0x22, 0xd3, 0xf1,
	0x14, 0xf6, 0xb2, 0x73, 0x5f, 0xf0, 0x34, 0xd1, 0xb3, 0xa3, 0x33, 0x20, 0xef, 0xfa, 0x01, 0xf6,
	0xc9, 0x15, 0x73, 0x5f, 0xe0, 0x86, 0x1a, 0xc6, 0x16, 0x1a, 0xef, 0xa0, 0x60, 0x48, 0xbc, 0xe9,
	0xbd, 0xfd, 0x7d, 0xd3, 0x5e, 0xfa, 0x7d, 0xd3, 0x59, 0xea, 0x7d, 0xd3, 0x5d, 0xe2, 0x7d, 0xd3,
	0x2b, 0x7d, 0xdf, 0x3c, 0x81, 0x6d, 0x2d, 0xcc, 0x0d, 0x4c, 0x99, 0x6c, 0x11, 0x95, 0x1b, 0x79,
	0x9e, 0xa5, 0x49, 0xc4, 0xf9, 0x48, 0x67, 0xb5, 0xce, 0xd2, 0x0b, 0x05, 0x15, 0xdf, 0x4c, 0xdb,
	0xc5, 0x37, 0x93, 0xba, 0x3e, 0xf8, 0x62, 0x3a, 0x4d, 0xc3, 0x89, 0xaf, 0x92, 0x0e, 0xcf, 0x0a,
	0xdd, 0xed, 0xba, 0x06, 0x8e, 0x67, 0xe6, 0x2e, 0x34, 0xae, 0x44, 0xfc, 0x3b, 0x69, 0xe8, 0x72,
	0x57, 0x57, 0x40, 0x76, 0xd6, 0x58, 0xc0, 0xe2, 0xa9, 0x2b, 0x42, 0x7d, 0xb3, 0xab, 0xe1, 0xf7,
	0x79, 0x88, 0x97, 0x26, 0xa4, 0x46, 0x3c, 0x60, 0xd7, 0xfa, 0x62, 0x07, 0x08, 0xbd, 0x52, 0x48,
	0xe1, 0x66, 0x66, 0x17, 0x6e, 0x66, 0xa7, 0xd5, 0x9f, 0x2a, 0xde, 0x26, 0x3e, 0xea, 0x4f, 0xfe,
	0x09, 0x00, 0x00, 0xff, 0xff, 0x78, 0xf0, 0x3f, 0xd2, 0xea, 0x0f, 0x00, 0x00,
}
