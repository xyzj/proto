// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: msg_with_ctrl.proto

package wlst_pb2

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"

	proto "github.com/gogo/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//数据服务和通讯服务传输格式
type MsgWithCtrl struct {
	//协议头信息
	Head *Head `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	//协议参数
	Args *Args `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	//系统级别协议集
	Syscmds *SysCommands `protobuf:"bytes,3,opt,name=syscmds,proto3" json:"syscmds,omitempty"`
	// 设备升级公共协议
	Passthrough *Passthrough `protobuf:"bytes,99,opt,name=Passthrough,proto3" json:"Passthrough,omitempty"`
	//终端协议集
	WlstTml *WlstTerminal `protobuf:"bytes,100,opt,name=wlst_tml,json=wlstTml,proto3" json:"wlst_tml,omitempty"`
	//模块协议集
	WlstCom_0000 *WlstCom_0000 `protobuf:"bytes,1000,opt,name=wlst_com_0000,json=wlstCom0000,proto3" json:"wlst_com_0000,omitempty"`
	WlstCom_3E01 *WlstCom_3E01 `protobuf:"bytes,1001,opt,name=wlst_com_3e01,json=wlstCom3e01,proto3" json:"wlst_com_3e01,omitempty"`
	WlstCom_3E02 *WlstCom_3E02 `protobuf:"bytes,1002,opt,name=wlst_com_3e02,json=wlstCom3e02,proto3" json:"wlst_com_3e02,omitempty"`
	WlstCom_3E82 *WlstCom_3E82 `protobuf:"bytes,1003,opt,name=wlst_com_3e82,json=wlstCom3e82,proto3" json:"wlst_com_3e82,omitempty"`
	WlstCom_3E81 *WlstCom_3E02 `protobuf:"bytes,1004,opt,name=wlst_com_3e81,json=wlstCom3e81,proto3" json:"wlst_com_3e81,omitempty"`
	WlstCom_3E84 *WlstCom_3E84 `protobuf:"bytes,1005,opt,name=wlst_com_3e84,json=wlstCom3e84,proto3" json:"wlst_com_3e84,omitempty"`
	//第三方设备
	//江阴节能
	WxjyEsu_5500 *WxjyEsu_5500 `protobuf:"bytes,2000,opt,name=wxjy_esu_5500,json=wxjyEsu5500,proto3" json:"wxjy_esu_5500,omitempty"`
	WxjyEsuD500  *WxjyEsu_5500 `protobuf:"bytes,2001,opt,name=wxjy_esu_d500,json=wxjyEsuD500,proto3" json:"wxjy_esu_d500,omitempty"`
	WxjyEsuD700  *WxjyEsuD700  `protobuf:"bytes,2002,opt,name=wxjy_esu_d700,json=wxjyEsuD700,proto3" json:"wxjy_esu_d700,omitempty"`
	WxjyEsuD800  *WxjyEsuD800  `protobuf:"bytes,2003,opt,name=wxjy_esu_d800,json=wxjyEsuD800,proto3" json:"wxjy_esu_d800,omitempty"`
	// 安徽合肥,head.tver=2，若无特殊说明，cmd和公司终端相同，公司标示改为ahhf
	// 对时，采用终端Wlst_rtu_9300结构下发，应答采用Wlst_rtu_9200
	// 下发年时间，采用终端wlst_rtu_7060, 应答采用wlst_rtu_70e0
	// 开关量输出/输入/上下限设置/应答采用下面结构，cmd=ahhf.rtu.6804
	AhhfRtu_6804 *AhhfRtu_6804 `protobuf:"bytes,2101,opt,name=ahhf_rtu_6804,json=ahhfRtu6804,proto3" json:"ahhf_rtu_6804,omitempty"`
	// 开关灯，采用终端的wlst_rtu_4b00结构下发，应答采用wlst_rtu_cb00
	// 读取版本，采用ahhf.rtu.5c00命令，应答采用wlst_rtu_dc00
	// 读取开关量输出/输入/上下限参数,应答使用以下结构,cmd=ahhf.rtu.680a
	AhhfRtu_680A *AhhfRtu_6804 `protobuf:"bytes,2102,opt,name=ahhf_rtu_680a,json=ahhfRtu680a,proto3" json:"ahhf_rtu_680a,omitempty"`
	// 勃洛克单灯
	// 选测控制器数据
	BlkSlu_6891 *BlkSlu_6891 `protobuf:"bytes,2201,opt,name=blk_slu_6891,json=blkSlu6891,proto3" json:"blk_slu_6891,omitempty"`
	// 选测控制器数据应答
	BlkSlu_6892 *BlkSlu_6892 `protobuf:"bytes,2202,opt,name=blk_slu_6892,json=blkSlu6892,proto3" json:"blk_slu_6892,omitempty"`
	// 对时
	BlkSlu_6887 *BlkSlu_6891 `protobuf:"bytes,2203,opt,name=blk_slu_6887,json=blkSlu6887,proto3" json:"blk_slu_6887,omitempty"`
	// 对时应答
	BlkSlu_6888 *BlkSlu_6891 `protobuf:"bytes,2204,opt,name=blk_slu_6888,json=blkSlu6888,proto3" json:"blk_slu_6888,omitempty"`
	// 即时控制
	BlkSlu_6895 *BlkSlu_6895 `protobuf:"bytes,2205,opt,name=blk_slu_6895,json=blkSlu6895,proto3" json:"blk_slu_6895,omitempty"`
	// 即时控制应答
	BlkSlu_6896 *BlkSlu_6895 `protobuf:"bytes,2206,opt,name=blk_slu_6896,json=blkSlu6896,proto3" json:"blk_slu_6896,omitempty"`
	// 集中器定时设置
	BlkSlu_6889 *BlkSlu_6895 `protobuf:"bytes,2207,opt,name=blk_slu_6889,json=blkSlu6889,proto3" json:"blk_slu_6889,omitempty"`
	// 集中器定时设置应答
	BlkSlu_6890 *BlkSlu_6895 `protobuf:"bytes,2208,opt,name=blk_slu_6890,json=blkSlu6890,proto3" json:"blk_slu_6890,omitempty"`
	// 控制器回路数设置
	BlkSlu_6893 *BlkSlu_6891 `protobuf:"bytes,2209,opt,name=blk_slu_6893,json=blkSlu6893,proto3" json:"blk_slu_6893,omitempty"`
	// 控制器回路数设置应答
	BlkSlu_6894 *BlkSlu_6891 `protobuf:"bytes,2210,opt,name=blk_slu_6894,json=blkSlu6894,proto3" json:"blk_slu_6894,omitempty"`
	// 云帆除湿
	YfDry_0300 *YfDry_0300 `protobuf:"bytes,2300,opt,name=yf_dry_0300,json=yfDry0300,proto3" json:"yf_dry_0300,omitempty"`
	YfDry_1005 *YfDry_1005 `protobuf:"bytes,2301,opt,name=yf_dry_1005,json=yfDry1005,proto3" json:"yf_dry_1005,omitempty"`
	YfDry_1001 *YfDry_1001 `protobuf:"bytes,2302,opt,name=yf_dry_1001,json=yfDry1001,proto3" json:"yf_dry_1001,omitempty"`
}

func (m *MsgWithCtrl) Reset()         { *m = MsgWithCtrl{} }
func (m *MsgWithCtrl) String() string { return proto.CompactTextString(m) }
func (*MsgWithCtrl) ProtoMessage()    {}
func (*MsgWithCtrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_17a284b5b5297b67, []int{0}
}
func (m *MsgWithCtrl) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithCtrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithCtrl.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithCtrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithCtrl.Merge(m, src)
}
func (m *MsgWithCtrl) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithCtrl) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithCtrl.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithCtrl proto.InternalMessageInfo

func (m *MsgWithCtrl) GetHead() *Head {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *MsgWithCtrl) GetArgs() *Args {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *MsgWithCtrl) GetSyscmds() *SysCommands {
	if m != nil {
		return m.Syscmds
	}
	return nil
}

func (m *MsgWithCtrl) GetPassthrough() *Passthrough {
	if m != nil {
		return m.Passthrough
	}
	return nil
}

func (m *MsgWithCtrl) GetWlstTml() *WlstTerminal {
	if m != nil {
		return m.WlstTml
	}
	return nil
}

func (m *MsgWithCtrl) GetWlstCom_0000() *WlstCom_0000 {
	if m != nil {
		return m.WlstCom_0000
	}
	return nil
}

func (m *MsgWithCtrl) GetWlstCom_3E01() *WlstCom_3E01 {
	if m != nil {
		return m.WlstCom_3E01
	}
	return nil
}

func (m *MsgWithCtrl) GetWlstCom_3E02() *WlstCom_3E02 {
	if m != nil {
		return m.WlstCom_3E02
	}
	return nil
}

func (m *MsgWithCtrl) GetWlstCom_3E82() *WlstCom_3E82 {
	if m != nil {
		return m.WlstCom_3E82
	}
	return nil
}

func (m *MsgWithCtrl) GetWlstCom_3E81() *WlstCom_3E02 {
	if m != nil {
		return m.WlstCom_3E81
	}
	return nil
}

func (m *MsgWithCtrl) GetWlstCom_3E84() *WlstCom_3E84 {
	if m != nil {
		return m.WlstCom_3E84
	}
	return nil
}

func (m *MsgWithCtrl) GetWxjyEsu_5500() *WxjyEsu_5500 {
	if m != nil {
		return m.WxjyEsu_5500
	}
	return nil
}

func (m *MsgWithCtrl) GetWxjyEsuD500() *WxjyEsu_5500 {
	if m != nil {
		return m.WxjyEsuD500
	}
	return nil
}

func (m *MsgWithCtrl) GetWxjyEsuD700() *WxjyEsuD700 {
	if m != nil {
		return m.WxjyEsuD700
	}
	return nil
}

func (m *MsgWithCtrl) GetWxjyEsuD800() *WxjyEsuD800 {
	if m != nil {
		return m.WxjyEsuD800
	}
	return nil
}

func (m *MsgWithCtrl) GetAhhfRtu_6804() *AhhfRtu_6804 {
	if m != nil {
		return m.AhhfRtu_6804
	}
	return nil
}

func (m *MsgWithCtrl) GetAhhfRtu_680A() *AhhfRtu_6804 {
	if m != nil {
		return m.AhhfRtu_680A
	}
	return nil
}

func (m *MsgWithCtrl) GetBlkSlu_6891() *BlkSlu_6891 {
	if m != nil {
		return m.BlkSlu_6891
	}
	return nil
}

func (m *MsgWithCtrl) GetBlkSlu_6892() *BlkSlu_6892 {
	if m != nil {
		return m.BlkSlu_6892
	}
	return nil
}

func (m *MsgWithCtrl) GetBlkSlu_6887() *BlkSlu_6891 {
	if m != nil {
		return m.BlkSlu_6887
	}
	return nil
}

func (m *MsgWithCtrl) GetBlkSlu_6888() *BlkSlu_6891 {
	if m != nil {
		return m.BlkSlu_6888
	}
	return nil
}

func (m *MsgWithCtrl) GetBlkSlu_6895() *BlkSlu_6895 {
	if m != nil {
		return m.BlkSlu_6895
	}
	return nil
}

func (m *MsgWithCtrl) GetBlkSlu_6896() *BlkSlu_6895 {
	if m != nil {
		return m.BlkSlu_6896
	}
	return nil
}

func (m *MsgWithCtrl) GetBlkSlu_6889() *BlkSlu_6895 {
	if m != nil {
		return m.BlkSlu_6889
	}
	return nil
}

func (m *MsgWithCtrl) GetBlkSlu_6890() *BlkSlu_6895 {
	if m != nil {
		return m.BlkSlu_6890
	}
	return nil
}

func (m *MsgWithCtrl) GetBlkSlu_6893() *BlkSlu_6891 {
	if m != nil {
		return m.BlkSlu_6893
	}
	return nil
}

func (m *MsgWithCtrl) GetBlkSlu_6894() *BlkSlu_6891 {
	if m != nil {
		return m.BlkSlu_6894
	}
	return nil
}

func (m *MsgWithCtrl) GetYfDry_0300() *YfDry_0300 {
	if m != nil {
		return m.YfDry_0300
	}
	return nil
}

func (m *MsgWithCtrl) GetYfDry_1005() *YfDry_1005 {
	if m != nil {
		return m.YfDry_1005
	}
	return nil
}

func (m *MsgWithCtrl) GetYfDry_1001() *YfDry_1001 {
	if m != nil {
		return m.YfDry_1001
	}
	return nil
}

// 中间层报警信息提交
type SubmitAlarm struct {
	// Head head = 1;
	AlarmView []*SubmitAlarm_AlarmView `protobuf:"bytes,2,rep,name=alarm_view,json=alarmView,proto3" json:"alarm_view,omitempty"`
}

func (m *SubmitAlarm) Reset()         { *m = SubmitAlarm{} }
func (m *SubmitAlarm) String() string { return proto.CompactTextString(m) }
func (*SubmitAlarm) ProtoMessage()    {}
func (*SubmitAlarm) Descriptor() ([]byte, []int) {
	return fileDescriptor_17a284b5b5297b67, []int{1}
}
func (m *SubmitAlarm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SubmitAlarm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SubmitAlarm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SubmitAlarm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitAlarm.Merge(m, src)
}
func (m *SubmitAlarm) XXX_Size() int {
	return m.Size()
}
func (m *SubmitAlarm) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitAlarm.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitAlarm proto.InternalMessageInfo

func (m *SubmitAlarm) GetAlarmView() []*SubmitAlarm_AlarmView {
	if m != nil {
		return m.AlarmView
	}
	return nil
}

type SubmitAlarm_AlarmView struct {
	DtCreate  int64  `protobuf:"varint,1,opt,name=dt_create,json=dtCreate,proto3" json:"dt_create,omitempty"`
	ErrId     int32  `protobuf:"varint,2,opt,name=err_id,json=errId,proto3" json:"err_id,omitempty"`
	TmlId     int32  `protobuf:"varint,3,opt,name=tml_id,json=tmlId,proto3" json:"tml_id,omitempty"`
	LoopId    int32  `protobuf:"varint,4,opt,name=loop_id,json=loopId,proto3" json:"loop_id,omitempty"`
	LampId    int32  `protobuf:"varint,5,opt,name=lamp_id,json=lampId,proto3" json:"lamp_id,omitempty"`
	ErrCount  int32  `protobuf:"varint,6,opt,name=err_count,json=errCount,proto3" json:"err_count,omitempty"`
	DtRemove  int64  `protobuf:"varint,8,opt,name=dt_remove,json=dtRemove,proto3" json:"dt_remove,omitempty"`
	IsAlarm   int32  `protobuf:"varint,9,opt,name=is_alarm,json=isAlarm,proto3" json:"is_alarm,omitempty"`
	AlarmSrc  int32  `protobuf:"varint,10,opt,name=alarm_src,json=alarmSrc,proto3" json:"alarm_src,omitempty"`
	AlarmName string `protobuf:"bytes,11,opt,name=alarm_name,json=alarmName,proto3" json:"alarm_name,omitempty"`
	TmlName   string `protobuf:"bytes,12,opt,name=tml_name,json=tmlName,proto3" json:"tml_name,omitempty"`
	LoopName  string `protobuf:"bytes,13,opt,name=loop_name,json=loopName,proto3" json:"loop_name,omitempty"`
}

func (m *SubmitAlarm_AlarmView) Reset()         { *m = SubmitAlarm_AlarmView{} }
func (m *SubmitAlarm_AlarmView) String() string { return proto.CompactTextString(m) }
func (*SubmitAlarm_AlarmView) ProtoMessage()    {}
func (*SubmitAlarm_AlarmView) Descriptor() ([]byte, []int) {
	return fileDescriptor_17a284b5b5297b67, []int{1, 0}
}
func (m *SubmitAlarm_AlarmView) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SubmitAlarm_AlarmView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SubmitAlarm_AlarmView.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SubmitAlarm_AlarmView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitAlarm_AlarmView.Merge(m, src)
}
func (m *SubmitAlarm_AlarmView) XXX_Size() int {
	return m.Size()
}
func (m *SubmitAlarm_AlarmView) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitAlarm_AlarmView.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitAlarm_AlarmView proto.InternalMessageInfo

func (m *SubmitAlarm_AlarmView) GetDtCreate() int64 {
	if m != nil {
		return m.DtCreate
	}
	return 0
}

func (m *SubmitAlarm_AlarmView) GetErrId() int32 {
	if m != nil {
		return m.ErrId
	}
	return 0
}

func (m *SubmitAlarm_AlarmView) GetTmlId() int32 {
	if m != nil {
		return m.TmlId
	}
	return 0
}

func (m *SubmitAlarm_AlarmView) GetLoopId() int32 {
	if m != nil {
		return m.LoopId
	}
	return 0
}

func (m *SubmitAlarm_AlarmView) GetLampId() int32 {
	if m != nil {
		return m.LampId
	}
	return 0
}

func (m *SubmitAlarm_AlarmView) GetErrCount() int32 {
	if m != nil {
		return m.ErrCount
	}
	return 0
}

func (m *SubmitAlarm_AlarmView) GetDtRemove() int64 {
	if m != nil {
		return m.DtRemove
	}
	return 0
}

func (m *SubmitAlarm_AlarmView) GetIsAlarm() int32 {
	if m != nil {
		return m.IsAlarm
	}
	return 0
}

func (m *SubmitAlarm_AlarmView) GetAlarmSrc() int32 {
	if m != nil {
		return m.AlarmSrc
	}
	return 0
}

func (m *SubmitAlarm_AlarmView) GetAlarmName() string {
	if m != nil {
		return m.AlarmName
	}
	return ""
}

func (m *SubmitAlarm_AlarmView) GetTmlName() string {
	if m != nil {
		return m.TmlName
	}
	return ""
}

func (m *SubmitAlarm_AlarmView) GetLoopName() string {
	if m != nil {
		return m.LoopName
	}
	return ""
}

// 中间层参数修改提交
type SubmitSettingChange struct {
	// 参数类型，1-参数变化（含增删改），2-时间表变化（含单灯，终端，增删改），3-定时任务变化（增删改）
	SettingType int32 `protobuf:"varint,1,opt,name=setting_type,json=settingType,proto3" json:"setting_type,omitempty"`
	// 设备逻辑地址，setting_type==3时可不填充
	TmlId []int64 `protobuf:"varint,2,rep,packed,name=tml_id,json=tmlId,proto3" json:"tml_id,omitempty"`
}

func (m *SubmitSettingChange) Reset()         { *m = SubmitSettingChange{} }
func (m *SubmitSettingChange) String() string { return proto.CompactTextString(m) }
func (*SubmitSettingChange) ProtoMessage()    {}
func (*SubmitSettingChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_17a284b5b5297b67, []int{2}
}
func (m *SubmitSettingChange) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SubmitSettingChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SubmitSettingChange.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SubmitSettingChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitSettingChange.Merge(m, src)
}
func (m *SubmitSettingChange) XXX_Size() int {
	return m.Size()
}
func (m *SubmitSettingChange) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitSettingChange.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitSettingChange proto.InternalMessageInfo

func (m *SubmitSettingChange) GetSettingType() int32 {
	if m != nil {
		return m.SettingType
	}
	return 0
}

func (m *SubmitSettingChange) GetTmlId() []int64 {
	if m != nil {
		return m.TmlId
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgWithCtrl)(nil), "wlst.pb2.MsgWithCtrl")
	proto.RegisterType((*SubmitAlarm)(nil), "wlst.pb2.SubmitAlarm")
	proto.RegisterType((*SubmitAlarm_AlarmView)(nil), "wlst.pb2.SubmitAlarm.AlarmView")
	proto.RegisterType((*SubmitSettingChange)(nil), "wlst.pb2.SubmitSettingChange")
}

func init() { proto.RegisterFile("msg_with_ctrl.proto", fileDescriptor_17a284b5b5297b67) }

var fileDescriptor_17a284b5b5297b67 = []byte{
	// 916 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x96, 0x4d, 0x6f, 0xe3, 0x44,
	0x18, 0xc7, 0x9b, 0x66, 0xdb, 0x24, 0xe3, 0x16, 0xb6, 0xae, 0x96, 0x1d, 0x52, 0x11, 0x4a, 0x4e,
	0x3d, 0x85, 0x89, 0x93, 0x34, 0xae, 0xb4, 0x42, 0x6a, 0xd3, 0x95, 0x76, 0x91, 0x40, 0xc8, 0xa9,
	0x58, 0x71, 0xb2, 0x26, 0xf6, 0x34, 0x36, 0xeb, 0x89, 0xa3, 0x99, 0x49, 0x8b, 0xbf, 0x05, 0x57,
	0xde, 0x59, 0xbe, 0x03, 0x7c, 0x06, 0x8e, 0x2d, 0x5c, 0x38, 0xa2, 0xf6, 0xc2, 0xeb, 0x37, 0x00,
	0x84, 0x66, 0x9c, 0x34, 0xce, 0x74, 0x1b, 0xf9, 0x12, 0xcd, 0xf3, 0xff, 0x3f, 0xbf, 0x79, 0x9e,
	0x79, 0x9c, 0xc4, 0x03, 0xb6, 0x29, 0x1f, 0xba, 0xe7, 0xa1, 0x08, 0x5c, 0x4f, 0xb0, 0xa8, 0x31,
	0x66, 0xb1, 0x88, 0xcd, 0xf2, 0x79, 0xc4, 0x45, 0x63, 0x3c, 0xb0, 0xaa, 0xdb, 0x4a, 0xf0, 0xe2,
	0xc8, 0x0d, 0x08, 0xf6, 0x53, 0xbb, 0x6a, 0xde, 0x88, 0x82, 0x4e, 0x91, 0xea, 0xd6, 0x5c, 0x1b,
	0xdf, 0x92, 0x5a, 0x5e, 0x2a, 0xd5, 0x2f, 0x36, 0x81, 0xf1, 0x1e, 0x1f, 0x3e, 0x0b, 0x45, 0xd0,
	0x13, 0x2c, 0x32, 0xeb, 0xe0, 0x9e, 0xdc, 0x17, 0x16, 0x76, 0x0b, 0x7b, 0x86, 0xf5, 0x4a, 0x63,
	0x56, 0xb7, 0xf1, 0x84, 0x60, 0xdf, 0x51, 0x9e, 0xcc, 0xc1, 0x6c, 0xc8, 0xe1, 0xaa, 0x9e, 0x73,
	0xc8, 0x86, 0xdc, 0x51, 0x9e, 0xf9, 0x36, 0x28, 0xf1, 0x84, 0x7b, 0xd4, 0xe7, 0xb0, 0xa8, 0xd2,
	0x1e, 0xcc, 0xd3, 0xfa, 0x09, 0xef, 0xc5, 0x94, 0xe2, 0x91, 0xcf, 0x9d, 0x59, 0x96, 0xd9, 0x05,
	0xc6, 0x07, 0x98, 0x73, 0x11, 0xb0, 0x78, 0x32, 0x0c, 0xa0, 0xa7, 0x43, 0x19, 0xd3, 0xc9, 0x66,
	0x9a, 0x4d, 0xa0, 0x86, 0x23, 0x4f, 0x0e, 0x7d, 0x45, 0xbd, 0x36, 0xa7, 0x9e, 0x45, 0x5c, 0x9c,
	0x10, 0x46, 0xc3, 0x11, 0x8e, 0x9c, 0x92, 0x94, 0x4f, 0x68, 0x64, 0x3e, 0x02, 0x9b, 0x0a, 0xf1,
	0x62, 0xea, 0x22, 0x84, 0x10, 0xfc, 0xad, 0xa4, 0xc0, 0x87, 0x8b, 0xe0, 0x8d, 0xef, 0x18, 0x52,
	0xef, 0xc5, 0x54, 0x06, 0x0b, 0x74, 0x8b, 0xa0, 0x26, 0xfc, 0xfd, 0x6e, 0x5a, 0xfa, 0x37, 0xb4,
	0x0c, 0x74, 0xda, 0x82, 0x7f, 0x2c, 0xa5, 0xad, 0x2c, 0x6d, 0x69, 0xb4, 0x6d, 0xc1, 0x3f, 0x97,
	0xd1, 0x76, 0x96, 0xb6, 0x6f, 0xd1, 0x4d, 0xf8, 0x57, 0xee, 0xda, 0xb6, 0xde, 0xb9, 0xdd, 0x86,
	0x7f, 0x2f, 0xad, 0xdd, 0xce, 0xd2, 0x6d, 0x45, 0x7f, 0xf2, 0x71, 0xe2, 0x12, 0x3e, 0x71, 0x3b,
	0x1d, 0x84, 0xe0, 0xc5, 0xab, 0xb7, 0xe8, 0xac, 0xef, 0x18, 0x32, 0xfd, 0x31, 0x9f, 0xc8, 0x60,
	0x81, 0xf6, 0x25, 0x7d, 0x99, 0x93, 0x3e, 0xbe, 0x45, 0x77, 0x11, 0x82, 0x3f, 0xdd, 0x4d, 0x4b,
	0x7f, 0x4e, 0x77, 0x75, 0xda, 0x46, 0x08, 0xfe, 0xbc, 0x84, 0xb6, 0xb3, 0xb4, 0x9d, 0xd2, 0x38,
	0x08, 0x4e, 0x5d, 0x26, 0x26, 0xee, 0xbe, 0x8d, 0xda, 0xf0, 0xfb, 0xfb, 0x3a, 0x7d, 0x98, 0xf5,
	0x1d, 0x43, 0xa6, 0x3b, 0x62, 0x22, 0x03, 0x9d, 0xc6, 0xf0, 0x87, 0xfc, 0x34, 0x36, 0x0f, 0xc0,
	0xc6, 0x20, 0x7a, 0xee, 0xf2, 0x48, 0x9a, 0x07, 0x4d, 0xf8, 0xd9, 0x96, 0xfe, 0xfb, 0x38, 0xca,
	0xd8, 0x0e, 0x18, 0x44, 0xcf, 0xfb, 0xd1, 0x44, 0xae, 0x35, 0xd4, 0x82, 0x9f, 0x2f, 0x43, 0xad,
	0x0c, 0x6a, 0x2d, 0xa2, 0x76, 0x17, 0x7e, 0x91, 0xb3, 0xaa, 0xdd, 0xd5, 0x50, 0x1b, 0x7e, 0x99,
	0x17, 0xb5, 0xb5, 0x86, 0x3b, 0xf0, 0xab, 0x65, 0x68, 0x27, 0xd3, 0x70, 0x47, 0x43, 0xf7, 0xe1,
	0xd7, 0x79, 0xd1, 0x7d, 0xad, 0xe1, 0x03, 0xf8, 0x4d, 0x4e, 0xd4, 0x3e, 0xd0, 0xaa, 0x22, 0xf8,
	0x6d, 0xde, 0xaa, 0x48, 0x43, 0x5b, 0xf0, 0x45, 0xde, 0xe7, 0xda, 0xd2, 0xd0, 0x36, 0xfc, 0x2e,
	0x2f, 0xda, 0x36, 0xf7, 0x81, 0x91, 0x9c, 0xba, 0x3e, 0x4b, 0x5c, 0xd4, 0x42, 0x08, 0xfe, 0xb3,
	0xa5, 0xff, 0x45, 0x7f, 0x34, 0x77, 0x9d, 0x4a, 0x72, 0x7a, 0xcc, 0x12, 0xb9, 0xcc, 0x70, 0x4d,
	0x84, 0x3a, 0xf0, 0xdf, 0xbb, 0x38, 0xe9, 0x4e, 0x39, 0xb9, 0x5c, 0xe4, 0x9a, 0xf0, 0xbf, 0x25,
	0x5c, 0x73, 0xce, 0x35, 0xeb, 0x2f, 0x8a, 0xc0, 0xe8, 0x4f, 0x06, 0x34, 0x14, 0x87, 0x11, 0x66,
	0xd4, 0x7c, 0x07, 0x00, 0x2c, 0x17, 0xee, 0x59, 0x48, 0xce, 0xe1, 0xea, 0x6e, 0x71, 0xcf, 0xb0,
	0xde, 0xcc, 0xbc, 0x8d, 0xe6, 0xa9, 0x0d, 0xf5, 0xf9, 0x61, 0x48, 0xce, 0x9d, 0x0a, 0x9e, 0x2d,
	0xab, 0x97, 0xab, 0xa0, 0x72, 0x63, 0x98, 0x3b, 0xa0, 0xe2, 0x0b, 0xd7, 0x63, 0x04, 0x0b, 0xa2,
	0xde, 0x92, 0x45, 0xa7, 0xec, 0x8b, 0x9e, 0x8a, 0xcd, 0x07, 0x60, 0x9d, 0x30, 0xe6, 0x86, 0xbe,
	0x7a, 0x37, 0xae, 0x39, 0x6b, 0x84, 0xb1, 0xa7, 0xbe, 0x94, 0x05, 0x8d, 0xa4, 0x5c, 0x4c, 0x65,
	0x41, 0xa3, 0xa7, 0xbe, 0xf9, 0x10, 0x94, 0xa2, 0x38, 0x1e, 0x4b, 0xfd, 0x9e, 0xd2, 0xd7, 0x65,
	0x38, 0x35, 0x30, 0x55, 0xc6, 0xda, 0xd4, 0xc0, 0x54, 0x1a, 0x3b, 0xa0, 0x22, 0xf7, 0xf7, 0xe2,
	0xc9, 0x48, 0xc0, 0x75, 0x65, 0x95, 0x09, 0x63, 0x3d, 0x19, 0x4f, 0x3b, 0x63, 0x84, 0xc6, 0x67,
	0x04, 0x96, 0x67, 0x9d, 0x39, 0x2a, 0x36, 0x5f, 0x07, 0xe5, 0x90, 0xbb, 0xea, 0x50, 0xb0, 0xa2,
	0xc0, 0x52, 0xc8, 0xd3, 0xf9, 0xec, 0x80, 0xf4, 0xb0, 0x2e, 0x67, 0x1e, 0x04, 0xe9, 0xa6, 0x4a,
	0xe8, 0x33, 0xcf, 0x7c, 0x63, 0x36, 0xbc, 0x11, 0xa6, 0x04, 0x1a, 0xbb, 0x85, 0xbd, 0xca, 0x74,
	0x36, 0xef, 0x63, 0xaa, 0xb6, 0x95, 0x27, 0x53, 0xe6, 0x86, 0x32, 0x4b, 0x82, 0x46, 0xca, 0xda,
	0x01, 0x15, 0x75, 0x3a, 0xe5, 0x6d, 0x2a, 0xaf, 0x2c, 0x05, 0x69, 0xd6, 0xfb, 0x60, 0x3b, 0x9d,
	0x7b, 0x9f, 0x08, 0x11, 0x8e, 0x86, 0xbd, 0x00, 0x8f, 0x86, 0xc4, 0x7c, 0x0b, 0x6c, 0xf0, 0x54,
	0x70, 0x45, 0x32, 0x4e, 0xe7, 0xbb, 0xe6, 0x18, 0x53, 0xed, 0x24, 0x19, 0xcb, 0x8a, 0xb3, 0x59,
	0xca, 0x27, 0x59, 0x3c, 0x5a, 0xbd, 0x5f, 0x98, 0xce, 0xd3, 0x7a, 0x17, 0x80, 0x63, 0x72, 0x16,
	0x7a, 0x44, 0xdd, 0x64, 0x1e, 0xcd, 0xa2, 0xc7, 0x5e, 0x10, 0x9b, 0x99, 0xaf, 0x4d, 0xe6, 0xba,
	0x53, 0x7d, 0xb9, 0x5c, 0x5f, 0x39, 0xaa, 0xfe, 0x78, 0x55, 0x2b, 0x5c, 0x5c, 0xd5, 0x0a, 0xbf,
	0x5e, 0xd5, 0x0a, 0x9f, 0x5e, 0xd7, 0x56, 0x2e, 0xae, 0x6b, 0x2b, 0xbf, 0x5c, 0xd7, 0x56, 0x9e,
	0x14, 0x06, 0xeb, 0xea, 0xea, 0xd4, 0xfa, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x09, 0x3f, 0xac, 0x19,
	0xaa, 0x09, 0x00, 0x00,
}

func (m *MsgWithCtrl) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithCtrl) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithCtrl) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.YfDry_1001 != nil {
		{
			size, err := m.YfDry_1001.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8f
		i--
		dAtA[i] = 0xf2
	}
	if m.YfDry_1005 != nil {
		{
			size, err := m.YfDry_1005.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8f
		i--
		dAtA[i] = 0xea
	}
	if m.YfDry_0300 != nil {
		{
			size, err := m.YfDry_0300.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8f
		i--
		dAtA[i] = 0xe2
	}
	if m.BlkSlu_6894 != nil {
		{
			size, err := m.BlkSlu_6894.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
		i--
		dAtA[i] = 0x92
	}
	if m.BlkSlu_6893 != nil {
		{
			size, err := m.BlkSlu_6893.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
		i--
		dAtA[i] = 0x8a
	}
	if m.BlkSlu_6890 != nil {
		{
			size, err := m.BlkSlu_6890.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
		i--
		dAtA[i] = 0x82
	}
	if m.BlkSlu_6889 != nil {
		{
			size, err := m.BlkSlu_6889.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x89
		i--
		dAtA[i] = 0xfa
	}
	if m.BlkSlu_6896 != nil {
		{
			size, err := m.BlkSlu_6896.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x89
		i--
		dAtA[i] = 0xf2
	}
	if m.BlkSlu_6895 != nil {
		{
			size, err := m.BlkSlu_6895.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x89
		i--
		dAtA[i] = 0xea
	}
	if m.BlkSlu_6888 != nil {
		{
			size, err := m.BlkSlu_6888.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x89
		i--
		dAtA[i] = 0xe2
	}
	if m.BlkSlu_6887 != nil {
		{
			size, err := m.BlkSlu_6887.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x89
		i--
		dAtA[i] = 0xda
	}
	if m.BlkSlu_6892 != nil {
		{
			size, err := m.BlkSlu_6892.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x89
		i--
		dAtA[i] = 0xd2
	}
	if m.BlkSlu_6891 != nil {
		{
			size, err := m.BlkSlu_6891.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x89
		i--
		dAtA[i] = 0xca
	}
	if m.AhhfRtu_680A != nil {
		{
			size, err := m.AhhfRtu_680A.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x83
		i--
		dAtA[i] = 0xb2
	}
	if m.AhhfRtu_6804 != nil {
		{
			size, err := m.AhhfRtu_6804.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x83
		i--
		dAtA[i] = 0xaa
	}
	if m.WxjyEsuD800 != nil {
		{
			size, err := m.WxjyEsuD800.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7d
		i--
		dAtA[i] = 0x9a
	}
	if m.WxjyEsuD700 != nil {
		{
			size, err := m.WxjyEsuD700.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7d
		i--
		dAtA[i] = 0x92
	}
	if m.WxjyEsuD500 != nil {
		{
			size, err := m.WxjyEsuD500.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7d
		i--
		dAtA[i] = 0x8a
	}
	if m.WxjyEsu_5500 != nil {
		{
			size, err := m.WxjyEsu_5500.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7d
		i--
		dAtA[i] = 0x82
	}
	if m.WlstCom_3E84 != nil {
		{
			size, err := m.WlstCom_3E84.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xea
	}
	if m.WlstCom_3E81 != nil {
		{
			size, err := m.WlstCom_3E81.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xe2
	}
	if m.WlstCom_3E82 != nil {
		{
			size, err := m.WlstCom_3E82.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xda
	}
	if m.WlstCom_3E02 != nil {
		{
			size, err := m.WlstCom_3E02.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xd2
	}
	if m.WlstCom_3E01 != nil {
		{
			size, err := m.WlstCom_3E01.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xca
	}
	if m.WlstCom_0000 != nil {
		{
			size, err := m.WlstCom_0000.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xc2
	}
	if m.WlstTml != nil {
		{
			size, err := m.WlstTml.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa2
	}
	if m.Passthrough != nil {
		{
			size, err := m.Passthrough.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0x9a
	}
	if m.Syscmds != nil {
		{
			size, err := m.Syscmds.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Args != nil {
		{
			size, err := m.Args.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Head != nil {
		{
			size, err := m.Head.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SubmitAlarm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SubmitAlarm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SubmitAlarm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AlarmView) > 0 {
		for iNdEx := len(m.AlarmView) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AlarmView[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgWithCtrl(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	return len(dAtA) - i, nil
}

func (m *SubmitAlarm_AlarmView) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SubmitAlarm_AlarmView) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SubmitAlarm_AlarmView) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LoopName) > 0 {
		i -= len(m.LoopName)
		copy(dAtA[i:], m.LoopName)
		i = encodeVarintMsgWithCtrl(dAtA, i, uint64(len(m.LoopName)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.TmlName) > 0 {
		i -= len(m.TmlName)
		copy(dAtA[i:], m.TmlName)
		i = encodeVarintMsgWithCtrl(dAtA, i, uint64(len(m.TmlName)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.AlarmName) > 0 {
		i -= len(m.AlarmName)
		copy(dAtA[i:], m.AlarmName)
		i = encodeVarintMsgWithCtrl(dAtA, i, uint64(len(m.AlarmName)))
		i--
		dAtA[i] = 0x5a
	}
	if m.AlarmSrc != 0 {
		i = encodeVarintMsgWithCtrl(dAtA, i, uint64(m.AlarmSrc))
		i--
		dAtA[i] = 0x50
	}
	if m.IsAlarm != 0 {
		i = encodeVarintMsgWithCtrl(dAtA, i, uint64(m.IsAlarm))
		i--
		dAtA[i] = 0x48
	}
	if m.DtRemove != 0 {
		i = encodeVarintMsgWithCtrl(dAtA, i, uint64(m.DtRemove))
		i--
		dAtA[i] = 0x40
	}
	if m.ErrCount != 0 {
		i = encodeVarintMsgWithCtrl(dAtA, i, uint64(m.ErrCount))
		i--
		dAtA[i] = 0x30
	}
	if m.LampId != 0 {
		i = encodeVarintMsgWithCtrl(dAtA, i, uint64(m.LampId))
		i--
		dAtA[i] = 0x28
	}
	if m.LoopId != 0 {
		i = encodeVarintMsgWithCtrl(dAtA, i, uint64(m.LoopId))
		i--
		dAtA[i] = 0x20
	}
	if m.TmlId != 0 {
		i = encodeVarintMsgWithCtrl(dAtA, i, uint64(m.TmlId))
		i--
		dAtA[i] = 0x18
	}
	if m.ErrId != 0 {
		i = encodeVarintMsgWithCtrl(dAtA, i, uint64(m.ErrId))
		i--
		dAtA[i] = 0x10
	}
	if m.DtCreate != 0 {
		i = encodeVarintMsgWithCtrl(dAtA, i, uint64(m.DtCreate))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SubmitSettingChange) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SubmitSettingChange) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SubmitSettingChange) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TmlId) > 0 {
		dAtA32 := make([]byte, len(m.TmlId)*10)
		var j31 int
		for _, num1 := range m.TmlId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA32[j31] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j31++
			}
			dAtA32[j31] = uint8(num)
			j31++
		}
		i -= j31
		copy(dAtA[i:], dAtA32[:j31])
		i = encodeVarintMsgWithCtrl(dAtA, i, uint64(j31))
		i--
		dAtA[i] = 0x12
	}
	if m.SettingType != 0 {
		i = encodeVarintMsgWithCtrl(dAtA, i, uint64(m.SettingType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintMsgWithCtrl(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsgWithCtrl(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgWithCtrl) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Head != nil {
		l = m.Head.Size()
		n += 1 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.Args != nil {
		l = m.Args.Size()
		n += 1 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.Syscmds != nil {
		l = m.Syscmds.Size()
		n += 1 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.Passthrough != nil {
		l = m.Passthrough.Size()
		n += 2 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.WlstTml != nil {
		l = m.WlstTml.Size()
		n += 2 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.WlstCom_0000 != nil {
		l = m.WlstCom_0000.Size()
		n += 2 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.WlstCom_3E01 != nil {
		l = m.WlstCom_3E01.Size()
		n += 2 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.WlstCom_3E02 != nil {
		l = m.WlstCom_3E02.Size()
		n += 2 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.WlstCom_3E82 != nil {
		l = m.WlstCom_3E82.Size()
		n += 2 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.WlstCom_3E81 != nil {
		l = m.WlstCom_3E81.Size()
		n += 2 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.WlstCom_3E84 != nil {
		l = m.WlstCom_3E84.Size()
		n += 2 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.WxjyEsu_5500 != nil {
		l = m.WxjyEsu_5500.Size()
		n += 2 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.WxjyEsuD500 != nil {
		l = m.WxjyEsuD500.Size()
		n += 2 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.WxjyEsuD700 != nil {
		l = m.WxjyEsuD700.Size()
		n += 2 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.WxjyEsuD800 != nil {
		l = m.WxjyEsuD800.Size()
		n += 2 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.AhhfRtu_6804 != nil {
		l = m.AhhfRtu_6804.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.AhhfRtu_680A != nil {
		l = m.AhhfRtu_680A.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.BlkSlu_6891 != nil {
		l = m.BlkSlu_6891.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.BlkSlu_6892 != nil {
		l = m.BlkSlu_6892.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.BlkSlu_6887 != nil {
		l = m.BlkSlu_6887.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.BlkSlu_6888 != nil {
		l = m.BlkSlu_6888.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.BlkSlu_6895 != nil {
		l = m.BlkSlu_6895.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.BlkSlu_6896 != nil {
		l = m.BlkSlu_6896.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.BlkSlu_6889 != nil {
		l = m.BlkSlu_6889.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.BlkSlu_6890 != nil {
		l = m.BlkSlu_6890.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.BlkSlu_6893 != nil {
		l = m.BlkSlu_6893.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.BlkSlu_6894 != nil {
		l = m.BlkSlu_6894.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.YfDry_0300 != nil {
		l = m.YfDry_0300.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.YfDry_1005 != nil {
		l = m.YfDry_1005.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	if m.YfDry_1001 != nil {
		l = m.YfDry_1001.Size()
		n += 3 + l + sovMsgWithCtrl(uint64(l))
	}
	return n
}

func (m *SubmitAlarm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AlarmView) > 0 {
		for _, e := range m.AlarmView {
			l = e.Size()
			n += 1 + l + sovMsgWithCtrl(uint64(l))
		}
	}
	return n
}

func (m *SubmitAlarm_AlarmView) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DtCreate != 0 {
		n += 1 + sovMsgWithCtrl(uint64(m.DtCreate))
	}
	if m.ErrId != 0 {
		n += 1 + sovMsgWithCtrl(uint64(m.ErrId))
	}
	if m.TmlId != 0 {
		n += 1 + sovMsgWithCtrl(uint64(m.TmlId))
	}
	if m.LoopId != 0 {
		n += 1 + sovMsgWithCtrl(uint64(m.LoopId))
	}
	if m.LampId != 0 {
		n += 1 + sovMsgWithCtrl(uint64(m.LampId))
	}
	if m.ErrCount != 0 {
		n += 1 + sovMsgWithCtrl(uint64(m.ErrCount))
	}
	if m.DtRemove != 0 {
		n += 1 + sovMsgWithCtrl(uint64(m.DtRemove))
	}
	if m.IsAlarm != 0 {
		n += 1 + sovMsgWithCtrl(uint64(m.IsAlarm))
	}
	if m.AlarmSrc != 0 {
		n += 1 + sovMsgWithCtrl(uint64(m.AlarmSrc))
	}
	l = len(m.AlarmName)
	if l > 0 {
		n += 1 + l + sovMsgWithCtrl(uint64(l))
	}
	l = len(m.TmlName)
	if l > 0 {
		n += 1 + l + sovMsgWithCtrl(uint64(l))
	}
	l = len(m.LoopName)
	if l > 0 {
		n += 1 + l + sovMsgWithCtrl(uint64(l))
	}
	return n
}

func (m *SubmitSettingChange) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SettingType != 0 {
		n += 1 + sovMsgWithCtrl(uint64(m.SettingType))
	}
	if len(m.TmlId) > 0 {
		l = 0
		for _, e := range m.TmlId {
			l += sovMsgWithCtrl(uint64(e))
		}
		n += 1 + sovMsgWithCtrl(uint64(l)) + l
	}
	return n
}

func sovMsgWithCtrl(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsgWithCtrl(x uint64) (n int) {
	return sovMsgWithCtrl(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgWithCtrl) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgWithCtrl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithCtrl: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithCtrl: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Head", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Head == nil {
				m.Head = &Head{}
			}
			if err := m.Head.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Args", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Args == nil {
				m.Args = &Args{}
			}
			if err := m.Args.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Syscmds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Syscmds == nil {
				m.Syscmds = &SysCommands{}
			}
			if err := m.Syscmds.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 99:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Passthrough", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Passthrough == nil {
				m.Passthrough = &Passthrough{}
			}
			if err := m.Passthrough.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 100:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WlstTml", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WlstTml == nil {
				m.WlstTml = &WlstTerminal{}
			}
			if err := m.WlstTml.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1000:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WlstCom_0000", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WlstCom_0000 == nil {
				m.WlstCom_0000 = &WlstCom_0000{}
			}
			if err := m.WlstCom_0000.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1001:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WlstCom_3E01", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WlstCom_3E01 == nil {
				m.WlstCom_3E01 = &WlstCom_3E01{}
			}
			if err := m.WlstCom_3E01.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1002:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WlstCom_3E02", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WlstCom_3E02 == nil {
				m.WlstCom_3E02 = &WlstCom_3E02{}
			}
			if err := m.WlstCom_3E02.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1003:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WlstCom_3E82", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WlstCom_3E82 == nil {
				m.WlstCom_3E82 = &WlstCom_3E82{}
			}
			if err := m.WlstCom_3E82.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1004:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WlstCom_3E81", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WlstCom_3E81 == nil {
				m.WlstCom_3E81 = &WlstCom_3E02{}
			}
			if err := m.WlstCom_3E81.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1005:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WlstCom_3E84", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WlstCom_3E84 == nil {
				m.WlstCom_3E84 = &WlstCom_3E84{}
			}
			if err := m.WlstCom_3E84.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2000:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WxjyEsu_5500", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WxjyEsu_5500 == nil {
				m.WxjyEsu_5500 = &WxjyEsu_5500{}
			}
			if err := m.WxjyEsu_5500.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2001:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WxjyEsuD500", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WxjyEsuD500 == nil {
				m.WxjyEsuD500 = &WxjyEsu_5500{}
			}
			if err := m.WxjyEsuD500.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2002:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WxjyEsuD700", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WxjyEsuD700 == nil {
				m.WxjyEsuD700 = &WxjyEsuD700{}
			}
			if err := m.WxjyEsuD700.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2003:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WxjyEsuD800", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WxjyEsuD800 == nil {
				m.WxjyEsuD800 = &WxjyEsuD800{}
			}
			if err := m.WxjyEsuD800.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AhhfRtu_6804", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AhhfRtu_6804 == nil {
				m.AhhfRtu_6804 = &AhhfRtu_6804{}
			}
			if err := m.AhhfRtu_6804.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AhhfRtu_680A", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AhhfRtu_680A == nil {
				m.AhhfRtu_680A = &AhhfRtu_6804{}
			}
			if err := m.AhhfRtu_680A.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2201:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlkSlu_6891", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BlkSlu_6891 == nil {
				m.BlkSlu_6891 = &BlkSlu_6891{}
			}
			if err := m.BlkSlu_6891.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2202:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlkSlu_6892", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BlkSlu_6892 == nil {
				m.BlkSlu_6892 = &BlkSlu_6892{}
			}
			if err := m.BlkSlu_6892.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2203:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlkSlu_6887", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BlkSlu_6887 == nil {
				m.BlkSlu_6887 = &BlkSlu_6891{}
			}
			if err := m.BlkSlu_6887.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2204:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlkSlu_6888", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BlkSlu_6888 == nil {
				m.BlkSlu_6888 = &BlkSlu_6891{}
			}
			if err := m.BlkSlu_6888.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2205:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlkSlu_6895", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BlkSlu_6895 == nil {
				m.BlkSlu_6895 = &BlkSlu_6895{}
			}
			if err := m.BlkSlu_6895.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2206:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlkSlu_6896", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BlkSlu_6896 == nil {
				m.BlkSlu_6896 = &BlkSlu_6895{}
			}
			if err := m.BlkSlu_6896.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2207:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlkSlu_6889", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BlkSlu_6889 == nil {
				m.BlkSlu_6889 = &BlkSlu_6895{}
			}
			if err := m.BlkSlu_6889.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2208:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlkSlu_6890", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BlkSlu_6890 == nil {
				m.BlkSlu_6890 = &BlkSlu_6895{}
			}
			if err := m.BlkSlu_6890.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2209:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlkSlu_6893", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BlkSlu_6893 == nil {
				m.BlkSlu_6893 = &BlkSlu_6891{}
			}
			if err := m.BlkSlu_6893.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2210:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlkSlu_6894", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BlkSlu_6894 == nil {
				m.BlkSlu_6894 = &BlkSlu_6891{}
			}
			if err := m.BlkSlu_6894.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2300:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field YfDry_0300", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.YfDry_0300 == nil {
				m.YfDry_0300 = &YfDry_0300{}
			}
			if err := m.YfDry_0300.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2301:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field YfDry_1005", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.YfDry_1005 == nil {
				m.YfDry_1005 = &YfDry_1005{}
			}
			if err := m.YfDry_1005.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2302:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field YfDry_1001", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.YfDry_1001 == nil {
				m.YfDry_1001 = &YfDry_1001{}
			}
			if err := m.YfDry_1001.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgWithCtrl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SubmitAlarm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgWithCtrl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SubmitAlarm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SubmitAlarm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AlarmView", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AlarmView = append(m.AlarmView, &SubmitAlarm_AlarmView{})
			if err := m.AlarmView[len(m.AlarmView)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgWithCtrl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SubmitAlarm_AlarmView) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgWithCtrl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AlarmView: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AlarmView: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DtCreate", wireType)
			}
			m.DtCreate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DtCreate |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrId", wireType)
			}
			m.ErrId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TmlId", wireType)
			}
			m.TmlId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TmlId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoopId", wireType)
			}
			m.LoopId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LoopId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LampId", wireType)
			}
			m.LampId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LampId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrCount", wireType)
			}
			m.ErrCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DtRemove", wireType)
			}
			m.DtRemove = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DtRemove |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAlarm", wireType)
			}
			m.IsAlarm = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsAlarm |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AlarmSrc", wireType)
			}
			m.AlarmSrc = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AlarmSrc |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AlarmName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AlarmName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TmlName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TmlName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoopName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoopName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgWithCtrl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SubmitSettingChange) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgWithCtrl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SubmitSettingChange: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SubmitSettingChange: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SettingType", wireType)
			}
			m.SettingType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SettingType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgWithCtrl
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TmlId = append(m.TmlId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgWithCtrl
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMsgWithCtrl
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMsgWithCtrl
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.TmlId) == 0 {
					m.TmlId = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMsgWithCtrl
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TmlId = append(m.TmlId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TmlId", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgWithCtrl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgWithCtrl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsgWithCtrl(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsgWithCtrl
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgWithCtrl
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsgWithCtrl
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMsgWithCtrl
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMsgWithCtrl
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMsgWithCtrl        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsgWithCtrl          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMsgWithCtrl = fmt.Errorf("proto: unexpected end of group")
)
